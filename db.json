{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/sakura/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/sakura/source/warn.html","path":"warn.html","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/APlayer.min.css","path":"css/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/bangumi.css","path":"css/bangumi.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/jquery.fancybox.min.css","path":"css/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/font.css","path":"css/font.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/insight.styl","path":"css/insight.styl","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/zoom.css","path":"css/zoom.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/sharejs.css","path":"css/sharejs.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/InsightSearch.js","path":"js/InsightSearch.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/APlayer.min.js","path":"js/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/zoom.min.js","path":"js/zoom.min.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/love.js","path":"js/love.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/LICENSE","path":"live2d-widget/LICENSE","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/sakura-app.js","path":"js/sakura-app.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/README.md","path":"live2d-widget/README.md","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/autoload.js","path":"live2d-widget/autoload.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/waifu-tips.js","path":"live2d-widget/waifu-tips.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/waifu.css","path":"live2d-widget/waifu.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/lib.min.css","path":"css/lib.min.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/waifu-tips.json","path":"live2d-widget/waifu-tips.json","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/botui.js","path":"js/botui.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/jquery.fancybox.min.js","path":"js/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/icon.css","path":"fonts/SAKURASO.old/icon.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso-symbol.svg","path":"fonts/SAKURASO.old/sakuraso-symbol.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.svg","path":"fonts/SAKURASO.old/sakuraso.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.ttf","path":"fonts/SAKURASO.old/sakuraso.ttf","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.woff","path":"fonts/SAKURASO.old/sakuraso.woff","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/BTCQR.png","path":"images/donate/BTCQR.png","modified":1,"renderable":1},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.eot","path":"fonts/SAKURASO.old/sakuraso.eot","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/WeChanQR.jpg","path":"images/donate/WeChanQR.jpg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/alipay.svg","path":"images/donate/alipay.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/bitcoin.svg","path":"images/donate/bitcoin.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/github.svg","path":"images/donate/github.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/like.svg","path":"images/donate/like.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/paypal.svg","path":"images/donate/paypal.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/wechat.svg","path":"images/donate/wechat.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/WeChanSQ.jpg","path":"images/donate/WeChanSQ.jpg","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-1.png","path":"live2d-widget/assets/screenshot-1.png","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/assets/browserstack.svg","path":"live2d-widget/assets/browserstack.svg","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/demo/demo1.html","path":"live2d-widget/demo/demo1.html","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/live2d.min.js","path":"live2d-widget/live2d.min.js","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(3).jpg.webp","path":"images/cover/(3).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-3.png","path":"live2d-widget/assets/screenshot-3.png","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-2.png","path":"live2d-widget/assets/screenshot-2.png","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/donate/AliPayQR.jpg","path":"images/donate/AliPayQR.jpg","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(0).jpg.webp","path":"images/cover/(0).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(2).jpg.webp","path":"images/cover/(2).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(1).jpg.webp","path":"images/cover/(1).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/live2d-widget/demo/demo2.html","path":"live2d-widget/demo/demo2.html","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(8).jpg.webp","path":"images/cover/(8).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(7).jpg.webp","path":"images/cover/(7).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(4).jpg.webp","path":"images/cover/(4).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(6).jpg.webp","path":"images/cover/(6).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/images/cover/(5).jpg.webp","path":"images/cover/(5).jpg.webp","modified":1,"renderable":1},{"_id":"themes/sakura/source/js/lib.min.js","path":"js/lib.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/sakura/README.zhCN.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581671483000},{"_id":"themes/sakura/_config.yml","hash":"059e0174a6606f19414e5641fad1ce426c4425c5","modified":1583851166515},{"_id":"themes/sakura/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581671483000},{"_id":"themes/sakura/.travis.yml","hash":"59da7c4691ba01d4c05bd64e058551171fe649b6","modified":1581671483000},{"_id":"themes/sakura/CNAME","hash":"6b332d1ef5947dadc6e394dd1445eb3596eddfe6","modified":1581671483000},{"_id":"themes/sakura/LICENSE","hash":"e84291eaaeb4a02004d4aa6a504cbf9475f5c562","modified":1581671483000},{"_id":"themes/sakura/package.json","hash":"ec5fa23203039ece9acda53dfac3710b371bd401","modified":1581671483000},{"_id":"themes/sakura/languages/en.yml","hash":"38044728f53054310a9061bdd385d6b524f46e78","modified":1581671483000},{"_id":"themes/sakura/languages/zh-cn.yml","hash":"4680e36fbafd30f476c1d404d1f46e125e5a13bd","modified":1583848497150},{"_id":"source/client/index.md","hash":"58f75fe976be9960568719e5197322117b8a9607","modified":1582939165940},{"_id":"source/bangumi/index.md","hash":"0399fd5f1f28b13d520a83d70a679ff79d277938","modified":1582939165940},{"_id":"source/donate/index.md","hash":"42b67e41015c3a7e0d21c609f4dd7c754803edbf","modified":1582939165956},{"_id":"source/comment/index.md","hash":"179f86e2ef6e9144b623f6751df5ad0dacf48707","modified":1582939165940},{"_id":"source/about/index.md","hash":"9039b196fefdb6e22c533ee663db970356713717","modified":1582939165940},{"_id":"source/lab/index.md","hash":"887f1d6fadad1dd9855cae2a66a3c8baad3da1ce","modified":1582939165956},{"_id":"source/rss/index.md","hash":"8bb87d560db91a8d8f74dc1e13e9e446642573d1","modified":1582939165956},{"_id":"source/links/index.md","hash":"fb622110250172a30ae16bbbe89bdfb1c6f43c29","modified":1582939165956},{"_id":"source/music/index.md","hash":"c5526a48f9c0a119c909f10fc8ca4630653161d3","modified":1583477492615},{"_id":"source/tags/index.md","hash":"50ad096dea315bae2e287fb92ec1f0be536a930e","modified":1582939165956},{"_id":"source/theme-sakura/index.md","hash":"ba05d96e69e687cdac4dd9dba064ec35646681b7","modified":1582939165956},{"_id":"themes/sakura/layout/bangumi.ejs","hash":"c51b5bd3cae5211e6902dadaf3b40969b584e84f","modified":1581671483000},{"_id":"source/video/index.md","hash":"032d9d682f7320f7295b792745d0b60c6c7dde8c","modified":1582939165956},{"_id":"themes/sakura/layout/archive.ejs","hash":"5793d8e23173f5a3308bf6718788b34def54eb1a","modified":1581671483000},{"_id":"themes/sakura/layout/donate.ejs","hash":"d0234885188686e883bec3e79d97f4128224793d","modified":1581671483000},{"_id":"themes/sakura/layout/index.ejs","hash":"f6b495e2080cad0830f0e2d82fd2d7071bb1ede9","modified":1582871326786},{"_id":"themes/sakura/layout/category.ejs","hash":"b76d8c1db402ea875c24898ef35f797e75e2b20c","modified":1581671483000},{"_id":"themes/sakura/layout/page.ejs","hash":"4a2ddc7c5868279d368a527a340a7d7fddeb975c","modified":1581671483000},{"_id":"themes/sakura/layout/layout.ejs","hash":"2f793ba2a35e5739a5f2e995130ceaec7fda1186","modified":1583810903599},{"_id":"themes/sakura/layout/post.ejs","hash":"32457bc480205dd9be7c3bebbd9b04beb2a60992","modified":1581671483000},{"_id":"themes/sakura/layout/links.ejs","hash":"d9ec0fa1ea9fb87abcd5fd53ea3cd591d40cc1cb","modified":1581671483000},{"_id":"themes/sakura/source/404.html","hash":"9fc63f250573812d0d964247b2358fec041f328a","modified":1581671483000},{"_id":"themes/sakura/source/warn.html","hash":"1a2e9b6013fdf6b22f3790feffcc72533be385dd","modified":1581671483000},{"_id":"source/_posts/1.Hexo-Theme-Sakura.md","hash":"f821ff09fa7f4e984df6caf1a82c8b75a23002af","modified":1583846587884},{"_id":"themes/sakura/layout/tag.ejs","hash":"42150204315951aff03fc14d0dda6f0400313260","modified":1581671483000},{"_id":"source/_posts/11.单片机开发板引脚图.md","hash":"86e3cc64d2494e7fd942d54ab36a2c0612f47319","modified":1583846826218},{"_id":"source/_posts/12.数据结构与算法之排序.md","hash":"17aca1a75ecc4e5f8ae9fa92cceeb7df9d94a6d0","modified":1583837049049},{"_id":"source/_posts/10.C语言之字节序.md","hash":"8ff6e502b65f59417210d4ed81fa2b063f20c92e","modified":1583846779383},{"_id":"source/_posts/3.小白入门gitee（码云）.md","hash":"b9f9c0a4a08218696f6bdf7b6b1aa14567dcc1e7","modified":1583846627871},{"_id":"source/_posts/13.hexo+sakura主题美化合集.md","hash":"1e71057009b1ee03318d18f709fcde656c4b01b6","modified":1583846847940},{"_id":"source/_posts/4.jsDeliver+github打造属于自己的图床.md","hash":"b7a36bbccd0ebfac1790bf7af6a02c81cb22b2a6","modified":1583846658034},{"_id":"source/_posts/2.小白入门 github.md","hash":"a2961ffa9f4635d3a24636e6962f9bd3101ae747","modified":1583846608306},{"_id":"source/_posts/7.玩转浏览器黑科技.md","hash":"77d0eb7a336732dd48cbb5cda0af9349e4af3d53","modified":1583846733202},{"_id":"source/_posts/5.PicGo+jsdelivr+github打造私人图床.md","hash":"92bd3135c4d33762a22c73578d5c76124b7f5057","modified":1583846556049},{"_id":"source/_posts/8.轻松入手Markdown编程.md","hash":"ff30531ea78c329239ca0dba67fe62a2cff9c2b2","modified":1583846748632},{"_id":"source/_posts/9.c语言之字符串处理函数的实现.md","hash":"1e11bf0b5d9298cc6477de58b6ffdc987c15dedf","modified":1583846765456},{"_id":"source/_posts/6.hexo+gitee(码云)搭建个人博客避开所有坑.md","hash":"27c3d85b681e62807efa06b3d7c23a21b9d6fc40","modified":1583846677348},{"_id":"themes/sakura/layout/_partial/_page.ejs","hash":"c438ab0fb6d3310e3c568e3944a770af746e6d59","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/_post.ejs","hash":"ba480fd3b4c6997acf10c14f489c55f5ccc6da22","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/aplayer.ejs","hash":"05324cecb38f94609b298a1168bc7d8630255c4d","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/archive.ejs","hash":"280bf7a2996d71dafc62e4fe9ee2defb57ed8b12","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/category-archive.ejs","hash":"6c18fb5641fd12d9ebc56814bbfae0d075aa0cd2","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/comment.ejs","hash":"881846e8e5a73495e7ebe307854d3ad5eeabde84","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/head.ejs","hash":"783263f2793efa4391191bce65049806444b4a95","modified":1583811020397},{"_id":"themes/sakura/layout/_partial/header.ejs","hash":"66943be8bf726c5215120a744f451579a540d439","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/skin-list.ejs","hash":"f6726e2c4cb9ed9a6cd06d533dd586e2b82c6fd1","modified":1582879217113},{"_id":"themes/sakura/layout/_partial/footer.ejs","hash":"542f67a3a39e2160bdd2bf246329c03c921fc94c","modified":1583811193928},{"_id":"themes/sakura/layout/_partial/headertop.ejs","hash":"fc33a1571bac1e1371bc9a8a05eee799360dcf54","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/startdash.ejs","hash":"6f9180b05acf78cfa73ecfa16805af1d76ab805a","modified":1583475528326},{"_id":"themes/sakura/layout/_partial/skin-btn.ejs","hash":"ba09702ecb460322c320119552eaba6fd8530b62","modified":1582879162083},{"_id":"themes/sakura/layout/_widget/category-items.ejs","hash":"8cc3456176c0e21060ad27d822d61250e1ead2bf","modified":1581671483000},{"_id":"themes/sakura/layout/_partial/mheader.ejs","hash":"de10fa51ddd773d469e36bbb6ea21b583708e5b4","modified":1581671483000},{"_id":"themes/sakura/layout/_widget/index-items.ejs","hash":"746a989b93c912607eaf4203c33369353d7f0734","modified":1581671483000},{"_id":"themes/sakura/source/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1581671483000},{"_id":"themes/sakura/layout/_widget/common-article.ejs","hash":"510ac7be1c30feba1afbf1885a25e7b314189c85","modified":1581671483000},{"_id":"themes/sakura/source/css/bangumi.css","hash":"4d30d793a8813b14c55cee12d4a5adbb1cc7c535","modified":1581671483000},{"_id":"themes/sakura/source/css/donate.css","hash":"fb5b21bae281772ea4e1df250d1d118edd8fe3ec","modified":1581671483000},{"_id":"themes/sakura/layout/_widget/common-page.ejs","hash":"b89598ad9411aaf114112450266e7636f002af8c","modified":1581671483000},{"_id":"themes/sakura/source/css/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1581671483000},{"_id":"themes/sakura/source/css/font.css","hash":"714d3b9fbd98fdc398ce9aa60ec1d60d50628933","modified":1581671483000},{"_id":"themes/sakura/source/css/insight.styl","hash":"5c330fa26c0c2c7326f3093f17625c7de0181795","modified":1581671483000},{"_id":"themes/sakura/source/css/zoom.css","hash":"e6feedd50deaf58cd27b33ed99f04f479c9fba31","modified":1581671483000},{"_id":"themes/sakura/source/images/favicon.ico","hash":"124582ab19fd5de72b6f96f1faaeef3fe5e6926e","modified":1581671483000},{"_id":"themes/sakura/source/fonts/iconfont.eot","hash":"a6d4a6cbd2e7e0ece89973f4c848c7209b062120","modified":1581671483000},{"_id":"themes/sakura/source/fonts/iconfont.svg","hash":"f469a7fe346fc3665d70dde9e4eb81331f504b5f","modified":1581671483000},{"_id":"themes/sakura/source/fonts/iconfont.woff","hash":"7222cdc09d819e340fd8cea8498d36270b0400b1","modified":1581671483000},{"_id":"themes/sakura/source/fonts/iconfont.ttf","hash":"5454ae941eeeda1fee8a1b9ef608dae39f58288e","modified":1581671483000},{"_id":"themes/sakura/source/css/sharejs.css","hash":"62b3ea2384cdf4f9dbce34e17f660856d51a605c","modified":1581671483000},{"_id":"themes/sakura/source/js/InsightSearch.js","hash":"3acae0bd3b55b16b93006466942de81b2a27b011","modified":1581671483000},{"_id":"themes/sakura/source/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1581671483000},{"_id":"themes/sakura/source/js/zoom.min.js","hash":"0b377c432d448cfc09c9e451128a48810a250926","modified":1581671483000},{"_id":"themes/sakura/source/js/love.js","hash":"614edb2581833429540f3a24c0e6f788b76cc353","modified":1583673053995},{"_id":"themes/sakura/source/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1582898555000},{"_id":"themes/sakura/source/js/sakura-app.js","hash":"46dc2e5334ac8b5a556382b0705e1a99ca97b857","modified":1581671483000},{"_id":"themes/sakura/source/live2d-widget/README.md","hash":"9fd2b3b92e215c4dbc64edeaa3b80bde07a46669","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/autoload.js","hash":"eccacd5f2525fbcdc384533ef7fe922c0ae31cf2","modified":1583761983835},{"_id":"themes/sakura/source/live2d-widget/waifu-tips.js","hash":"8d5043ee5aa1cba232eafec8f2af0a1c93ec7927","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/waifu.css","hash":"d86f77fb9a9c06fe5ad0e73bc120235ad826da17","modified":1582898555000},{"_id":"themes/sakura/source/css/lib.min.css","hash":"3c4c8e1006dcc8e57e4a02e9d735a52c2a95cc72","modified":1581671483000},{"_id":"themes/sakura/source/live2d-widget/waifu-tips.json","hash":"8669ba9427031a4b5e84ebdc28f8fe7cdc34097a","modified":1582898555000},{"_id":"themes/sakura/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1581671483000},{"_id":"themes/sakura/source/js/botui.js","hash":"7fd0a8b3a214c7840d4b1297195f3e9282b5cbb9","modified":1581671483000},{"_id":"themes/sakura/source/js/jquery.fancybox.min.js","hash":"9e2b205a88c949fc8e6a7550d502dabe2b1ab4c0","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/icon.css","hash":"cca92568d623792d63db3706a705d3c77412d025","modified":1581671483000},{"_id":"themes/sakura/layout/_widget/search/insight.ejs","hash":"072cc5dbd9d3c818a353cfd55ad7ec0e535155b6","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso-symbol.svg","hash":"dd2a3d764889d23575a33251ff64761fb4bbb317","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.svg","hash":"6eb5c281f77452342361ed3352f62e2dec0f3b5c","modified":1581671483000},{"_id":"themes/sakura/source/css/style.css","hash":"a793757f33429481d5595029ba4660e6b0fc8464","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.ttf","hash":"91025ed91b9a317ddc835cc88d660c193a6c0228","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.woff","hash":"00856819a670a578f78ffa2cae66717e21b24b36","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/BTCQR.png","hash":"1abc7fa494a5bb9765dee1004f544ad962d46c91","modified":1581671483000},{"_id":"themes/sakura/source/fonts/SAKURASO.old/sakuraso.eot","hash":"509315fee1cbfcbfd9beec880032f75532df38af","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/WeChanQR.jpg","hash":"54120922bd9e99bcd7f7d22a6f299c15b4d60a9d","modified":1583247689221},{"_id":"themes/sakura/source/images/donate/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1581671483000},{"_id":"themes/sakura/source/images/donate/WeChanSQ.jpg","hash":"8b131feb362ae047da3fc95bfc2e6fc8bb2b64b4","modified":1583458976598},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/assets/browserstack.svg","hash":"1ae93ba806a84d276c788beb8cd20243af94404d","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/demo/demo1.html","hash":"2617b8aa4c4728d38a8f062465304e5433056abc","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/live2d.min.js","hash":"22365399514b0729c9b787d6a3e782488f1aac95","modified":1582898555000},{"_id":"themes/sakura/source/images/cover/(3).jpg.webp","hash":"96ff977ce087a71a020e4a75a7e3516ade3fee19","modified":1581671483000},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-3.png","hash":"ead66aa3edb390205081a0c8625a49844470a090","modified":1582898555000},{"_id":"themes/sakura/source/live2d-widget/assets/screenshot-2.png","hash":"e766842b0f064efc148613c41f43a8a905c39557","modified":1582898555000},{"_id":"themes/sakura/source/images/donate/AliPayQR.jpg","hash":"cb903bae1f91e0d199725fae424251ef8f343d6d","modified":1583247692830},{"_id":"themes/sakura/source/images/cover/(0).jpg.webp","hash":"007d0c26d29a48d7ce45a5dfe91b496d41f771da","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(2).jpg.webp","hash":"a28c79979c8a3950a8a53fec07cd1a6ff446615c","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(1).jpg.webp","hash":"007d0c26d29a48d7ce45a5dfe91b496d41f771da","modified":1581671483000},{"_id":"themes/sakura/source/live2d-widget/demo/demo2.html","hash":"0a11464708aaef141126799bf0697b7794f42e33","modified":1582898555000},{"_id":"themes/sakura/source/images/cover/(8).jpg.webp","hash":"4ffcfb8c695294e8d84cee0e7b5be0c024e5dfa7","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(7).jpg.webp","hash":"280a5c05256dca4fbea5af1bae208c19efce73a4","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(4).jpg.webp","hash":"22bc8dfdcba509032f270fb68f9168efb39bb373","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(6).jpg.webp","hash":"25267df7614e852d8c4ba229e9c77c5453e744bb","modified":1581671483000},{"_id":"themes/sakura/source/images/cover/(5).jpg.webp","hash":"ad0f06e40504f4b86b3b12f6b2c86e9f07da01ea","modified":1581671483000},{"_id":"themes/sakura/source/js/lib.min.js","hash":"28f7ece281fef37370c561b7bca5285776ae8fd9","modified":1581671483000},{"_id":"public/atom.xml","hash":"88a612ddca7662e24db80a33eaac4ee1d2bfaf02","modified":1583851272490},{"_id":"public/search.xml","hash":"09482a7614806366aab8f45ce496c36a8bcdbddb","modified":1583851272490},{"_id":"public/client/index.html","hash":"aa8f60ef9c69b6fd9c6717e4579becc543ee59f1","modified":1583851272490},{"_id":"public/donate/index.html","hash":"0764f035073dea64405239c8240072ebc4ebe7af","modified":1583851272490},{"_id":"public/bangumi/index.html","hash":"4457c8e4e83af43f74d3da85802faad99795b131","modified":1583851272490},{"_id":"public/comment/index.html","hash":"b7ab8a568a4bf0640920e00653bb7888715691e6","modified":1583851272490},{"_id":"public/about/index.html","hash":"de9a4c58c2023342e1e4217139786122c90e5172","modified":1583851272490},{"_id":"public/lab/index.html","hash":"e8166d873504c64ce99b46ea27f0e751b9ac69bb","modified":1583851272490},{"_id":"public/rss/index.html","hash":"0908628c4167895bd7597d3c6ab7c4eeb11fc7db","modified":1583851272490},{"_id":"public/music/index.html","hash":"e0326c9ec6340a9aa3b6ae11d6e543abeaa5657d","modified":1583851272490},{"_id":"public/links/index.html","hash":"9008342c7bee6e9d782affad936d5fcec0eaaab3","modified":1583851272490},{"_id":"public/tags/index.html","hash":"d8dbd2b4ceac9578094e9fa559e9f1ce489bdcf2","modified":1583851272490},{"_id":"public/theme-sakura/index.html","hash":"85b6a4d3ca43daa2df163a7ac72f2831021399d6","modified":1583851272490},{"_id":"public/video/index.html","hash":"ae9481083a0f999983ab8766b771f7790f8cd985","modified":1583851272490},{"_id":"public/2020/02/20/13.hexo+sakura主题美化合集/index.html","hash":"844c9286e8cb42e36a686af0d6b66e8d11960174","modified":1583851272490},{"_id":"public/2020/02/15/12.数据结构与算法之排序/index.html","hash":"a00299cb894d79e56c4c37555812beb3fee148f3","modified":1583851272490},{"_id":"public/2020/02/12/11.单片机开发板引脚图/index.html","hash":"4786e5306aa8580a6a544f5db217b61be0f7b258","modified":1583851272490},{"_id":"public/2020/02/10/10.C语言之字节序/index.html","hash":"1e84b7951fa5b584131158bbbdc3d0ec16782e14","modified":1583851272490},{"_id":"public/2020/02/09/9.c语言之字符串处理函数的实现/index.html","hash":"797b27668501580ecfa47824df96bf0871b1aa90","modified":1583851272490},{"_id":"public/2020/02/07/8.轻松入手Markdown编程/index.html","hash":"fd9e2f8a1aaf699756d040046ec844dd54915dac","modified":1583851272490},{"_id":"public/2020/02/06/7.玩转浏览器黑科技/index.html","hash":"c69310800a948d66df00b0617fc74b2c12c285e8","modified":1583851272490},{"_id":"public/2020/02/05/6.hexo+gitee(码云)搭建个人博客避开所有坑/index.html","hash":"9439348a61fe8423d47a65c1a575f24c67878ae8","modified":1583851272490},{"_id":"public/2020/02/04/5.PicGo+jsdelivr+github打造私人图床/index.html","hash":"d0416fa0fe05b7fb45b406f068f6b33e9797fc77","modified":1583851272490},{"_id":"public/2020/02/03/4.jsDeliver+github打造属于自己的图床/index.html","hash":"57ba118ef820beaaa3a1c045fe6543caecc6bd81","modified":1583851272490},{"_id":"public/2020/02/02/3.小白入门gitee（码云）/index.html","hash":"cd4645f93f85d079a47490d09750ecd71ec2d4f8","modified":1583851272490},{"_id":"public/2020/02/01/2.小白入门 github/index.html","hash":"c33498a8e61b64bcd118ae565ca83d93da23f497","modified":1583851272490},{"_id":"public/2020/01/01/1.Hexo-Theme-Sakura/index.html","hash":"638d60cf04051c403081d7daaccd8d4ad4b5c5e3","modified":1583851272490},{"_id":"public/archives/index.html","hash":"b6c84772651f07365485bdeb14cc25f728f398d1","modified":1583851272490},{"_id":"public/archives/2020/index.html","hash":"83a0e88fa8b6e8a858d12e54d3a565ea8205c3f4","modified":1583851272490},{"_id":"public/archives/2020/01/index.html","hash":"8c4195803161f5931eb4d4be26146a659f455f20","modified":1583851272490},{"_id":"public/archives/2020/02/index.html","hash":"5c9b5c58986c958b97e3f51130d91bb910238c77","modified":1583851272490},{"_id":"public/categories/技术/index.html","hash":"c8135fee2a546c3443bf4a4022cdfc22253cc0bb","modified":1583851272490},{"_id":"public/categories/技术/page/2/index.html","hash":"da02219765202b488bc62cd28085ce393fe9427f","modified":1583851272490},{"_id":"public/categories/资源/index.html","hash":"95b09b62659a233546882ebd3cb1643b6a63fb95","modified":1583851272490},{"_id":"public/index.html","hash":"e69c2139d355c47fbe43bd768f0360d1b9c2d42e","modified":1583851272490},{"_id":"public/page/2/index.html","hash":"851a274b91d720234152db3b6e74a0b35d137f10","modified":1583851272490},{"_id":"public/tags/前端/index.html","hash":"e82cf55bd02304ae6ce656d0ba0b970d42db723c","modified":1583851272490},{"_id":"public/tags/物联网/index.html","hash":"d7186b9318b98926d37961de6992506bca55146e","modified":1583851272490},{"_id":"public/tags/嵌入式/index.html","hash":"ce6a4cb1e64c9484b36dbb0110a3604efc8c1507","modified":1583851272490},{"_id":"public/tags/C语言/index.html","hash":"ad2c8531994eb426d42e7244ecd019bd483cc3fd","modified":1583851272490},{"_id":"public/tags/软件应用/index.html","hash":"9c9a69fdfa7998480469692145ff7d826a0cfaf4","modified":1583851272490},{"_id":"public/images/favicon.ico","hash":"124582ab19fd5de72b6f96f1faaeef3fe5e6926e","modified":1583851272490},{"_id":"public/fonts/iconfont.eot","hash":"a6d4a6cbd2e7e0ece89973f4c848c7209b062120","modified":1583851272490},{"_id":"public/fonts/iconfont.svg","hash":"f469a7fe346fc3665d70dde9e4eb81331f504b5f","modified":1583851272490},{"_id":"public/fonts/iconfont.woff","hash":"7222cdc09d819e340fd8cea8498d36270b0400b1","modified":1583851272490},{"_id":"public/fonts/iconfont.ttf","hash":"5454ae941eeeda1fee8a1b9ef608dae39f58288e","modified":1583851272490},{"_id":"public/live2d-widget/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/sakuraso-symbol.svg","hash":"dd2a3d764889d23575a33251ff64761fb4bbb317","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/sakuraso.svg","hash":"6eb5c281f77452342361ed3352f62e2dec0f3b5c","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/sakuraso.ttf","hash":"91025ed91b9a317ddc835cc88d660c193a6c0228","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/sakuraso.woff","hash":"00856819a670a578f78ffa2cae66717e21b24b36","modified":1583851272490},{"_id":"public/images/donate/BTCQR.png","hash":"1abc7fa494a5bb9765dee1004f544ad962d46c91","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/sakuraso.eot","hash":"509315fee1cbfcbfd9beec880032f75532df38af","modified":1583851272490},{"_id":"public/images/donate/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1583851272490},{"_id":"public/images/donate/WeChanQR.jpg","hash":"54120922bd9e99bcd7f7d22a6f299c15b4d60a9d","modified":1583851272490},{"_id":"public/images/donate/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1583851272490},{"_id":"public/images/donate/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1583851272490},{"_id":"public/images/donate/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1583851272490},{"_id":"public/images/donate/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1583851272490},{"_id":"public/images/donate/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1583851272490},{"_id":"public/images/donate/WeChanSQ.jpg","hash":"8b131feb362ae047da3fc95bfc2e6fc8bb2b64b4","modified":1583851272490},{"_id":"public/live2d-widget/assets/screenshot-1.png","hash":"4bd4d97a1fcaa5deb3cea1c0a102a895a15af32f","modified":1583851272490},{"_id":"public/live2d-widget/assets/browserstack.svg","hash":"1ae93ba806a84d276c788beb8cd20243af94404d","modified":1583851272490},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1583851272490},{"_id":"public/images/cover/(3).jpg.webp","hash":"96ff977ce087a71a020e4a75a7e3516ade3fee19","modified":1583851272490},{"_id":"public/live2d-widget/assets/screenshot-3.png","hash":"ead66aa3edb390205081a0c8625a49844470a090","modified":1583851272490},{"_id":"public/live2d-widget/assets/screenshot-2.png","hash":"e766842b0f064efc148613c41f43a8a905c39557","modified":1583851272490},{"_id":"public/images/donate/AliPayQR.jpg","hash":"cb903bae1f91e0d199725fae424251ef8f343d6d","modified":1583851272490},{"_id":"public/images/cover/(0).jpg.webp","hash":"007d0c26d29a48d7ce45a5dfe91b496d41f771da","modified":1583851272490},{"_id":"public/images/cover/(1).jpg.webp","hash":"007d0c26d29a48d7ce45a5dfe91b496d41f771da","modified":1583851272490},{"_id":"public/images/cover/(8).jpg.webp","hash":"4ffcfb8c695294e8d84cee0e7b5be0c024e5dfa7","modified":1583851272490},{"_id":"public/images/cover/(7).jpg.webp","hash":"280a5c05256dca4fbea5af1bae208c19efce73a4","modified":1583851272490},{"_id":"public/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1583851272490},{"_id":"public/css/bangumi.css","hash":"4d30d793a8813b14c55cee12d4a5adbb1cc7c535","modified":1583851272490},{"_id":"public/css/donate.css","hash":"fb5b21bae281772ea4e1df250d1d118edd8fe3ec","modified":1583851272490},{"_id":"public/css/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1583851272490},{"_id":"public/css/insight.css","hash":"e3edf9f215f8b4bf6131a781edf2634df039796c","modified":1583851272490},{"_id":"public/css/zoom.css","hash":"e6feedd50deaf58cd27b33ed99f04f479c9fba31","modified":1583851272490},{"_id":"public/css/sharejs.css","hash":"62b3ea2384cdf4f9dbce34e17f660856d51a605c","modified":1583851272490},{"_id":"public/js/InsightSearch.js","hash":"3acae0bd3b55b16b93006466942de81b2a27b011","modified":1583851272490},{"_id":"public/js/zoom.min.js","hash":"0b377c432d448cfc09c9e451128a48810a250926","modified":1583851272490},{"_id":"public/js/love.js","hash":"be42ab76a90e53e7aecf9030642ccfa750404aa9","modified":1583851272490},{"_id":"public/live2d-widget/autoload.js","hash":"eccacd5f2525fbcdc384533ef7fe922c0ae31cf2","modified":1583851272490},{"_id":"public/live2d-widget/waifu-tips.js","hash":"8d5043ee5aa1cba232eafec8f2af0a1c93ec7927","modified":1583851272490},{"_id":"public/live2d-widget/waifu.css","hash":"d86f77fb9a9c06fe5ad0e73bc120235ad826da17","modified":1583851272490},{"_id":"public/live2d-widget/waifu-tips.json","hash":"b8e2ec2c4b731f67d06a479c3054929628405d94","modified":1583851272490},{"_id":"public/fonts/SAKURASO.old/icon.css","hash":"cca92568d623792d63db3706a705d3c77412d025","modified":1583851272490},{"_id":"public/404.html","hash":"53a81d2eab81314d10f2495179b8ab95787b4a30","modified":1583851272490},{"_id":"public/warn.html","hash":"bd65c752505736acfb5534c1f46a15fa0ba629f8","modified":1583851272490},{"_id":"public/live2d-widget/README.html","hash":"7f32a1e72659f97f3d61ecd834361b4931d53f1e","modified":1583851272490},{"_id":"public/live2d-widget/demo/demo1.html","hash":"1d7a3dbbacbdd2ffa6cbb105245e1dc3fb5c6ea9","modified":1583851272490},{"_id":"public/live2d-widget/demo/demo2.html","hash":"85a9fe9e7da69a1544db027d7ac2c9bacfc54933","modified":1583851272490},{"_id":"public/css/font.css","hash":"714d3b9fbd98fdc398ce9aa60ec1d60d50628933","modified":1583851272490},{"_id":"public/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1583851272490},{"_id":"public/js/sakura-app.js","hash":"46dc2e5334ac8b5a556382b0705e1a99ca97b857","modified":1583851272490},{"_id":"public/css/lib.min.css","hash":"3c4c8e1006dcc8e57e4a02e9d735a52c2a95cc72","modified":1583851272490},{"_id":"public/js/botui.js","hash":"7fd0a8b3a214c7840d4b1297195f3e9282b5cbb9","modified":1583851272490},{"_id":"public/js/jquery.fancybox.min.js","hash":"9e2b205a88c949fc8e6a7550d502dabe2b1ab4c0","modified":1583851272490},{"_id":"public/css/style.css","hash":"a793757f33429481d5595029ba4660e6b0fc8464","modified":1583851272490},{"_id":"public/live2d-widget/live2d.min.js","hash":"22365399514b0729c9b787d6a3e782488f1aac95","modified":1583851272490},{"_id":"public/images/cover/(2).jpg.webp","hash":"a28c79979c8a3950a8a53fec07cd1a6ff446615c","modified":1583851272490},{"_id":"public/images/cover/(6).jpg.webp","hash":"25267df7614e852d8c4ba229e9c77c5453e744bb","modified":1583851272490},{"_id":"public/images/cover/(5).jpg.webp","hash":"ad0f06e40504f4b86b3b12f6b2c86e9f07da01ea","modified":1583851272490},{"_id":"public/js/lib.min.js","hash":"28f7ece281fef37370c561b7bca5285776ae8fd9","modified":1583851272490},{"_id":"public/images/cover/(4).jpg.webp","hash":"22bc8dfdcba509032f270fb68f9168efb39bb373","modified":1583851272490}],"Category":[{"name":"技术","_id":"ck7m05luh000evgv4ebev3gtb"},{"name":"资源","_id":"ck7m05lvn0011vgv4gbt31och"}],"Data":[],"Page":[{"title":"client","date":"2018-12-20T15:13:35.000Z","keywords":"Android客户端","description":null,"comments":0,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/client.jpg","_content":"直接下载 or 扫码下载：\n{% raw %}\n<div style=\"text-align: center;\">\n<img class=\"lazyload\" data-src=\"https://view.moezx.cc/images/2018/06/08/app-download.png#in-center#width-50\" style=\"width: 200px; height: 200px;\" alt=\"\">\n</div>\n{% endraw %}","source":"client/index.md","raw":"---\ntitle: client\ndate: 2018-12-20 23:13:35\nkeywords: Android客户端\ndescription: \ncomments: false\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/client.jpg\n---\n直接下载 or 扫码下载：\n{% raw %}\n<div style=\"text-align: center;\">\n<img class=\"lazyload\" data-src=\"https://view.moezx.cc/images/2018/06/08/app-download.png#in-center#width-50\" style=\"width: 200px; height: 200px;\" alt=\"\">\n</div>\n{% endraw %}","updated":"2020-02-29T01:19:25.940Z","path":"client/index.html","layout":"page","_id":"ck7m05lsd0000vgv4355gg3hg","content":"<p>直接下载 or 扫码下载：</p>\n\n<div style=\"text-align: center;\">\n<img class=\"lazyload\" data-src=\"https://view.moezx.cc/images/2018/06/08/app-download.png#in-center#width-50\" style=\"width: 200px; height: 200px;\" alt=\"\">\n</div>\n","site":{"data":{}},"length":11,"excerpt":"","more":"<p>直接下载 or 扫码下载：</p>\n\n<div style=\"text-align: center;\">\n<img class=\"lazyload\" data-src=\"https://view.moezx.cc/images/2018/06/08/app-download.png#in-center#width-50\" style=\"width: 200px; height: 200px;\" alt=\"\">\n</div>\n"},{"layout":"donate","title":"donate","date":"2018-12-20T15:13:05.000Z","keywords":"谢谢饲主了喵~","description":null,"comments":0,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/donate.jpg","_content":"","source":"donate/index.md","raw":"---\nlayout: donate\ntitle: donate\ndate: 2018-12-20 23:13:05\nkeywords: 谢谢饲主了喵~\ndescription: \ncomments: false\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/donate.jpg\n---\n","updated":"2020-02-29T01:19:25.956Z","path":"donate/index.html","_id":"ck7m05lsq0001vgv44gb1h9vm","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"layout":"bangumi","title":"bangumi","comments":0,"date":"2019-02-10T13:32:48.000Z","keywords":null,"description":null,"bangumis":[{"img":"https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg","title":"朝花夕誓——于离别之朝束起约定之花","status":"已追完","progress":100,"jp":"さよならの朝に約束の花をかざろう","time":"2018-02-24 SUN.","desc":"住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。"},{"img":"https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg","title":"朝花夕誓——于离别之朝束起约定之花","status":"已追完","progress":50,"jp":"さよならの朝に約束の花をかざろう","time":"2018-02-24 SUN.","desc":"住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。"}],"_content":"","source":"bangumi/index.md","raw":"---\nlayout: bangumi\ntitle: bangumi\ncomments: false\ndate: 2019-02-10 21:32:48\nkeywords:\ndescription:\nbangumis:\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 100\n    jp: さよならの朝に約束の花をかざろう\n    time: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 50\n    jp: さよならの朝に約束の花をかざろう\n    time: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n---\n","updated":"2020-02-29T01:19:25.940Z","path":"bangumi/index.html","_id":"ck7m05lss0002vgv43efzc4so","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"comment","date":"2018-12-20T15:13:48.000Z","keywords":"留言板","description":null,"comments":1,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg","_content":"{% raw %}\n<div class=\"entry-content\">\n  <div class=\"poem-wrap\">\n    <div class=\"poem-border poem-left\">\n    </div>\n    <div class=\"poem-border poem-right\">\n    </div>\n    <h1>\n    念两句诗</h1>\n    <p id=\"poem\">\n    叙别梦、扬州一觉。</p>\n    <p id=\"info\">\n    【宋代】吴文英《夜游宫·人去西楼雁杳》</p>\n  </div>\n</div>\n{% endraw %}","source":"comment/index.md","raw":"---\ntitle: comment\ndate: 2018-12-20 23:13:48\nkeywords: 留言板\ndescription: \ncomments: true\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg\n---\n{% raw %}\n<div class=\"entry-content\">\n  <div class=\"poem-wrap\">\n    <div class=\"poem-border poem-left\">\n    </div>\n    <div class=\"poem-border poem-right\">\n    </div>\n    <h1>\n    念两句诗</h1>\n    <p id=\"poem\">\n    叙别梦、扬州一觉。</p>\n    <p id=\"info\">\n    【宋代】吴文英《夜游宫·人去西楼雁杳》</p>\n  </div>\n</div>\n{% endraw %}","updated":"2020-02-29T01:19:25.940Z","path":"comment/index.html","layout":"page","_id":"ck7m05lsv0003vgv4cpio0kib","content":"\n<div class=\"entry-content\">\n  <div class=\"poem-wrap\">\n    <div class=\"poem-border poem-left\">\n    </div>\n    <div class=\"poem-border poem-right\">\n    </div>\n    <h1>\n    念两句诗</h1>\n    <p id=\"poem\">\n    叙别梦、扬州一觉。</p>\n    <p id=\"info\">\n    【宋代】吴文英《夜游宫·人去西楼雁杳》</p>\n  </div>\n</div>\n","site":{"data":{}},"length":32,"excerpt":"","more":"\n<div class=\"entry-content\">\n  <div class=\"poem-wrap\">\n    <div class=\"poem-border poem-left\">\n    </div>\n    <div class=\"poem-border poem-right\">\n    </div>\n    <h1>\n    念两句诗</h1>\n    <p id=\"poem\">\n    叙别梦、扬州一觉。</p>\n    <p id=\"info\">\n    【宋代】吴文英《夜游宫·人去西楼雁杳》</p>\n  </div>\n</div>\n"},{"title":"about","date":"2018-12-12T14:14:36.000Z","keywords":"关于","description":null,"comments":0,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/about.jpg","_content":"{% raw %}\n<!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 -->\n<div class=\"entry-content\">\n  <div class=\"moe-mashiro\" style=\"text-align:center; font-size: 50px; margin-bottom: 20px;\">[さくら荘のhojun]</div>\n  <div id=\"hello-mashiro\" class=\"popcontainer\" style=\"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;\">\n    <center>\n    <p>\n    </p>\n    <h4>\n    与&nbsp;<ruby>\n    Mashiro&nbsp;<rp>\n    （</rp>\n    <rt>\n    真（ま）白（しろ）</rt>\n    <rp>\n    ）</rp>\n    </ruby>\n    对话中...</h4>\n    <p>\n    </p>\n    </center>\n    <bot-ui></botui>\n  </div>\n</div>\n<script src=\"/js/botui.js\"></script>\n<script>\nbot_ui_ini()\n</script>\n{% endraw %}","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-12-12 22:14:36\nkeywords: 关于\ndescription: \ncomments: false\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/about.jpg\n---\n{% raw %}\n<!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 -->\n<div class=\"entry-content\">\n  <div class=\"moe-mashiro\" style=\"text-align:center; font-size: 50px; margin-bottom: 20px;\">[さくら荘のhojun]</div>\n  <div id=\"hello-mashiro\" class=\"popcontainer\" style=\"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;\">\n    <center>\n    <p>\n    </p>\n    <h4>\n    与&nbsp;<ruby>\n    Mashiro&nbsp;<rp>\n    （</rp>\n    <rt>\n    真（ま）白（しろ）</rt>\n    <rp>\n    ）</rp>\n    </ruby>\n    对话中...</h4>\n    <p>\n    </p>\n    </center>\n    <bot-ui></botui>\n  </div>\n</div>\n<script src=\"/js/botui.js\"></script>\n<script>\nbot_ui_ini()\n</script>\n{% endraw %}","updated":"2020-02-29T01:19:25.940Z","path":"about/index.html","layout":"page","_id":"ck7m05lsy0004vgv457n3c2n0","content":"\n<!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 -->\n<div class=\"entry-content\">\n  <div class=\"moe-mashiro\" style=\"text-align:center; font-size: 50px; margin-bottom: 20px;\">[さくら荘のhojun]</div>\n  <div id=\"hello-mashiro\" class=\"popcontainer\" style=\"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;\">\n    <center>\n    <p>\n    </p>\n    <h4>\n    与&nbsp;<ruby>\n    Mashiro&nbsp;<rp>\n    （</rp>\n    <rt>\n    真（ま）白（しろ）</rt>\n    <rp>\n    ）</rp>\n    </ruby>\n    对话中...</h4>\n    <p>\n    </p>\n    </center>\n    <bot-ui></botui>\n  </div>\n</div>\n<script src=\"/js/botui.js\"></script>\n<script>\nbot_ui_ini()\n</script>\n","site":{"data":{}},"length":61,"excerpt":"","more":"\n<!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 -->\n<div class=\"entry-content\">\n  <div class=\"moe-mashiro\" style=\"text-align:center; font-size: 50px; margin-bottom: 20px;\">[さくら荘のhojun]</div>\n  <div id=\"hello-mashiro\" class=\"popcontainer\" style=\"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;\">\n    <center>\n    <p>\n    </p>\n    <h4>\n    与&nbsp;<ruby>\n    Mashiro&nbsp;<rp>\n    （</rp>\n    <rt>\n    真（ま）白（しろ）</rt>\n    <rp>\n    ）</rp>\n    </ruby>\n    对话中...</h4>\n    <p>\n    </p>\n    </center>\n    <bot-ui></botui>\n  </div>\n</div>\n<script src=\"/js/botui.js\"></script>\n<script>\nbot_ui_ini()\n</script>\n"},{"title":"lab","comments":0,"date":"2019-01-05T13:47:59.000Z","keywords":"Lab实验室","description":null,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/lab.jpg","_content":"\n## sakura主题\nbalabala","source":"lab/index.md","raw":"---\ntitle: lab\ncomments: false\ndate: 2019-01-05 21:47:59\nkeywords: Lab实验室\ndescription: \nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/lab.jpg\n---\n\n## sakura主题\nbalabala","updated":"2020-02-29T01:19:25.956Z","path":"lab/index.html","layout":"page","_id":"ck7m05lt10005vgv43y3efae3","content":"<h2 id=\"sakura主题\"><a href=\"#sakura主题\" class=\"headerlink\" title=\"sakura主题\"></a>sakura主题</h2><p>balabala</p>\n","site":{"data":{}},"length":16,"excerpt":"","more":"<h2 id=\"sakura主题\"><a href=\"#sakura主题\" class=\"headerlink\" title=\"sakura主题\"></a>sakura主题</h2><p>balabala</p>\n"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","photos":null,"_content":"","source":"rss/index.md","raw":"---\ntitle: rss\ndate: 2018-12-20 23:09:03\nphotos:\n---\n","updated":"2020-02-29T01:19:25.956Z","path":"rss/index.html","comments":1,"layout":"page","_id":"ck7m05lt40006vgv4cjzn8jlu","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","keywords":"喜欢的音乐","description":null,"comments":0,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/music.jpg","_content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=450 \nsrc=\"//music.163.com/outchain/player?type=0&id=4887733040&auto=1&height=430\">\n</iframe>\n\n{% raw %}\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887733040\"\n  mutex=\"true\">\n</meting-js>\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887727283\"\n  mutex=\"true\">\n</meting-js>\n{% endraw %}","source":"music/index.md","raw":"---\ntitle: music\ndate: 2018-12-20 23:14:28\nkeywords: 喜欢的音乐\ndescription: \ncomments: false\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/music.jpg\n---\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=450 \nsrc=\"//music.163.com/outchain/player?type=0&id=4887733040&auto=1&height=430\">\n</iframe>\n\n{% raw %}\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887733040\"\n  mutex=\"true\">\n</meting-js>\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887727283\"\n  mutex=\"true\">\n</meting-js>\n{% endraw %}","updated":"2020-03-06T06:51:32.615Z","path":"music/index.html","layout":"page","_id":"ck7m05lt70007vgv44dqq8szi","content":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=450 \nsrc=\"//music.163.com/outchain/player?type=0&id=4887733040&auto=1&height=430\">\n</iframe>\n\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887733040\"\n  mutex=\"true\">\n</meting-js>\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887727283\"\n  mutex=\"true\">\n</meting-js>\n","site":{"data":{}},"length":0,"excerpt":"","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=450 \nsrc=\"//music.163.com/outchain/player?type=0&id=4887733040&auto=1&height=430\">\n</iframe>\n\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887733040\"\n  mutex=\"true\">\n</meting-js>\n\n<meting-js\n  server=\"netease\"\n  type=\"playlist\"\n  id=\"4887727283\"\n  mutex=\"true\">\n</meting-js>\n"},{"layout":"links","title":"links","date":"2018-12-19T15:11:06.000Z","keywords":"友人帐","description":null,"comments":1,"photos":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg","links":[{"group":"个人项目","desc":"充分说明这家伙是条咸鱼 < (￣︶￣)>","items":[{"url":"https://shino.cc/fgvf","img":"https://cloud.moezx.cc/Picture/svg/landscape/fields.svg","name":"Google","desc":"Google 镜像"},{"url":"https://shino.cc/fgvf","img":"https://cloud.moezx.cc/Picture/svg/landscape/fields.svg","name":"Google","desc":"Google 镜像"}]},{"group":"小伙伴们","desc":"欢迎交换友链 ꉂ(ˊᗜˋ)","items":[{"url":"https://shino.cc/fgvf","img":"https://cloud.moezx.cc/Picture/svg/landscape/fields.svg","name":"Google","desc":"Google 镜像"},{"url":"https://shino.cc/fgvf","img":"https://cloud.moezx.cc/Picture/svg/landscape/fields.svg","name":"Google","desc":"Google 镜像"}]}],"_content":"","source":"links/index.md","raw":"---\nlayout: links\ntitle: links\ndate: 2018-12-19 23:11:06\nkeywords: 友人帐\ndescription: \ncomments: true\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg\nlinks:\n  - group: 个人项目\n    desc: 充分说明这家伙是条咸鱼 < (￣︶￣)>\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n  - group: 小伙伴们\n    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n---\n","updated":"2020-02-29T01:19:25.956Z","path":"links/index.html","_id":"ck7m05lt80008vgv4gubiea2p","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-12 22:14:16\n---\n","updated":"2020-02-29T01:19:25.956Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck7m05lta0009vgv45aa945xf","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"theme-sakura","comments":0,"date":"2019-01-04T14:53:25.000Z","keywords":"Hexo 主题 Sakura 🌸","description":null,"photos":"https://static.2heng.xin/wp-content/uploads//2018/05/sakura2.jpeg","_content":"Hexo主题Sakura修改自WordPress主题[Sakura](https://github.com/mashirozx/Sakura/)，感谢原作者[Mashiro](https://2heng.xin/)","source":"theme-sakura/index.md","raw":"---\ntitle: theme-sakura\ncomments: false\ndate: 2019-01-04 22:53:25\nkeywords: Hexo 主题 Sakura 🌸\ndescription:\nphotos: https://static.2heng.xin/wp-content/uploads//2018/05/sakura2.jpeg\n---\nHexo主题Sakura修改自WordPress主题[Sakura](https://github.com/mashirozx/Sakura/)，感谢原作者[Mashiro](https://2heng.xin/)","updated":"2020-02-29T01:19:25.956Z","path":"theme-sakura/index.html","layout":"page","_id":"ck7m05ltc000avgv42qy6101z","content":"<p>Hexo主题Sakura修改自WordPress主题<a href=\"https://github.com/mashirozx/Sakura/\" target=\"_blank\" rel=\"noopener\">Sakura</a>，感谢原作者<a href=\"https://2heng.xin/\" target=\"_blank\" rel=\"noopener\">Mashiro</a></p>\n","site":{"data":{}},"length":45,"excerpt":"","more":"<p>Hexo主题Sakura修改自WordPress主题<a href=\"https://github.com/mashirozx/Sakura/\" target=\"_blank\" rel=\"noopener\">Sakura</a>，感谢原作者<a href=\"https://2heng.xin/\" target=\"_blank\" rel=\"noopener\">Mashiro</a></p>\n"},{"title":"video","date":"2018-12-20T15:14:38.000Z","keywords":"B站","description":null,"comments":0,"photos":null,"_content":"{% raw %}\n<script>\n  var videos = [\n    {\n      img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '放送时间: 2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    },\n    {\n      img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    }\n  ]\n</script>\n{% endraw %}\n\n{% raw %}\n  <style>.should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}\n  </style>\n  <header class=\"page-header\"><h1 class=\"cat-title\">番组计划</h1> <span class=\"cat-des\"><p>这里将是永远的回忆</p> </span></header>\n  <div class=\"bangumi\">\n    <div class=\"row\" id=\"rootRow\">\n    </div>\n  </div>\n  <script>\n  window.onload = function(){\n    videos.forEach(function(video, i){\n      $('#rootRow').append(`<div class=\"col s12 m6\" id=\"bangumi-218971\">\n        <div class=\"card hoverable\" style=\"overflow: visible;\">\n          <div class=\"card-image waves-effect waves-block waves-light\">\n            <div class=\"activator itempic lazyload\" style=\"background-image: url(${video.img});\" data-src=\"${video.img}\">\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-title should-ellipsis activator grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-commenting-o right\"></i>\n            </div>\n            <p class=\"should-ellipsis-full\">\n            ${video.jp}</p>\n            <ul class=\"skill-list\">\n              <li class=\"skill\">\n                <div>\n                ${video.status}</div>\n                <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                </progress>\n              </li>\n            </ul>\n          </div>\n          <div class=\"card-reveal\" style=\"display: none; transform: translateY(0%);\">\n            <span class=\"card-title grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-close right\"></i>\n            </span>\n            <span>\n              ${video.jp}<br>\n            </span>\n            <span>\n              放送时间: ${video.time}<span>\n                <p>${video.desc}</p>\n                <ul class=\"skill-list\">\n                  <li class=\"skill\">\n                    <div>\n                    ${video.status}</div>\n                    <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                    </progress>\n                  </li>\n                </ul>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>`)\n    })\n  }\n  </script>\n{% endraw %}","source":"video/index.md","raw":"---\ntitle: video\ndate: 2018-12-20 23:14:38\nkeywords: B站\ndescription: \ncomments: false\nphotos: \n---\n{% raw %}\n<script>\n  var videos = [\n    {\n      img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '放送时间: 2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    },\n    {\n      img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    }\n  ]\n</script>\n{% endraw %}\n\n{% raw %}\n  <style>.should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}\n  </style>\n  <header class=\"page-header\"><h1 class=\"cat-title\">番组计划</h1> <span class=\"cat-des\"><p>这里将是永远的回忆</p> </span></header>\n  <div class=\"bangumi\">\n    <div class=\"row\" id=\"rootRow\">\n    </div>\n  </div>\n  <script>\n  window.onload = function(){\n    videos.forEach(function(video, i){\n      $('#rootRow').append(`<div class=\"col s12 m6\" id=\"bangumi-218971\">\n        <div class=\"card hoverable\" style=\"overflow: visible;\">\n          <div class=\"card-image waves-effect waves-block waves-light\">\n            <div class=\"activator itempic lazyload\" style=\"background-image: url(${video.img});\" data-src=\"${video.img}\">\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-title should-ellipsis activator grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-commenting-o right\"></i>\n            </div>\n            <p class=\"should-ellipsis-full\">\n            ${video.jp}</p>\n            <ul class=\"skill-list\">\n              <li class=\"skill\">\n                <div>\n                ${video.status}</div>\n                <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                </progress>\n              </li>\n            </ul>\n          </div>\n          <div class=\"card-reveal\" style=\"display: none; transform: translateY(0%);\">\n            <span class=\"card-title grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-close right\"></i>\n            </span>\n            <span>\n              ${video.jp}<br>\n            </span>\n            <span>\n              放送时间: ${video.time}<span>\n                <p>${video.desc}</p>\n                <ul class=\"skill-list\">\n                  <li class=\"skill\">\n                    <div>\n                    ${video.status}</div>\n                    <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                    </progress>\n                  </li>\n                </ul>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>`)\n    })\n  }\n  </script>\n{% endraw %}","updated":"2020-02-29T01:19:25.956Z","path":"video/index.html","layout":"page","_id":"ck7m05ltf000bvgv4ervs3bjn","content":"\n<script>\n  var videos = [\n    {\n      img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '放送时间: 2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    },\n    {\n      img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    }\n  ]\n</script>\n\n\n\n  <style>.should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}\n  </style>\n  <header class=\"page-header\"><h1 class=\"cat-title\">番组计划</h1> <span class=\"cat-des\"><p>这里将是永远的回忆</p> </span></header>\n  <div class=\"bangumi\">\n    <div class=\"row\" id=\"rootRow\">\n    </div>\n  </div>\n  <script>\n  window.onload = function(){\n    videos.forEach(function(video, i){\n      $('#rootRow').append(`<div class=\"col s12 m6\" id=\"bangumi-218971\">\n        <div class=\"card hoverable\" style=\"overflow: visible;\">\n          <div class=\"card-image waves-effect waves-block waves-light\">\n            <div class=\"activator itempic lazyload\" style=\"background-image: url(${video.img});\" data-src=\"${video.img}\">\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-title should-ellipsis activator grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-commenting-o right\"></i>\n            </div>\n            <p class=\"should-ellipsis-full\">\n            ${video.jp}</p>\n            <ul class=\"skill-list\">\n              <li class=\"skill\">\n                <div>\n                ${video.status}</div>\n                <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                </progress>\n              </li>\n            </ul>\n          </div>\n          <div class=\"card-reveal\" style=\"display: none; transform: translateY(0%);\">\n            <span class=\"card-title grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-close right\"></i>\n            </span>\n            <span>\n              ${video.jp}<br>\n            </span>\n            <span>\n              放送时间: ${video.time}<span>\n                <p>${video.desc}</p>\n                <ul class=\"skill-list\">\n                  <li class=\"skill\">\n                    <div>\n                    ${video.status}</div>\n                    <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                    </progress>\n                  </li>\n                </ul>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>`)\n    })\n  }\n  </script>\n","site":{"data":{}},"length":6511,"excerpt":"","more":"\n<script>\n  var videos = [\n    {\n      img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '放送时间: 2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    },\n    {\n      img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg',\n      title: '朝花夕誓——于离别之朝束起约定之花',\n      status: '已追完',\n      progress: 100,\n      jp: 'さよならの朝に約束の花をかざろう',\n      time: '2018-02-24 SUN.',\n      desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。'\n    }\n  ]\n</script>\n\n\n\n  <style>.should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}\n  </style>\n  <header class=\"page-header\"><h1 class=\"cat-title\">番组计划</h1> <span class=\"cat-des\"><p>这里将是永远的回忆</p> </span></header>\n  <div class=\"bangumi\">\n    <div class=\"row\" id=\"rootRow\">\n    </div>\n  </div>\n  <script>\n  window.onload = function(){\n    videos.forEach(function(video, i){\n      $('#rootRow').append(`<div class=\"col s12 m6\" id=\"bangumi-218971\">\n        <div class=\"card hoverable\" style=\"overflow: visible;\">\n          <div class=\"card-image waves-effect waves-block waves-light\">\n            <div class=\"activator itempic lazyload\" style=\"background-image: url(${video.img});\" data-src=\"${video.img}\">\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-title should-ellipsis activator grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-commenting-o right\"></i>\n            </div>\n            <p class=\"should-ellipsis-full\">\n            ${video.jp}</p>\n            <ul class=\"skill-list\">\n              <li class=\"skill\">\n                <div>\n                ${video.status}</div>\n                <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                </progress>\n              </li>\n            </ul>\n          </div>\n          <div class=\"card-reveal\" style=\"display: none; transform: translateY(0%);\">\n            <span class=\"card-title grey-text text-darken-4\">\n              ${video.title}<i class=\"fa fa-close right\"></i>\n            </span>\n            <span>\n              ${video.jp}<br>\n            </span>\n            <span>\n              放送时间: ${video.time}<span>\n                <p>${video.desc}</p>\n                <ul class=\"skill-list\">\n                  <li class=\"skill\">\n                    <div>\n                    ${video.status}</div>\n                    <progress class=\"skill-1\" max=\"100\" value=\"${video.progress}\">\n                    </progress>\n                  </li>\n                </ul>\n              </span>\n            </span>\n          </div>\n        </div>\n      </div>`)\n    })\n  }\n  </script>\n"}],"Post":[{"title":"Hexo-Theme-Sakura","author":"hojun","avatar":"https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg","authorLink":"hojun.cn","authorAbout":"一个好奇的人","authorDesc":"一个好奇的人","date":"2020-01-01T02:16:00.000Z","comments":1,"keywords":"Sakura","description":"hexo-sakura主题使用教程","photos":["https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg"],"_content":"\n\nhexo-theme-sakura主题 [English document](https://github.com/honjun/hexo-theme-sakura/blob/master/README.md)\n\n基于WordPress主题[Sakura](https://github.com/mashirozx/Sakura/)修改成Hexo的主题。\n\n[demo预览](https://sakura.hojun.cn)\n\n正在开发中......\n\n![](https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg)\n\n## 交流群\n若你是使用者，加群QQ: 801511924\n\n若你是创作者，加群QQ: 194472590\n\n\n## 主题特性\n\n - 首页大屏视频\n - 首页随机封面\n - 图片懒加载\n - valine评论\n - fancy-box相册\n - pjax支持，音乐不间断\n - aplayer音乐播放器\n - 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）\n\n\n## 赞赏作者\n如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！\n\n[paypal](https://www.paypal.me/hojuncn) | [Alipay 支付宝](https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg) | [WeChat Pay 微信支付](https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg)\n\n## 未完善的使用教程\n\n那啥？老实说我目前也不是很有条理233333333~\n\n## 1、主题下载安装\n\n[hexo-theme-sakura](https://github.com/honjun/hexo-theme-sakura)建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。\n\n下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行`npm i`安装依赖。\n\n## 2、主题配置\n\n### 博客根目录下的_config配置\n\n站点\n```yml\n# Site\ntitle: 你的站点名\nsubtitle:\ndescription: 站点简介\nkeywords:\nauthor: 作者名\nlanguage: zh-cn\ntimezone:\n```\n\n部署\n```yml\ndeploy:\n  type: git\n  repo: \n    github: 你的github仓库地址\n    # coding: 你的coding仓库地址\n  branch: master\n```\n\n备份 （使用hexo b发布备份到远程仓库）\n```yml\nbackup:\n  type: git\n  message: backup my blog of https://honjun.github.io/\n  repository:\n    # 你的github仓库地址,备份分支名  （建议新建backup分支）\n    github: https://github.com/honjun/honjun.github.io.git,backup\n    # coding: https://git.coding.net/hojun/hojun.git,backup\n\n```\n\n### 主题目录下的_config配置\n\n其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分\n```yml\n# site name\n# 站点名 【改】\nprefixName: さくら荘その\nsiteName: hojun\n\n# favicon and site master avatar\n# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】\nfavicon: /images/favicon.ico\navatar: /img/custom/avatar.jpg\n\n# 站点url 【改】\nurl: https://sakura.hojun.cn\n\n# 站点介绍（或者说是个人签名）【改】\ndescription: Live your life with passion! With some drive!\n\n# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg\ncdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6\n\n# 开启pjax 【选】\npjax: 1\n\n# 站点首页的公告信息 【改】\nnotice: hexo-Sakura主题已经开源，目前正在开发中...\n\n# 懒加载的加载中图片 【选】\nlazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg\n\n# 站点菜单配置 【选】\nmenus:\n  首页: { path: /, fa: fa-fort-awesome faa-shake }\n  归档: { path: /archives, fa: fa-archive faa-shake, submenus: { \n    技术: {path: /categories/技术/, fa: fa-code }, \n    生活: {path: /categories/生活/, fa: fa-file-text-o }, \n    资源: {path: /categories/资源/, fa: fa-cloud-download }, \n    随想: {path: /categories/随想/, fa: fa-commenting-o },\n    转载: {path: /categories/转载/, fa: fa-book }\n  } }\n  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { \n    书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, \n    番组: {path: /bangumi/, fa: fa-film faa-vertical }, \n    歌单: {path: /music/, fa: fa-headphones },\n    图集: {path: /tags/图集/, fa: fa-photo }\n  } }\n  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }\n  友人帐: { path: /links/, fa: fa-link faa-shake }\n  赞赏: { path: /donate/, fa: fa-heart faa-pulse }\n  关于: { path: /, fa: fa-leaf faa-wrench , submenus: { \n    我？: {path: /about/, fa: fa-meetup}, \n    主题: {path: /theme-sakura/, fa: iconfont icon-sakura },\n    Lab: {path: /lab/, fa: fa-cogs },\n  } }\n  客户端: { path: /client/, fa: fa-android faa-vertical }\n  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }\n\n# Home page sort type: -1: newer first，1: older first. 【非】\nhomePageSortType: -1\n\n# Home page article shown number) 【非】\nhomeArticleShown: 10\n\n# 背景图片 【选】\nbgn: 8\n\n# startdash面板 url, title, desc img 【改】\nstartdash: \n  - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}\n  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}\n  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}\n\n\n# your site build time or founded date\n# 你的站点建立日期 【改】\nsiteBuildingTime: 07/17/2018\n\n\n# 社交按钮(social)  url, img PC端配置 【改】\nsocial:\n  github: {url: http://github.com/honjun, img: /img/social/github.png}\n  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}\n  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}\n  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}\n  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}\n  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}\n\n# 社交按钮(msocial)  url, img 移动端配置 【改】\nmsocial:\n  github: {url: http://github.com/honjun, fa: fa-github, color: 333}\n  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}\n  qq: {url: https://wpa.qq.com/msgrd?v=3&uin=954655431&site=qq&menu=yes, fa: fa-qq, color: 25c6fe}\n\n# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】\ndonate:\n  alipay: /img/custom/donate/AliPayQR.jpg\n  wechat: /img/custom/donate/WeChanQR.jpg\n  wechatSQ: /img/custom/donate/WeChanSQ.jpg\n\n# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】\nmovies:\n  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2\n  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用\n  name: Unbroken.mp4\n\n# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】\naplayer: \n  id: 2660651585\n  server: netease\n  type: playlist\n  fixed: true\n  mini: false\n  autoplay: false\n  loop: all\n  order: random\n  preload: auto\n  volume: 0.7\n  mutex: true\n\n# Valine评论配置【改】\nvaline: true\nv_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz\nv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ\n```\n\n## 分类页和标签页配置\n\n### 分类页\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg)\n### 标签页\n![](https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg)\n\n配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。\n```yml\n#category\n# 按分类名创建\n技术:\n    #中文标题\n    zh: 野生技术协会 \n    # 英文标题\n    en: Geek – Only for Love\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg\n生活:\n    zh: 生活\n    en: live\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg\n\n#tag\n# 标签名即是标题\n悦读:\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg\n```\n\n## 单页面封面配置\n\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg)\n如留言板页面页面，位于source下的comment下，打开index.md如下：\n```md\n---\ntitle: comment\ndate: 2018-12-20 23:13:48\nkeywords: 留言板\ndescription: \ncomments: true\n# 在这里配置单页面头部图片，自定义替换哦~\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg\n---\n```\n\n\n## 单页面配置\n\n### 番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\n![](https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg)\n\n```yml\n---\nlayout: bangumi\ntitle: bangumi\ncomments: false\ndate: 2019-02-10 21:32:48\nkeywords:\ndescription:\nbangumis:\n  # 番组图片\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n  # 番组名\n    title: 朝花夕誓——于离别之朝束起约定之花\n  # 追番状态 （追番ing/已追完）\n    status: 已追完\n  # 追番进度\n    progress: 100\n  # 番剧日文名称\n    jp: さよならの朝に約束の花をかざろう\n  # 放送时间\n    time: 放送时间: 2018-02-24 SUN.\n  # 番剧介绍\n    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 50\n    jp: さよならの朝に約束の花をかざろう\n    time: 放送时间: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n---\n```\n\n### 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg)\n\n```yml\n---\nlayout: links\ntitle: links\n# 创建日期，可以改下\ndate: 2018-12-19 23:11:06 \n# 图片上的标题，自定义修改\nkeywords: 友人帐 \ndescription: \n# true/false 开启/关闭评论\ncomments: true \n# 页面头部图片，自定义修改\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg \n# 友链配置\nlinks: \n  # 类型分组\n  - group: 个人项目\n    # 类型简介\n    desc: 充分说明这家伙是条咸鱼 < (￣︶￣)>\n    items:\n    # 友链链接\n    - url: https://shino.cc/fgvf\n    # 友链头像\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n    # 友链站点名\n      name: Google\n    # 友链介绍  下面雷同\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n  # 类型分组...\n  - group: 小伙伴们\n    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n---\n```\n\n## 写文章配置\n\n主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：\n```md\n{% bili video_id [page] %}\n```\n详细使用教程详见[hexo-tag-bili](https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md)。\n\nhexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：\n```md\n{% fb_img src [caption] %}\n```\n详细使用教程详见[hexo-tag-fancybox_img](https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md)\n\n## 还有啥，一时想不起来......\n\nTo be continued...","source":"_posts/1.Hexo-Theme-Sakura.md","raw":"---\ntitle: Hexo-Theme-Sakura\nauthor: hojun\navatar: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg\nauthorLink: hojun.cn\nauthorAbout: 一个好奇的人\nauthorDesc: 一个好奇的人\ncategories: 技术\ndate: 2020-1-1 10:16:00\ncomments: true\ntags: \n - 前端\n\nkeywords: Sakura\ndescription: hexo-sakura主题使用教程\nphotos: https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg\n---\n\n\nhexo-theme-sakura主题 [English document](https://github.com/honjun/hexo-theme-sakura/blob/master/README.md)\n\n基于WordPress主题[Sakura](https://github.com/mashirozx/Sakura/)修改成Hexo的主题。\n\n[demo预览](https://sakura.hojun.cn)\n\n正在开发中......\n\n![](https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg)\n\n## 交流群\n若你是使用者，加群QQ: 801511924\n\n若你是创作者，加群QQ: 194472590\n\n\n## 主题特性\n\n - 首页大屏视频\n - 首页随机封面\n - 图片懒加载\n - valine评论\n - fancy-box相册\n - pjax支持，音乐不间断\n - aplayer音乐播放器\n - 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）\n\n\n## 赞赏作者\n如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！\n\n[paypal](https://www.paypal.me/hojuncn) | [Alipay 支付宝](https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg) | [WeChat Pay 微信支付](https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg)\n\n## 未完善的使用教程\n\n那啥？老实说我目前也不是很有条理233333333~\n\n## 1、主题下载安装\n\n[hexo-theme-sakura](https://github.com/honjun/hexo-theme-sakura)建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。\n\n下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行`npm i`安装依赖。\n\n## 2、主题配置\n\n### 博客根目录下的_config配置\n\n站点\n```yml\n# Site\ntitle: 你的站点名\nsubtitle:\ndescription: 站点简介\nkeywords:\nauthor: 作者名\nlanguage: zh-cn\ntimezone:\n```\n\n部署\n```yml\ndeploy:\n  type: git\n  repo: \n    github: 你的github仓库地址\n    # coding: 你的coding仓库地址\n  branch: master\n```\n\n备份 （使用hexo b发布备份到远程仓库）\n```yml\nbackup:\n  type: git\n  message: backup my blog of https://honjun.github.io/\n  repository:\n    # 你的github仓库地址,备份分支名  （建议新建backup分支）\n    github: https://github.com/honjun/honjun.github.io.git,backup\n    # coding: https://git.coding.net/hojun/hojun.git,backup\n\n```\n\n### 主题目录下的_config配置\n\n其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分\n```yml\n# site name\n# 站点名 【改】\nprefixName: さくら荘その\nsiteName: hojun\n\n# favicon and site master avatar\n# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】\nfavicon: /images/favicon.ico\navatar: /img/custom/avatar.jpg\n\n# 站点url 【改】\nurl: https://sakura.hojun.cn\n\n# 站点介绍（或者说是个人签名）【改】\ndescription: Live your life with passion! With some drive!\n\n# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg\ncdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6\n\n# 开启pjax 【选】\npjax: 1\n\n# 站点首页的公告信息 【改】\nnotice: hexo-Sakura主题已经开源，目前正在开发中...\n\n# 懒加载的加载中图片 【选】\nlazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg\n\n# 站点菜单配置 【选】\nmenus:\n  首页: { path: /, fa: fa-fort-awesome faa-shake }\n  归档: { path: /archives, fa: fa-archive faa-shake, submenus: { \n    技术: {path: /categories/技术/, fa: fa-code }, \n    生活: {path: /categories/生活/, fa: fa-file-text-o }, \n    资源: {path: /categories/资源/, fa: fa-cloud-download }, \n    随想: {path: /categories/随想/, fa: fa-commenting-o },\n    转载: {path: /categories/转载/, fa: fa-book }\n  } }\n  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { \n    书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, \n    番组: {path: /bangumi/, fa: fa-film faa-vertical }, \n    歌单: {path: /music/, fa: fa-headphones },\n    图集: {path: /tags/图集/, fa: fa-photo }\n  } }\n  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }\n  友人帐: { path: /links/, fa: fa-link faa-shake }\n  赞赏: { path: /donate/, fa: fa-heart faa-pulse }\n  关于: { path: /, fa: fa-leaf faa-wrench , submenus: { \n    我？: {path: /about/, fa: fa-meetup}, \n    主题: {path: /theme-sakura/, fa: iconfont icon-sakura },\n    Lab: {path: /lab/, fa: fa-cogs },\n  } }\n  客户端: { path: /client/, fa: fa-android faa-vertical }\n  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }\n\n# Home page sort type: -1: newer first，1: older first. 【非】\nhomePageSortType: -1\n\n# Home page article shown number) 【非】\nhomeArticleShown: 10\n\n# 背景图片 【选】\nbgn: 8\n\n# startdash面板 url, title, desc img 【改】\nstartdash: \n  - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}\n  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}\n  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}\n\n\n# your site build time or founded date\n# 你的站点建立日期 【改】\nsiteBuildingTime: 07/17/2018\n\n\n# 社交按钮(social)  url, img PC端配置 【改】\nsocial:\n  github: {url: http://github.com/honjun, img: /img/social/github.png}\n  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}\n  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}\n  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}\n  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}\n  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}\n\n# 社交按钮(msocial)  url, img 移动端配置 【改】\nmsocial:\n  github: {url: http://github.com/honjun, fa: fa-github, color: 333}\n  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}\n  qq: {url: https://wpa.qq.com/msgrd?v=3&uin=954655431&site=qq&menu=yes, fa: fa-qq, color: 25c6fe}\n\n# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】\ndonate:\n  alipay: /img/custom/donate/AliPayQR.jpg\n  wechat: /img/custom/donate/WeChanQR.jpg\n  wechatSQ: /img/custom/donate/WeChanSQ.jpg\n\n# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】\nmovies:\n  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2\n  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用\n  name: Unbroken.mp4\n\n# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】\naplayer: \n  id: 2660651585\n  server: netease\n  type: playlist\n  fixed: true\n  mini: false\n  autoplay: false\n  loop: all\n  order: random\n  preload: auto\n  volume: 0.7\n  mutex: true\n\n# Valine评论配置【改】\nvaline: true\nv_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz\nv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ\n```\n\n## 分类页和标签页配置\n\n### 分类页\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg)\n### 标签页\n![](https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg)\n\n配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。\n```yml\n#category\n# 按分类名创建\n技术:\n    #中文标题\n    zh: 野生技术协会 \n    # 英文标题\n    en: Geek – Only for Love\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg\n生活:\n    zh: 生活\n    en: live\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg\n\n#tag\n# 标签名即是标题\n悦读:\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg\n```\n\n## 单页面封面配置\n\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg)\n如留言板页面页面，位于source下的comment下，打开index.md如下：\n```md\n---\ntitle: comment\ndate: 2018-12-20 23:13:48\nkeywords: 留言板\ndescription: \ncomments: true\n# 在这里配置单页面头部图片，自定义替换哦~\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg\n---\n```\n\n\n## 单页面配置\n\n### 番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\n![](https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg)\n\n```yml\n---\nlayout: bangumi\ntitle: bangumi\ncomments: false\ndate: 2019-02-10 21:32:48\nkeywords:\ndescription:\nbangumis:\n  # 番组图片\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n  # 番组名\n    title: 朝花夕誓——于离别之朝束起约定之花\n  # 追番状态 （追番ing/已追完）\n    status: 已追完\n  # 追番进度\n    progress: 100\n  # 番剧日文名称\n    jp: さよならの朝に約束の花をかざろう\n  # 放送时间\n    time: 放送时间: 2018-02-24 SUN.\n  # 番剧介绍\n    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 50\n    jp: さよならの朝に約束の花をかざろう\n    time: 放送时间: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n---\n```\n\n### 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\n![](https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg)\n\n```yml\n---\nlayout: links\ntitle: links\n# 创建日期，可以改下\ndate: 2018-12-19 23:11:06 \n# 图片上的标题，自定义修改\nkeywords: 友人帐 \ndescription: \n# true/false 开启/关闭评论\ncomments: true \n# 页面头部图片，自定义修改\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg \n# 友链配置\nlinks: \n  # 类型分组\n  - group: 个人项目\n    # 类型简介\n    desc: 充分说明这家伙是条咸鱼 < (￣︶￣)>\n    items:\n    # 友链链接\n    - url: https://shino.cc/fgvf\n    # 友链头像\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n    # 友链站点名\n      name: Google\n    # 友链介绍  下面雷同\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n  # 类型分组...\n  - group: 小伙伴们\n    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n---\n```\n\n## 写文章配置\n\n主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：\n```md\n{% bili video_id [page] %}\n```\n详细使用教程详见[hexo-tag-bili](https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md)。\n\nhexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：\n```md\n{% fb_img src [caption] %}\n```\n详细使用教程详见[hexo-tag-fancybox_img](https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md)\n\n## 还有啥，一时想不起来......\n\nTo be continued...","slug":"1.Hexo-Theme-Sakura","published":1,"updated":"2020-03-10T13:23:07.884Z","layout":"post","link":"","_id":"ck7m05lu5000cvgv46wfh6t06","content":"<p>hexo-theme-sakura主题 <a href=\"https://github.com/honjun/hexo-theme-sakura/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">English document</a></p>\n<p>基于WordPress主题<a href=\"https://github.com/mashirozx/Sakura/\" target=\"_blank\" rel=\"noopener\">Sakura</a>修改成Hexo的主题。</p>\n<p><a href=\"https://sakura.hojun.cn\" target=\"_blank\" rel=\"noopener\">demo预览</a></p>\n<p>正在开发中……</p>\n<p><img src=\"https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg\" alt=\"\"></p>\n<h2 id=\"交流群\"><a href=\"#交流群\" class=\"headerlink\" title=\"交流群\"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p>\n<p>若你是创作者，加群QQ: 194472590</p>\n<h2 id=\"主题特性\"><a href=\"#主题特性\" class=\"headerlink\" title=\"主题特性\"></a>主题特性</h2><ul>\n<li>首页大屏视频</li>\n<li>首页随机封面</li>\n<li>图片懒加载</li>\n<li>valine评论</li>\n<li>fancy-box相册</li>\n<li>pjax支持，音乐不间断</li>\n<li>aplayer音乐播放器</li>\n<li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li>\n</ul>\n<h2 id=\"赞赏作者\"><a href=\"#赞赏作者\" class=\"headerlink\" title=\"赞赏作者\"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p>\n<p><a href=\"https://www.paypal.me/hojuncn\" target=\"_blank\" rel=\"noopener\">paypal</a> | <a href=\"https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg\" target=\"_blank\" rel=\"noopener\">Alipay 支付宝</a> | <a href=\"https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg\" target=\"_blank\" rel=\"noopener\">WeChat Pay 微信支付</a></p>\n<h2 id=\"未完善的使用教程\"><a href=\"#未完善的使用教程\" class=\"headerlink\" title=\"未完善的使用教程\"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p>\n<h2 id=\"1、主题下载安装\"><a href=\"#1、主题下载安装\" class=\"headerlink\" title=\"1、主题下载安装\"></a>1、主题下载安装</h2><p><a href=\"https://github.com/honjun/hexo-theme-sakura\" target=\"_blank\" rel=\"noopener\">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p>\n<p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p>\n<h2 id=\"2、主题配置\"><a href=\"#2、主题配置\" class=\"headerlink\" title=\"2、主题配置\"></a>2、主题配置</h2><h3 id=\"博客根目录下的-config配置\"><a href=\"#博客根目录下的-config配置\" class=\"headerlink\" title=\"博客根目录下的_config配置\"></a>博客根目录下的_config配置</h3><p>站点</p>\n<pre class=\" language-yml\"><code class=\"language-yml\"># Site\ntitle: 你的站点名\nsubtitle:\ndescription: 站点简介\nkeywords:\nauthor: 作者名\nlanguage: zh-cn\ntimezone:</code></pre>\n<p>部署</p>\n<pre class=\" language-yml\"><code class=\"language-yml\">deploy:\n  type: git\n  repo: \n    github: 你的github仓库地址\n    # coding: 你的coding仓库地址\n  branch: master</code></pre>\n<p>备份 （使用hexo b发布备份到远程仓库）</p>\n<pre class=\" language-yml\"><code class=\"language-yml\">backup:\n  type: git\n  message: backup my blog of https://honjun.github.io/\n  repository:\n    # 你的github仓库地址,备份分支名  （建议新建backup分支）\n    github: https://github.com/honjun/honjun.github.io.git,backup\n    # coding: https://git.coding.net/hojun/hojun.git,backup\n</code></pre>\n<h3 id=\"主题目录下的-config配置\"><a href=\"#主题目录下的-config配置\" class=\"headerlink\" title=\"主题目录下的_config配置\"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p>\n<pre class=\" language-yml\"><code class=\"language-yml\"># site name\n# 站点名 【改】\nprefixName: さくら荘その\nsiteName: hojun\n\n# favicon and site master avatar\n# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】\nfavicon: /images/favicon.ico\navatar: /img/custom/avatar.jpg\n\n# 站点url 【改】\nurl: https://sakura.hojun.cn\n\n# 站点介绍（或者说是个人签名）【改】\ndescription: Live your life with passion! With some drive!\n\n# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg\ncdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6\n\n# 开启pjax 【选】\npjax: 1\n\n# 站点首页的公告信息 【改】\nnotice: hexo-Sakura主题已经开源，目前正在开发中...\n\n# 懒加载的加载中图片 【选】\nlazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg\n\n# 站点菜单配置 【选】\nmenus:\n  首页: { path: /, fa: fa-fort-awesome faa-shake }\n  归档: { path: /archives, fa: fa-archive faa-shake, submenus: { \n    技术: {path: /categories/技术/, fa: fa-code }, \n    生活: {path: /categories/生活/, fa: fa-file-text-o }, \n    资源: {path: /categories/资源/, fa: fa-cloud-download }, \n    随想: {path: /categories/随想/, fa: fa-commenting-o },\n    转载: {path: /categories/转载/, fa: fa-book }\n  } }\n  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { \n    书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, \n    番组: {path: /bangumi/, fa: fa-film faa-vertical }, \n    歌单: {path: /music/, fa: fa-headphones },\n    图集: {path: /tags/图集/, fa: fa-photo }\n  } }\n  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }\n  友人帐: { path: /links/, fa: fa-link faa-shake }\n  赞赏: { path: /donate/, fa: fa-heart faa-pulse }\n  关于: { path: /, fa: fa-leaf faa-wrench , submenus: { \n    我？: {path: /about/, fa: fa-meetup}, \n    主题: {path: /theme-sakura/, fa: iconfont icon-sakura },\n    Lab: {path: /lab/, fa: fa-cogs },\n  } }\n  客户端: { path: /client/, fa: fa-android faa-vertical }\n  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }\n\n# Home page sort type: -1: newer first，1: older first. 【非】\nhomePageSortType: -1\n\n# Home page article shown number) 【非】\nhomeArticleShown: 10\n\n# 背景图片 【选】\nbgn: 8\n\n# startdash面板 url, title, desc img 【改】\nstartdash: \n  - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}\n  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}\n  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}\n\n\n# your site build time or founded date\n# 你的站点建立日期 【改】\nsiteBuildingTime: 07/17/2018\n\n\n# 社交按钮(social)  url, img PC端配置 【改】\nsocial:\n  github: {url: http://github.com/honjun, img: /img/social/github.png}\n  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}\n  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}\n  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}\n  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}\n  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}\n\n# 社交按钮(msocial)  url, img 移动端配置 【改】\nmsocial:\n  github: {url: http://github.com/honjun, fa: fa-github, color: 333}\n  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}\n  qq: {url: https://wpa.qq.com/msgrd?v=3&uin=954655431&site=qq&menu=yes, fa: fa-qq, color: 25c6fe}\n\n# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】\ndonate:\n  alipay: /img/custom/donate/AliPayQR.jpg\n  wechat: /img/custom/donate/WeChanQR.jpg\n  wechatSQ: /img/custom/donate/WeChanSQ.jpg\n\n# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】\nmovies:\n  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2\n  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用\n  name: Unbroken.mp4\n\n# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】\naplayer: \n  id: 2660651585\n  server: netease\n  type: playlist\n  fixed: true\n  mini: false\n  autoplay: false\n  loop: all\n  order: random\n  preload: auto\n  volume: 0.7\n  mutex: true\n\n# Valine评论配置【改】\nvaline: true\nv_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz\nv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ</code></pre>\n<h2 id=\"分类页和标签页配置\"><a href=\"#分类页和标签页配置\" class=\"headerlink\" title=\"分类页和标签页配置\"></a>分类页和标签页配置</h2><h3 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h3><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg\" alt=\"\"></p>\n<h3 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h3><p><img src=\"https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg\" alt=\"\"></p>\n<p>配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p>\n<pre class=\" language-yml\"><code class=\"language-yml\">#category\n# 按分类名创建\n技术:\n    #中文标题\n    zh: 野生技术协会 \n    # 英文标题\n    en: Geek – Only for Love\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg\n生活:\n    zh: 生活\n    en: live\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg\n\n#tag\n# 标签名即是标题\n悦读:\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg</code></pre>\n<h2 id=\"单页面封面配置\"><a href=\"#单页面封面配置\" class=\"headerlink\" title=\"单页面封面配置\"></a>单页面封面配置</h2><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg\" alt=\"\"><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p>\n<pre class=\" language-md\"><code class=\"language-md\">---\ntitle: comment\ndate: 2018-12-20 23:13:48\nkeywords: 留言板\ndescription: \ncomments: true\n# 在这里配置单页面头部图片，自定义替换哦~\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg\n---</code></pre>\n<h2 id=\"单页面配置\"><a href=\"#单页面配置\" class=\"headerlink\" title=\"单页面配置\"></a>单页面配置</h2><h3 id=\"番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"><a href=\"#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\" class=\"headerlink\" title=\"番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src=\"https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg\" alt=\"\"></p>\n<pre class=\" language-yml\"><code class=\"language-yml\">---\nlayout: bangumi\ntitle: bangumi\ncomments: false\ndate: 2019-02-10 21:32:48\nkeywords:\ndescription:\nbangumis:\n  # 番组图片\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n  # 番组名\n    title: 朝花夕誓——于离别之朝束起约定之花\n  # 追番状态 （追番ing/已追完）\n    status: 已追完\n  # 追番进度\n    progress: 100\n  # 番剧日文名称\n    jp: さよならの朝に約束の花をかざろう\n  # 放送时间\n    time: 放送时间: 2018-02-24 SUN.\n  # 番剧介绍\n    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 50\n    jp: さよならの朝に約束の花をかざろう\n    time: 放送时间: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n---</code></pre>\n<h3 id=\"友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"><a href=\"#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\" class=\"headerlink\" title=\"友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg\" alt=\"\"></p>\n<pre class=\" language-yml\"><code class=\"language-yml\">---\nlayout: links\ntitle: links\n# 创建日期，可以改下\ndate: 2018-12-19 23:11:06 \n# 图片上的标题，自定义修改\nkeywords: 友人帐 \ndescription: \n# true/false 开启/关闭评论\ncomments: true \n# 页面头部图片，自定义修改\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg \n# 友链配置\nlinks: \n  # 类型分组\n  - group: 个人项目\n    # 类型简介\n    desc: 充分说明这家伙是条咸鱼 < (￣︶￣)>\n    items:\n    # 友链链接\n    - url: https://shino.cc/fgvf\n    # 友链头像\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n    # 友链站点名\n      name: Google\n    # 友链介绍  下面雷同\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n  # 类型分组...\n  - group: 小伙伴们\n    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n---</code></pre>\n<h2 id=\"写文章配置\"><a href=\"#写文章配置\" class=\"headerlink\" title=\"写文章配置\"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p>\n<pre class=\" language-md\"><code class=\"language-md\">{% bili video_id [page] %}</code></pre>\n<p>详细使用教程详见<a href=\"https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">hexo-tag-bili</a>。</p>\n<p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p>\n<pre class=\" language-md\"><code class=\"language-md\">{% fb_img src [caption] %}</code></pre>\n<p>详细使用教程详见<a href=\"https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">hexo-tag-fancybox_img</a></p>\n<h2 id=\"还有啥，一时想不起来……\"><a href=\"#还有啥，一时想不起来……\" class=\"headerlink\" title=\"还有啥，一时想不起来……\"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>\n","site":{"data":{}},"length":7105,"excerpt":"","more":"<p>hexo-theme-sakura主题 <a href=\"https://github.com/honjun/hexo-theme-sakura/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">English document</a></p>\n<p>基于WordPress主题<a href=\"https://github.com/mashirozx/Sakura/\" target=\"_blank\" rel=\"noopener\">Sakura</a>修改成Hexo的主题。</p>\n<p><a href=\"https://sakura.hojun.cn\" target=\"_blank\" rel=\"noopener\">demo预览</a></p>\n<p>正在开发中……</p>\n<p><img src=\"https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg\" alt=\"\"></p>\n<h2 id=\"交流群\"><a href=\"#交流群\" class=\"headerlink\" title=\"交流群\"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p>\n<p>若你是创作者，加群QQ: 194472590</p>\n<h2 id=\"主题特性\"><a href=\"#主题特性\" class=\"headerlink\" title=\"主题特性\"></a>主题特性</h2><ul>\n<li>首页大屏视频</li>\n<li>首页随机封面</li>\n<li>图片懒加载</li>\n<li>valine评论</li>\n<li>fancy-box相册</li>\n<li>pjax支持，音乐不间断</li>\n<li>aplayer音乐播放器</li>\n<li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li>\n</ul>\n<h2 id=\"赞赏作者\"><a href=\"#赞赏作者\" class=\"headerlink\" title=\"赞赏作者\"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p>\n<p><a href=\"https://www.paypal.me/hojuncn\" target=\"_blank\" rel=\"noopener\">paypal</a> | <a href=\"https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg\" target=\"_blank\" rel=\"noopener\">Alipay 支付宝</a> | <a href=\"https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg\" target=\"_blank\" rel=\"noopener\">WeChat Pay 微信支付</a></p>\n<h2 id=\"未完善的使用教程\"><a href=\"#未完善的使用教程\" class=\"headerlink\" title=\"未完善的使用教程\"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p>\n<h2 id=\"1、主题下载安装\"><a href=\"#1、主题下载安装\" class=\"headerlink\" title=\"1、主题下载安装\"></a>1、主题下载安装</h2><p><a href=\"https://github.com/honjun/hexo-theme-sakura\" target=\"_blank\" rel=\"noopener\">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p>\n<p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p>\n<h2 id=\"2、主题配置\"><a href=\"#2、主题配置\" class=\"headerlink\" title=\"2、主题配置\"></a>2、主题配置</h2><h3 id=\"博客根目录下的-config配置\"><a href=\"#博客根目录下的-config配置\" class=\"headerlink\" title=\"博客根目录下的_config配置\"></a>博客根目录下的_config配置</h3><p>站点</p>\n<pre><code class=\"yml\"># Site\ntitle: 你的站点名\nsubtitle:\ndescription: 站点简介\nkeywords:\nauthor: 作者名\nlanguage: zh-cn\ntimezone:</code></pre>\n<p>部署</p>\n<pre><code class=\"yml\">deploy:\n  type: git\n  repo: \n    github: 你的github仓库地址\n    # coding: 你的coding仓库地址\n  branch: master</code></pre>\n<p>备份 （使用hexo b发布备份到远程仓库）</p>\n<pre><code class=\"yml\">backup:\n  type: git\n  message: backup my blog of https://honjun.github.io/\n  repository:\n    # 你的github仓库地址,备份分支名  （建议新建backup分支）\n    github: https://github.com/honjun/honjun.github.io.git,backup\n    # coding: https://git.coding.net/hojun/hojun.git,backup\n</code></pre>\n<h3 id=\"主题目录下的-config配置\"><a href=\"#主题目录下的-config配置\" class=\"headerlink\" title=\"主题目录下的_config配置\"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p>\n<pre><code class=\"yml\"># site name\n# 站点名 【改】\nprefixName: さくら荘その\nsiteName: hojun\n\n# favicon and site master avatar\n# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】\nfavicon: /images/favicon.ico\navatar: /img/custom/avatar.jpg\n\n# 站点url 【改】\nurl: https://sakura.hojun.cn\n\n# 站点介绍（或者说是个人签名）【改】\ndescription: Live your life with passion! With some drive!\n\n# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg\ncdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6\n\n# 开启pjax 【选】\npjax: 1\n\n# 站点首页的公告信息 【改】\nnotice: hexo-Sakura主题已经开源，目前正在开发中...\n\n# 懒加载的加载中图片 【选】\nlazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg\n\n# 站点菜单配置 【选】\nmenus:\n  首页: { path: /, fa: fa-fort-awesome faa-shake }\n  归档: { path: /archives, fa: fa-archive faa-shake, submenus: { \n    技术: {path: /categories/技术/, fa: fa-code }, \n    生活: {path: /categories/生活/, fa: fa-file-text-o }, \n    资源: {path: /categories/资源/, fa: fa-cloud-download }, \n    随想: {path: /categories/随想/, fa: fa-commenting-o },\n    转载: {path: /categories/转载/, fa: fa-book }\n  } }\n  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { \n    书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, \n    番组: {path: /bangumi/, fa: fa-film faa-vertical }, \n    歌单: {path: /music/, fa: fa-headphones },\n    图集: {path: /tags/图集/, fa: fa-photo }\n  } }\n  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }\n  友人帐: { path: /links/, fa: fa-link faa-shake }\n  赞赏: { path: /donate/, fa: fa-heart faa-pulse }\n  关于: { path: /, fa: fa-leaf faa-wrench , submenus: { \n    我？: {path: /about/, fa: fa-meetup}, \n    主题: {path: /theme-sakura/, fa: iconfont icon-sakura },\n    Lab: {path: /lab/, fa: fa-cogs },\n  } }\n  客户端: { path: /client/, fa: fa-android faa-vertical }\n  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }\n\n# Home page sort type: -1: newer first，1: older first. 【非】\nhomePageSortType: -1\n\n# Home page article shown number) 【非】\nhomeArticleShown: 10\n\n# 背景图片 【选】\nbgn: 8\n\n# startdash面板 url, title, desc img 【改】\nstartdash: \n  - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}\n  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}\n  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}\n\n\n# your site build time or founded date\n# 你的站点建立日期 【改】\nsiteBuildingTime: 07/17/2018\n\n\n# 社交按钮(social)  url, img PC端配置 【改】\nsocial:\n  github: {url: http://github.com/honjun, img: /img/social/github.png}\n  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}\n  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}\n  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}\n  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}\n  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}\n\n# 社交按钮(msocial)  url, img 移动端配置 【改】\nmsocial:\n  github: {url: http://github.com/honjun, fa: fa-github, color: 333}\n  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}\n  qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe}\n\n# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】\ndonate:\n  alipay: /img/custom/donate/AliPayQR.jpg\n  wechat: /img/custom/donate/WeChanQR.jpg\n  wechatSQ: /img/custom/donate/WeChanSQ.jpg\n\n# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】\nmovies:\n  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2\n  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用\n  name: Unbroken.mp4\n\n# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】\naplayer: \n  id: 2660651585\n  server: netease\n  type: playlist\n  fixed: true\n  mini: false\n  autoplay: false\n  loop: all\n  order: random\n  preload: auto\n  volume: 0.7\n  mutex: true\n\n# Valine评论配置【改】\nvaline: true\nv_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz\nv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ</code></pre>\n<h2 id=\"分类页和标签页配置\"><a href=\"#分类页和标签页配置\" class=\"headerlink\" title=\"分类页和标签页配置\"></a>分类页和标签页配置</h2><h3 id=\"分类页\"><a href=\"#分类页\" class=\"headerlink\" title=\"分类页\"></a>分类页</h3><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg\" alt=\"\"></p>\n<h3 id=\"标签页\"><a href=\"#标签页\" class=\"headerlink\" title=\"标签页\"></a>标签页</h3><p><img src=\"https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg\" alt=\"\"></p>\n<p>配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p>\n<pre><code class=\"yml\">#category\n# 按分类名创建\n技术:\n    #中文标题\n    zh: 野生技术协会 \n    # 英文标题\n    en: Geek – Only for Love\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg\n生活:\n    zh: 生活\n    en: live\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg\n\n#tag\n# 标签名即是标题\n悦读:\n    # 封面图片\n    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg</code></pre>\n<h2 id=\"单页面封面配置\"><a href=\"#单页面封面配置\" class=\"headerlink\" title=\"单页面封面配置\"></a>单页面封面配置</h2><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg\" alt=\"\"><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p>\n<pre><code class=\"md\">---\ntitle: comment\ndate: 2018-12-20 23:13:48\nkeywords: 留言板\ndescription: \ncomments: true\n# 在这里配置单页面头部图片，自定义替换哦~\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg\n---</code></pre>\n<h2 id=\"单页面配置\"><a href=\"#单页面配置\" class=\"headerlink\" title=\"单页面配置\"></a>单页面配置</h2><h3 id=\"番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"><a href=\"#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\" class=\"headerlink\" title=\"番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src=\"https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg\" alt=\"\"></p>\n<pre><code class=\"yml\">---\nlayout: bangumi\ntitle: bangumi\ncomments: false\ndate: 2019-02-10 21:32:48\nkeywords:\ndescription:\nbangumis:\n  # 番组图片\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n  # 番组名\n    title: 朝花夕誓——于离别之朝束起约定之花\n  # 追番状态 （追番ing/已追完）\n    status: 已追完\n  # 追番进度\n    progress: 100\n  # 番剧日文名称\n    jp: さよならの朝に約束の花をかざろう\n  # 放送时间\n    time: 放送时间: 2018-02-24 SUN.\n  # 番剧介绍\n    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\n    title: 朝花夕誓——于离别之朝束起约定之花\n    status: 已追完\n    progress: 50\n    jp: さよならの朝に約束の花をかざろう\n    time: 放送时间: 2018-02-24 SUN.\n    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\n---</code></pre>\n<h3 id=\"友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"><a href=\"#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\" class=\"headerlink\" title=\"友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）\"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src=\"https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg\" alt=\"\"></p>\n<pre><code class=\"yml\">---\nlayout: links\ntitle: links\n# 创建日期，可以改下\ndate: 2018-12-19 23:11:06 \n# 图片上的标题，自定义修改\nkeywords: 友人帐 \ndescription: \n# true/false 开启/关闭评论\ncomments: true \n# 页面头部图片，自定义修改\nphotos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg \n# 友链配置\nlinks: \n  # 类型分组\n  - group: 个人项目\n    # 类型简介\n    desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt;\n    items:\n    # 友链链接\n    - url: https://shino.cc/fgvf\n    # 友链头像\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n    # 友链站点名\n      name: Google\n    # 友链介绍  下面雷同\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n  # 类型分组...\n  - group: 小伙伴们\n    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)\n    items:\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n    - url: https://shino.cc/fgvf\n      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg\n      name: Google\n      desc: Google 镜像\n---</code></pre>\n<h2 id=\"写文章配置\"><a href=\"#写文章配置\" class=\"headerlink\" title=\"写文章配置\"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p>\n<pre><code class=\"md\">{% bili video_id [page] %}</code></pre>\n<p>详细使用教程详见<a href=\"https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">hexo-tag-bili</a>。</p>\n<p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p>\n<pre><code class=\"md\">{% fb_img src [caption] %}</code></pre>\n<p>详细使用教程详见<a href=\"https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">hexo-tag-fancybox_img</a></p>\n<h2 id=\"还有啥，一时想不起来……\"><a href=\"#还有啥，一时想不起来……\" class=\"headerlink\" title=\"还有啥，一时想不起来……\"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>\n"},{"title":"单片机开发板引脚图","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-12T02:20:53.000Z","comments":1,"keywords":"C语言学习","description":"C语言学习","photos":["https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/20200309125038.png"],"_content":"\n\n\n## Arduino 开发板引脚图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191632129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191652822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192259547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191831492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## esp8266 引脚图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192349758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192410608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## STC89C51单片机引脚图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192510123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n","source":"_posts/11.单片机开发板引脚图.md","raw":"---\ntitle: 单片机开发板引脚图\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-12 10:20:53\ncomments: true\ntags: \n - 物联网\n - 嵌入式\n\nkeywords: C语言学习\ndescription: C语言学习\nphotos: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/20200309125038.png\n---\n\n\n\n## Arduino 开发板引脚图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191632129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191652822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192259547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229191831492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## esp8266 引脚图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192349758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192410608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## STC89C51单片机引脚图\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200229192510123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n","slug":"11.单片机开发板引脚图","published":1,"updated":"2020-03-10T13:27:06.218Z","layout":"post","link":"","_id":"ck7m05luc000dvgv41mn4eo8a","content":"<h2 id=\"Arduino-开发板引脚图\"><a href=\"#Arduino-开发板引脚图\" class=\"headerlink\" title=\"Arduino 开发板引脚图\"></a>Arduino 开发板引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229191632129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200229191652822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200229192259547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200229191831492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"esp8266-引脚图\"><a href=\"#esp8266-引脚图\" class=\"headerlink\" title=\"esp8266 引脚图\"></a>esp8266 引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229192349758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200229192410608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"STC89C51单片机引脚图\"><a href=\"#STC89C51单片机引脚图\" class=\"headerlink\" title=\"STC89C51单片机引脚图\"></a>STC89C51单片机引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229192510123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"length":37,"excerpt":"","more":"<h2 id=\"Arduino-开发板引脚图\"><a href=\"#Arduino-开发板引脚图\" class=\"headerlink\" title=\"Arduino 开发板引脚图\"></a>Arduino 开发板引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229191632129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200229191652822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200229192259547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200229191831492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"esp8266-引脚图\"><a href=\"#esp8266-引脚图\" class=\"headerlink\" title=\"esp8266 引脚图\"></a>esp8266 引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229192349758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200229192410608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"STC89C51单片机引脚图\"><a href=\"#STC89C51单片机引脚图\" class=\"headerlink\" title=\"STC89C51单片机引脚图\"></a>STC89C51单片机引脚图</h2><p><img src=\"https://img-blog.csdnimg.cn/20200229192510123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"数据结构与算法之排序","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-15T01:16:01.000Z","comments":1,"keywords":"排序算法","description":"排序算法","photos":["http://n.sinaimg.cn/translate/w400h289/20180123/RLKa-fyqwiqi5497788.jpg"],"_content":"\n### 简介\n**排序的归纳以及时间复杂度表**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221092043799.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 冒泡排序\n**冒泡排序是一个比较简单的排序，它是一次比较相邻两个元素的值，如何顺序错误就交换两个数的位置，一直到没有交换的数为止，排序结束。**\n\n**若对n个数进行排序，我们需要n-1次比较，所以第k次比较需要进行n-k次比较。**>\n>排序算法通过以数据对象的两两比较作为关键所以可以得出，冒泡排序需要进行的比较次数为：(n-1) + (n-2) + ... + 1 = n*(n-1) / 2。 \n因此冒泡排序的  **时间复杂度为O(n^2)**\n\n**算法**\n1. 比较相邻的元素，前一个比后一个大（或者前一个比后一个小）调换位置\n2. 每一对相邻的元素进行重复的工作，从开始对一直到结尾对，这步完成后，结尾为做大或最小的数\n3. 针对除了最后一个元素重复进行上面的步骤。\n4. 重复1-3步骤直到完成排序\n\n\n动图演示：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200219211242963.gif)\n\n```c\n//冒泡排序 从小到大\n#include <stdio.h>\n\nvoid bubble_sort(int *arr, int n)\n{\n\tint i,j;\n \tfor(i = 0; i < n-1; i++)\n \t{\n  \t\tfor(j = 0; j < n-i-1; j++)\n  \t\t{\n   \t\t\tif(arr[j] > arr[j+1])\n   \t\t\t{\n    \t\t\t\tint tmp = arr[j];\n    \t\t\t\tarr[j] = arr[j+1];\n    \t\t\t\tarr[j+1] = tmp;\n   \t\t\t} \n  \t\t}\n\t}\n}\n\nint main()\n{\n\tint i;\n \tint arr[]={0,2,1,3,4,6,5,7,9,8};\n \tint n = sizeof(arr) / sizeof(int);\n \tbubble_sort(arr,n);\n \tfor(i = 0; i < n; i++)\n \t{\n  \t\tprintf(\"%d \",arr[i]);\n \t}\n \tprintf(\"\\r\\n\");\n \treturn 0;\n}\n```\n**程序运行结果**\n![冒泡排序](https://img-blog.csdnimg.cn/20200219212103173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 选择排序\n>选择排序共需要的比较次数为n*(n-1) / 2，因此选择排序算法的时间复杂度与冒泡排序一样，也为O(n^2)\n\n**算法简介：**\n   1. 初始状态：序列为无序状态。\n   2. 第1次排序：从n个元素中找出最小(大)元素与第1个记录交换\n   3. 第2次排序：从n-1个元素中找出最小(大)元素与第2个记录交换\n   4. 第i次排序：从n-i+1个元素中找出最小(大)元素与第i个记录交换\n   5. 以此类推直到排序完成\n   \n 动图演示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221115211917.gif)\n\n```c\n//选择排序 从大到小\n#include <stdio.h>\n//函数申明\nvoid choice (int * a, int n );\nvoid show ( int *a, int n );\n\nint main ( )\n{\n    int arr[10] = {1,3,2,4,6,5,7,8,9};\n    show(arr, 10);\n    choice(arr, 10);\n    show(arr, 10);\n    return 0;\n}\n\n//选择排序\nvoid choice ( int *a, int n )\n{\n    int i , j ,tmp;\n    for (i = 0; i < n - 1; i++)\n    {\n       for (j = i + 1; j < n; j++)\n       {\n           if (a[i] < a[j])\n           {\n             tmp = a[i];\n             a[i] = a[j];\n             a[j] = tmp;\n           }\n      }\n    }\n}\n\n//显示\nvoid show (int * a, int n)\n{\n    int i = 0;\n    for (i = 0; i < n; i++)\n    {\n        printf (\"%d \", a[i]);\n    }\n    printf(\"\\r\\n\");\n}\n\n```\n\n运行结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221114707870.png) \n\n\n### 插入排序\n>插入排序是一个比较直观的算法，对于n个元素，一共需要进行n-1轮比较，而第k轮比较需要进行k次数组元素的两两比较，因此共需要进行的比较次数为：1 + 2 + ... + (n-1)，所以插入排序的时间复杂度同冒泡排序一样，也为O(n^2)\n\n**算法简介：**\n   1. 从第一个元素开始，该元素可认为已排序。\n   2. 取出下一个元素，在排序好的元素序列中从后往前扫描\n   3. 如果元素(已排序)大于新元素，将该元素移到下一位置\n   4. 重复3.直到找到已排序的元素小于或等于新元素的位置\n   5. 将新元素插入该位置后\n   6. 重复2-5直到排序完成\n \n**动图演示**\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221112449619.gif)\n\n**代码部分**\n\n```c\n//插入排序(从小到大) \n#include<stdio.h>\n\n//定义一个插入函数\"insertion_sort\" \nvoid insertion_sort(int *number,int n)    \n{\n    int i=0,ii=0,temp=0;  \n     //循环遍历 \n    for(i=1;i<n;i++) \n    {\n    \t//将temp每一次赋值为number[i] \n        temp=number[i];  \n        ii=i-1;  \n        //这里改顺序 (temp后的)\"<\"为小到大，\">\"为大到小 ！！！\n        while(ii>=0&&temp<number[ii])   \n        {\n            //将大的元素往前放 \n            number[ii+1]=number[ii];   \n            ii--; \n        }\n        number[ii+1]=temp;   //与\"number[ii+1]=number[ii];\"一起意为 \n    }              //如果插入的数比之前的大,将number[ii]与number[ii+1]互换 \n}\n\nint main() \n{\n   int i;\n  int arr[]={2,0,1,3,4,6,5,7,9,8};\n  int n = sizeof(arr) / sizeof(int);\n  insertion_sort(arr,n);\n  for(i = 0; i < n; i++)\n  {\n    printf(\"%d \",arr[i]);\n  }\n  printf(\"\\r\\n\");\n  return 0;\n}\n```\n\n运行结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221120801595.png)\n\n***\n\n","source":"_posts/12.数据结构与算法之排序.md","raw":"---\ntitle: 数据结构与算法之排序\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中... \ncategories: 技术\ndate: 2020-2-15 09:16:01\ncomments: true\ntags: \n - C语言\nkeywords: 排序算法\ndescription:  排序算法\nphotos: http://n.sinaimg.cn/translate/w400h289/20180123/RLKa-fyqwiqi5497788.jpg\n---\n\n### 简介\n**排序的归纳以及时间复杂度表**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221092043799.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 冒泡排序\n**冒泡排序是一个比较简单的排序，它是一次比较相邻两个元素的值，如何顺序错误就交换两个数的位置，一直到没有交换的数为止，排序结束。**\n\n**若对n个数进行排序，我们需要n-1次比较，所以第k次比较需要进行n-k次比较。**>\n>排序算法通过以数据对象的两两比较作为关键所以可以得出，冒泡排序需要进行的比较次数为：(n-1) + (n-2) + ... + 1 = n*(n-1) / 2。 \n因此冒泡排序的  **时间复杂度为O(n^2)**\n\n**算法**\n1. 比较相邻的元素，前一个比后一个大（或者前一个比后一个小）调换位置\n2. 每一对相邻的元素进行重复的工作，从开始对一直到结尾对，这步完成后，结尾为做大或最小的数\n3. 针对除了最后一个元素重复进行上面的步骤。\n4. 重复1-3步骤直到完成排序\n\n\n动图演示：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200219211242963.gif)\n\n```c\n//冒泡排序 从小到大\n#include <stdio.h>\n\nvoid bubble_sort(int *arr, int n)\n{\n\tint i,j;\n \tfor(i = 0; i < n-1; i++)\n \t{\n  \t\tfor(j = 0; j < n-i-1; j++)\n  \t\t{\n   \t\t\tif(arr[j] > arr[j+1])\n   \t\t\t{\n    \t\t\t\tint tmp = arr[j];\n    \t\t\t\tarr[j] = arr[j+1];\n    \t\t\t\tarr[j+1] = tmp;\n   \t\t\t} \n  \t\t}\n\t}\n}\n\nint main()\n{\n\tint i;\n \tint arr[]={0,2,1,3,4,6,5,7,9,8};\n \tint n = sizeof(arr) / sizeof(int);\n \tbubble_sort(arr,n);\n \tfor(i = 0; i < n; i++)\n \t{\n  \t\tprintf(\"%d \",arr[i]);\n \t}\n \tprintf(\"\\r\\n\");\n \treturn 0;\n}\n```\n**程序运行结果**\n![冒泡排序](https://img-blog.csdnimg.cn/20200219212103173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 选择排序\n>选择排序共需要的比较次数为n*(n-1) / 2，因此选择排序算法的时间复杂度与冒泡排序一样，也为O(n^2)\n\n**算法简介：**\n   1. 初始状态：序列为无序状态。\n   2. 第1次排序：从n个元素中找出最小(大)元素与第1个记录交换\n   3. 第2次排序：从n-1个元素中找出最小(大)元素与第2个记录交换\n   4. 第i次排序：从n-i+1个元素中找出最小(大)元素与第i个记录交换\n   5. 以此类推直到排序完成\n   \n 动图演示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221115211917.gif)\n\n```c\n//选择排序 从大到小\n#include <stdio.h>\n//函数申明\nvoid choice (int * a, int n );\nvoid show ( int *a, int n );\n\nint main ( )\n{\n    int arr[10] = {1,3,2,4,6,5,7,8,9};\n    show(arr, 10);\n    choice(arr, 10);\n    show(arr, 10);\n    return 0;\n}\n\n//选择排序\nvoid choice ( int *a, int n )\n{\n    int i , j ,tmp;\n    for (i = 0; i < n - 1; i++)\n    {\n       for (j = i + 1; j < n; j++)\n       {\n           if (a[i] < a[j])\n           {\n             tmp = a[i];\n             a[i] = a[j];\n             a[j] = tmp;\n           }\n      }\n    }\n}\n\n//显示\nvoid show (int * a, int n)\n{\n    int i = 0;\n    for (i = 0; i < n; i++)\n    {\n        printf (\"%d \", a[i]);\n    }\n    printf(\"\\r\\n\");\n}\n\n```\n\n运行结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221114707870.png) \n\n\n### 插入排序\n>插入排序是一个比较直观的算法，对于n个元素，一共需要进行n-1轮比较，而第k轮比较需要进行k次数组元素的两两比较，因此共需要进行的比较次数为：1 + 2 + ... + (n-1)，所以插入排序的时间复杂度同冒泡排序一样，也为O(n^2)\n\n**算法简介：**\n   1. 从第一个元素开始，该元素可认为已排序。\n   2. 取出下一个元素，在排序好的元素序列中从后往前扫描\n   3. 如果元素(已排序)大于新元素，将该元素移到下一位置\n   4. 重复3.直到找到已排序的元素小于或等于新元素的位置\n   5. 将新元素插入该位置后\n   6. 重复2-5直到排序完成\n \n**动图演示**\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221112449619.gif)\n\n**代码部分**\n\n```c\n//插入排序(从小到大) \n#include<stdio.h>\n\n//定义一个插入函数\"insertion_sort\" \nvoid insertion_sort(int *number,int n)    \n{\n    int i=0,ii=0,temp=0;  \n     //循环遍历 \n    for(i=1;i<n;i++) \n    {\n    \t//将temp每一次赋值为number[i] \n        temp=number[i];  \n        ii=i-1;  \n        //这里改顺序 (temp后的)\"<\"为小到大，\">\"为大到小 ！！！\n        while(ii>=0&&temp<number[ii])   \n        {\n            //将大的元素往前放 \n            number[ii+1]=number[ii];   \n            ii--; \n        }\n        number[ii+1]=temp;   //与\"number[ii+1]=number[ii];\"一起意为 \n    }              //如果插入的数比之前的大,将number[ii]与number[ii+1]互换 \n}\n\nint main() \n{\n   int i;\n  int arr[]={2,0,1,3,4,6,5,7,9,8};\n  int n = sizeof(arr) / sizeof(int);\n  insertion_sort(arr,n);\n  for(i = 0; i < n; i++)\n  {\n    printf(\"%d \",arr[i]);\n  }\n  printf(\"\\r\\n\");\n  return 0;\n}\n```\n\n运行结果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200221120801595.png)\n\n***\n\n","slug":"12.数据结构与算法之排序","published":1,"updated":"2020-03-10T10:44:09.049Z","layout":"post","link":"","_id":"ck7m05lun000gvgv4ern87e3a","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p><strong>排序的归纳以及时间复杂度表</strong><br><img src=\"https://img-blog.csdnimg.cn/20200221092043799.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><p><strong>冒泡排序是一个比较简单的排序，它是一次比较相邻两个元素的值，如何顺序错误就交换两个数的位置，一直到没有交换的数为止，排序结束。</strong></p>\n<p><strong>若对n个数进行排序，我们需要n-1次比较，所以第k次比较需要进行n-k次比较。</strong>&gt;</p>\n<blockquote>\n<p>排序算法通过以数据对象的两两比较作为关键所以可以得出，冒泡排序需要进行的比较次数为：(n-1) + (n-2) + … + 1 = n<em>(n-1) / 2。<br>因此冒泡排序的  *</em>时间复杂度为O(n^2)**</p>\n</blockquote>\n<p><strong>算法</strong></p>\n<ol>\n<li>比较相邻的元素，前一个比后一个大（或者前一个比后一个小）调换位置</li>\n<li>每一对相邻的元素进行重复的工作，从开始对一直到结尾对，这步完成后，结尾为做大或最小的数</li>\n<li>针对除了最后一个元素重复进行上面的步骤。</li>\n<li>重复1-3步骤直到完成排序</li>\n</ol>\n<p>动图演示：<br><img src=\"https://img-blog.csdnimg.cn/20200219211242963.gif\" alt=\"在这里插入图片描述\"></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//冒泡排序 从小到大</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">bubble_sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token operator\">-</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">{</span>\n               <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n               <span class=\"token punctuation\">}</span> \n          <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token function\">bubble_sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>程序运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200219212103173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"冒泡排序\"></p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><blockquote>\n<p>选择排序共需要的比较次数为n*(n-1) / 2，因此选择排序算法的时间复杂度与冒泡排序一样，也为O(n^2)</p>\n</blockquote>\n<p><strong>算法简介：</strong></p>\n<ol>\n<li><p>初始状态：序列为无序状态。</p>\n</li>\n<li><p>第1次排序：从n个元素中找出最小(大)元素与第1个记录交换</p>\n</li>\n<li><p>第2次排序：从n-1个元素中找出最小(大)元素与第2个记录交换</p>\n</li>\n<li><p>第i次排序：从n-i+1个元素中找出最小(大)元素与第i个记录交换</p>\n</li>\n<li><p>以此类推直到排序完成</p>\n<p>动图演示<br><img src=\"https://img-blog.csdnimg.cn/20200221115211917.gif\" alt=\"在这里插入图片描述\"></p>\n</li>\n</ol>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//选择排序 从大到小</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token comment\" spellcheck=\"true\">//函数申明</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">choice</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">show</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">choice</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//选择排序</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">choice</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">{</span>\n             tmp <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n             a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n             a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//显示</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">show</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>运行结果<br><img src=\"https://img-blog.csdnimg.cn/20200221114707870.png\" alt=\"在这里插入图片描述\"> </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><blockquote>\n<p>插入排序是一个比较直观的算法，对于n个元素，一共需要进行n-1轮比较，而第k轮比较需要进行k次数组元素的两两比较，因此共需要进行的比较次数为：1 + 2 + … + (n-1)，所以插入排序的时间复杂度同冒泡排序一样，也为O(n^2)</p>\n</blockquote>\n<p><strong>算法简介：</strong></p>\n<ol>\n<li>从第一个元素开始，该元素可认为已排序。</li>\n<li>取出下一个元素，在排序好的元素序列中从后往前扫描</li>\n<li>如果元素(已排序)大于新元素，将该元素移到下一位置</li>\n<li>重复3.直到找到已排序的元素小于或等于新元素的位置</li>\n<li>将新元素插入该位置后</li>\n<li>重复2-5直到排序完成</li>\n</ol>\n<p><strong>动图演示</strong><br> <img src=\"https://img-blog.csdnimg.cn/20200221112449619.gif\" alt=\"在这里插入图片描述\"></p>\n<p><strong>代码部分</strong></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//插入排序(从小到大) </span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//定义一个插入函数\"insertion_sort\" </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">insertion_sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>number<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>    \n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ii<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>temp<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  \n     <span class=\"token comment\" spellcheck=\"true\">//循环遍历 </span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">//将temp每一次赋值为number[i] </span>\n        temp<span class=\"token operator\">=</span>number<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  \n        ii<span class=\"token operator\">=</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token comment\" spellcheck=\"true\">//这里改顺序 (temp后的)\"&lt;\"为小到大，\">\"为大到小 ！！！</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ii<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span>temp<span class=\"token operator\">&lt;</span>number<span class=\"token punctuation\">[</span>ii<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">//将大的元素往前放 </span>\n            number<span class=\"token punctuation\">[</span>ii<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>number<span class=\"token punctuation\">[</span>ii<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   \n            ii<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">}</span>\n        number<span class=\"token punctuation\">[</span>ii<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>temp<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">//与\"number[ii+1]=number[ii];\"一起意为 </span>\n    <span class=\"token punctuation\">}</span>              <span class=\"token comment\" spellcheck=\"true\">//如果插入的数比之前的大,将number[ii]与number[ii+1]互换 </span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">insertion_sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>运行结果<br><img src=\"https://img-blog.csdnimg.cn/20200221120801595.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n","site":{"data":{}},"length":2170,"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p><strong>排序的归纳以及时间复杂度表</strong><br><img src=\"https://img-blog.csdnimg.cn/20200221092043799.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><p><strong>冒泡排序是一个比较简单的排序，它是一次比较相邻两个元素的值，如何顺序错误就交换两个数的位置，一直到没有交换的数为止，排序结束。</strong></p>\n<p><strong>若对n个数进行排序，我们需要n-1次比较，所以第k次比较需要进行n-k次比较。</strong>&gt;</p>\n<blockquote>\n<p>排序算法通过以数据对象的两两比较作为关键所以可以得出，冒泡排序需要进行的比较次数为：(n-1) + (n-2) + … + 1 = n<em>(n-1) / 2。<br>因此冒泡排序的  *</em>时间复杂度为O(n^2)**</p>\n</blockquote>\n<p><strong>算法</strong></p>\n<ol>\n<li>比较相邻的元素，前一个比后一个大（或者前一个比后一个小）调换位置</li>\n<li>每一对相邻的元素进行重复的工作，从开始对一直到结尾对，这步完成后，结尾为做大或最小的数</li>\n<li>针对除了最后一个元素重复进行上面的步骤。</li>\n<li>重复1-3步骤直到完成排序</li>\n</ol>\n<p>动图演示：<br><img src=\"https://img-blog.csdnimg.cn/20200219211242963.gif\" alt=\"在这里插入图片描述\"></p>\n<pre><code class=\"c\">//冒泡排序 从小到大\n#include &lt;stdio.h&gt;\n\nvoid bubble_sort(int *arr, int n)\n{\n    int i,j;\n     for(i = 0; i &lt; n-1; i++)\n     {\n          for(j = 0; j &lt; n-i-1; j++)\n          {\n               if(arr[j] &gt; arr[j+1])\n               {\n                    int tmp = arr[j];\n                    arr[j] = arr[j+1];\n                    arr[j+1] = tmp;\n               } \n          }\n    }\n}\n\nint main()\n{\n    int i;\n     int arr[]={0,2,1,3,4,6,5,7,9,8};\n     int n = sizeof(arr) / sizeof(int);\n     bubble_sort(arr,n);\n     for(i = 0; i &lt; n; i++)\n     {\n          printf(&quot;%d &quot;,arr[i]);\n     }\n     printf(&quot;\\r\\n&quot;);\n     return 0;\n}</code></pre>\n<p><strong>程序运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200219212103173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"冒泡排序\"></p>\n<h3 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h3><blockquote>\n<p>选择排序共需要的比较次数为n*(n-1) / 2，因此选择排序算法的时间复杂度与冒泡排序一样，也为O(n^2)</p>\n</blockquote>\n<p><strong>算法简介：</strong></p>\n<ol>\n<li><p>初始状态：序列为无序状态。</p>\n</li>\n<li><p>第1次排序：从n个元素中找出最小(大)元素与第1个记录交换</p>\n</li>\n<li><p>第2次排序：从n-1个元素中找出最小(大)元素与第2个记录交换</p>\n</li>\n<li><p>第i次排序：从n-i+1个元素中找出最小(大)元素与第i个记录交换</p>\n</li>\n<li><p>以此类推直到排序完成</p>\n<p>动图演示<br><img src=\"https://img-blog.csdnimg.cn/20200221115211917.gif\" alt=\"在这里插入图片描述\"></p>\n</li>\n</ol>\n<pre><code class=\"c\">//选择排序 从大到小\n#include &lt;stdio.h&gt;\n//函数申明\nvoid choice (int * a, int n );\nvoid show ( int *a, int n );\n\nint main ( )\n{\n    int arr[10] = {1,3,2,4,6,5,7,8,9};\n    show(arr, 10);\n    choice(arr, 10);\n    show(arr, 10);\n    return 0;\n}\n\n//选择排序\nvoid choice ( int *a, int n )\n{\n    int i , j ,tmp;\n    for (i = 0; i &lt; n - 1; i++)\n    {\n       for (j = i + 1; j &lt; n; j++)\n       {\n           if (a[i] &lt; a[j])\n           {\n             tmp = a[i];\n             a[i] = a[j];\n             a[j] = tmp;\n           }\n      }\n    }\n}\n\n//显示\nvoid show (int * a, int n)\n{\n    int i = 0;\n    for (i = 0; i &lt; n; i++)\n    {\n        printf (&quot;%d &quot;, a[i]);\n    }\n    printf(&quot;\\r\\n&quot;);\n}\n</code></pre>\n<p>运行结果<br><img src=\"https://img-blog.csdnimg.cn/20200221114707870.png\" alt=\"在这里插入图片描述\"> </p>\n<h3 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h3><blockquote>\n<p>插入排序是一个比较直观的算法，对于n个元素，一共需要进行n-1轮比较，而第k轮比较需要进行k次数组元素的两两比较，因此共需要进行的比较次数为：1 + 2 + … + (n-1)，所以插入排序的时间复杂度同冒泡排序一样，也为O(n^2)</p>\n</blockquote>\n<p><strong>算法简介：</strong></p>\n<ol>\n<li>从第一个元素开始，该元素可认为已排序。</li>\n<li>取出下一个元素，在排序好的元素序列中从后往前扫描</li>\n<li>如果元素(已排序)大于新元素，将该元素移到下一位置</li>\n<li>重复3.直到找到已排序的元素小于或等于新元素的位置</li>\n<li>将新元素插入该位置后</li>\n<li>重复2-5直到排序完成</li>\n</ol>\n<p><strong>动图演示</strong><br> <img src=\"https://img-blog.csdnimg.cn/20200221112449619.gif\" alt=\"在这里插入图片描述\"></p>\n<p><strong>代码部分</strong></p>\n<pre><code class=\"c\">//插入排序(从小到大) \n#include&lt;stdio.h&gt;\n\n//定义一个插入函数&quot;insertion_sort&quot; \nvoid insertion_sort(int *number,int n)    \n{\n    int i=0,ii=0,temp=0;  \n     //循环遍历 \n    for(i=1;i&lt;n;i++) \n    {\n        //将temp每一次赋值为number[i] \n        temp=number[i];  \n        ii=i-1;  \n        //这里改顺序 (temp后的)&quot;&lt;&quot;为小到大，&quot;&gt;&quot;为大到小 ！！！\n        while(ii&gt;=0&amp;&amp;temp&lt;number[ii])   \n        {\n            //将大的元素往前放 \n            number[ii+1]=number[ii];   \n            ii--; \n        }\n        number[ii+1]=temp;   //与&quot;number[ii+1]=number[ii];&quot;一起意为 \n    }              //如果插入的数比之前的大,将number[ii]与number[ii+1]互换 \n}\n\nint main() \n{\n   int i;\n  int arr[]={2,0,1,3,4,6,5,7,9,8};\n  int n = sizeof(arr) / sizeof(int);\n  insertion_sort(arr,n);\n  for(i = 0; i &lt; n; i++)\n  {\n    printf(&quot;%d &quot;,arr[i]);\n  }\n  printf(&quot;\\r\\n&quot;);\n  return 0;\n}</code></pre>\n<p>运行结果<br><img src=\"https://img-blog.csdnimg.cn/20200221120801595.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n"},{"title":"C语言之字节序","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-10T04:30:10.000Z","comments":1,"keywords":"C语言学习","description":"C语言学习","photos":["https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=50600087,2939316881&fm=26&gp=0.jpg"],"_content":"\n## 字节序理解\n字节序其实就是数据在内存中的存储方式，因为内存的地址用高低位之分，数据也有高低位，所以按照存放的顺序一般可分为大端字节序，和小段字节序。\n\n生活中我们放东西的顺序也是不一样的，有的人习惯性的将自己的物品放在自己的左手边，有的人就习惯性的放在自己的右手边，那对于电脑来说，cpu的不同，内存存储多字节数据的存储方式也相应的不同。\n\n## 概念\n## 主机字节序\n不同类型CPU主机中，内存存储多字节整数的方法不同，称为主机字节序\n\n**主机序列有两种**\n小端序 ：数据的低字节存放在内存的低地址  \n大端序 ：数据的高字节存放在内存的低地址 \n\n>一般 inter处理器的字节序为 小端序， 而 ARM 架构的处理器多为大端序\n\n\n\n## 验证主机字节序\nC语言`代码片`\n\n```c\n#include <stdio.h>\n\n//定义一个共用体\nunion Data\n{\n\tint a;\n\tchar b;\n};\n\nint main()\n{\n\tunion Data data;\n\tdata.a = 0x12345678;\n\t//小端序\n\tif (0x78 == data.b)\n\t{\n\t\tprintf(\"the little end sequence\\r\\n\");\n\t}\n\t//大端序\n\telse\n\t{\n\t\tprintf(\"the big end sequence\\r\\n\");\n\t}\n\treturn 0;\n}\n```\n\n##  编程结果\n![inter处理器](https://img-blog.csdnimg.cn/20191117121649689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**运行代码的电脑是inter处理器的，验证为小端序存储**\n\n\n\n\n\n\n","source":"_posts/10.C语言之字节序.md","raw":"---\ntitle: C语言之字节序\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-10 12:30:10\ncomments: true\ntags: \n - C语言\n\nkeywords: C语言学习\ndescription: C语言学习\nphotos: https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=50600087,2939316881&fm=26&gp=0.jpg\n---\n\n## 字节序理解\n字节序其实就是数据在内存中的存储方式，因为内存的地址用高低位之分，数据也有高低位，所以按照存放的顺序一般可分为大端字节序，和小段字节序。\n\n生活中我们放东西的顺序也是不一样的，有的人习惯性的将自己的物品放在自己的左手边，有的人就习惯性的放在自己的右手边，那对于电脑来说，cpu的不同，内存存储多字节数据的存储方式也相应的不同。\n\n## 概念\n## 主机字节序\n不同类型CPU主机中，内存存储多字节整数的方法不同，称为主机字节序\n\n**主机序列有两种**\n小端序 ：数据的低字节存放在内存的低地址  \n大端序 ：数据的高字节存放在内存的低地址 \n\n>一般 inter处理器的字节序为 小端序， 而 ARM 架构的处理器多为大端序\n\n\n\n## 验证主机字节序\nC语言`代码片`\n\n```c\n#include <stdio.h>\n\n//定义一个共用体\nunion Data\n{\n\tint a;\n\tchar b;\n};\n\nint main()\n{\n\tunion Data data;\n\tdata.a = 0x12345678;\n\t//小端序\n\tif (0x78 == data.b)\n\t{\n\t\tprintf(\"the little end sequence\\r\\n\");\n\t}\n\t//大端序\n\telse\n\t{\n\t\tprintf(\"the big end sequence\\r\\n\");\n\t}\n\treturn 0;\n}\n```\n\n##  编程结果\n![inter处理器](https://img-blog.csdnimg.cn/20191117121649689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**运行代码的电脑是inter处理器的，验证为小端序存储**\n\n\n\n\n\n\n","slug":"10.C语言之字节序","published":1,"updated":"2020-03-10T13:26:19.383Z","layout":"post","link":"","_id":"ck7m05luv000hvgv4fkd1fp9z","content":"<h2 id=\"字节序理解\"><a href=\"#字节序理解\" class=\"headerlink\" title=\"字节序理解\"></a>字节序理解</h2><p>字节序其实就是数据在内存中的存储方式，因为内存的地址用高低位之分，数据也有高低位，所以按照存放的顺序一般可分为大端字节序，和小段字节序。</p>\n<p>生活中我们放东西的顺序也是不一样的，有的人习惯性的将自己的物品放在自己的左手边，有的人就习惯性的放在自己的右手边，那对于电脑来说，cpu的不同，内存存储多字节数据的存储方式也相应的不同。</p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h2 id=\"主机字节序\"><a href=\"#主机字节序\" class=\"headerlink\" title=\"主机字节序\"></a>主机字节序</h2><p>不同类型CPU主机中，内存存储多字节整数的方法不同，称为主机字节序</p>\n<p><strong>主机序列有两种</strong><br>小端序 ：数据的低字节存放在内存的低地址<br>大端序 ：数据的高字节存放在内存的低地址 </p>\n<blockquote>\n<p>一般 inter处理器的字节序为 小端序， 而 ARM 架构的处理器多为大端序</p>\n</blockquote>\n<h2 id=\"验证主机字节序\"><a href=\"#验证主机字节序\" class=\"headerlink\" title=\"验证主机字节序\"></a>验证主机字节序</h2><p>C语言<code>代码片</code></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//定义一个共用体</span>\n<span class=\"token keyword\">union</span> Data\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">union</span> Data data<span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">0x12345678</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//小端序</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x78</span> <span class=\"token operator\">==</span> data<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the little end sequence\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//大端序</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the big end sequence\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"编程结果\"><a href=\"#编程结果\" class=\"headerlink\" title=\"编程结果\"></a>编程结果</h2><p><img src=\"https://img-blog.csdnimg.cn/20191117121649689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"inter处理器\"></p>\n<p><strong>运行代码的电脑是inter处理器的，验证为小端序存储</strong></p>\n","site":{"data":{}},"length":555,"excerpt":"","more":"<h2 id=\"字节序理解\"><a href=\"#字节序理解\" class=\"headerlink\" title=\"字节序理解\"></a>字节序理解</h2><p>字节序其实就是数据在内存中的存储方式，因为内存的地址用高低位之分，数据也有高低位，所以按照存放的顺序一般可分为大端字节序，和小段字节序。</p>\n<p>生活中我们放东西的顺序也是不一样的，有的人习惯性的将自己的物品放在自己的左手边，有的人就习惯性的放在自己的右手边，那对于电脑来说，cpu的不同，内存存储多字节数据的存储方式也相应的不同。</p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h2 id=\"主机字节序\"><a href=\"#主机字节序\" class=\"headerlink\" title=\"主机字节序\"></a>主机字节序</h2><p>不同类型CPU主机中，内存存储多字节整数的方法不同，称为主机字节序</p>\n<p><strong>主机序列有两种</strong><br>小端序 ：数据的低字节存放在内存的低地址<br>大端序 ：数据的高字节存放在内存的低地址 </p>\n<blockquote>\n<p>一般 inter处理器的字节序为 小端序， 而 ARM 架构的处理器多为大端序</p>\n</blockquote>\n<h2 id=\"验证主机字节序\"><a href=\"#验证主机字节序\" class=\"headerlink\" title=\"验证主机字节序\"></a>验证主机字节序</h2><p>C语言<code>代码片</code></p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n\n//定义一个共用体\nunion Data\n{\n    int a;\n    char b;\n};\n\nint main()\n{\n    union Data data;\n    data.a = 0x12345678;\n    //小端序\n    if (0x78 == data.b)\n    {\n        printf(&quot;the little end sequence\\r\\n&quot;);\n    }\n    //大端序\n    else\n    {\n        printf(&quot;the big end sequence\\r\\n&quot;);\n    }\n    return 0;\n}</code></pre>\n<h2 id=\"编程结果\"><a href=\"#编程结果\" class=\"headerlink\" title=\"编程结果\"></a>编程结果</h2><p><img src=\"https://img-blog.csdnimg.cn/20191117121649689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"inter处理器\"></p>\n<p><strong>运行代码的电脑是inter处理器的，验证为小端序存储</strong></p>\n"},{"title":"小白入门码云","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-02T02:10:01.000Z","comments":1,"keywords":"gitee的使用教程","description":"gitee码云的使用教程","photos":["https://images4.alphacoders.com/117/117378.jpg"],"_content":"\n## 一.介绍\n**想要了解码云，我们先来了解一下什么是版本控制系统。**\n**版本控制系统的功能**\n1. 代码的备份\n2. 恢复之前的版本\n3. 查看代码修改的内容\n4. 有利于团队的开发，提高开发的效率\n\n>我们可以这样理解\n>这就相当于游戏的存档，当我们打bos的时候先给游戏存个档，如果失败，还可以从存档处继续玩。\n\n- **版本控制系统的分类可分为三种 本地（SCCS RCS），集中式（CVS）, 和分布式（git）而我们说的码云就是分布式**\n\n- **Git 有图形界面客户端和Git命令行界面客户端，我推荐大家先学命令行的客户端，因为我们学习知识不仅要知其然，而且要知其所以然**\n\n- **相信大家也听过微软的github，代码托管平台 ，但是它的界面全部都是英文版的，英语不是很好的朋友学习起来有一点难度，比如说像博主就是。但是感兴趣的朋友可以了解一下。\ngithub官网：[https://github.com/](https://github.com/)**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202002201813354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 二.注册账户\n1. 首先我们先进入码云的官网：[https://gitee.com/](https://gitee.com/)，注册一个账户\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308102158275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n2. 填写相关的信息，注意 个人空间的地址填成自己熟悉的字母，后面用会比较方便\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308101929981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t3. 登录后的图片，我的可能好大家的不太一样，因为[我的gitee](https://gitee.com/zfq0620/) 建了好几个仓库\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308102402252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## 三.本地环境的配置\n言归正传,我们说一下环境的搭建，使用码云，我们先要学会本地代码库的一系列的操作，然后在学习同步到远程代码库，当然远程代码库也有上传文件，删除文件和修改文件等功能，但是如果文件比较多的话就相对比较麻烦。\n\n### 1.如果是在linux系统\n1. 使用命令来下载 git （sudo apt-get install git）,想要获取git的帮助信息也可以使用命令 git command --help，同时也能验证git有没有安装成功。\n2. 使用git之前先要配置用户名，Email和文本编辑器。\n    git config --global user.name \"ZHAI\"\n    git config --global user.email zfq0620@126.com\n    sudo git config --system core.editor vim (设置文本编辑器为vim)\n    查看配置的信息用 git config --list\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220183222551.png)\n\n### 2.如果是windows系统\n 1. 首先我们需要下载一个软件，这个是微软的github的客户端，下载链接：[https://www.lanzous.com/i9iqtvi](https://www.lanzous.com/i9iqtvi)，下载后，就安装，傻瓜式安装一路下一步就行，等安装成功后，鼠标右键会显示下面图片中所显示的两项内容。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220184306454.png)\n 2. 和上面一样，得先配置户名，Email。\n     方法，先鼠标有键，然后打开git Bash Here，然后输入\n    git config --global user.name \"ZHAI\"\n    git config --global user.email zfq0620@126.com\n    输入之后就退出，简单的配置就到这里。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220185049685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n    \n## 四.本地代码库的操作\n### 1.基本概念\n我们先来明白几个名词 working Directory（工作区），Staging Area（暂存区），.git directory(Repository)(仓库)\n\n>我们可以这样理解，就像我们在超市购物，我们得先把想要的商品放在购物车，然后在推到收银台去结账。\n\n### 2.命令操作\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220185944518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190159751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190258508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190508406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n## 五.远程代码库的操作\n### 1.下载远程代码库的代码\n1. 首先我们鼠标右键打开git Bash Here 客户端 \n2. 输入 git clone + 网址（以下图片部分）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220191135493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n### 2.同步远程仓库（上传代码）\n#### 克隆之后的代码更新\n1. 首先我们需要先克隆代码，到本地的文件夹内（注意克隆的时候会将整个仓库克\t隆下来以及.git配置文件等）\n2. 我们修改本地克隆下来的文件后 \n    先要 git add 修改的文件\n    然后 git commit -m \"说明性语言\"\n    最后 git push 就可以将修改过的文件同步到远程代码库\n\n#### 新建仓库后的代码上传\n\n新建仓库后显示如下![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220200026139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**当我们新建一个仓库后，仓库类无任何内容，我们将本地的代码同步到远程仓库就需要一下步骤**\n1. 进入本地仓库目录 cd + 目录的名字\n2. 添加文件到缓存区 git add + 文件名  \n3. 将缓存区文件添加到仓库 git commit -m \"first commit\"\n4. git remote add origin + 网站\n5. git push -u origin master\n\n>等我们再次刷新远程代码库的时候，已经显示所有的上传文件\n\n#### 将远程代码库的文件同步到本地\n- 我们使用 git pull 命令\n\n## 六.注意\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220201401985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n","source":"_posts/3.小白入门gitee（码云）.md","raw":"---\ntitle: 小白入门码云\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/\nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-2 10:10:01\ncomments: true\ntags: \n - 嵌入式\nkeywords: gitee的使用教程\ndescription:  gitee码云的使用教程\nphotos: https://images4.alphacoders.com/117/117378.jpg\n---\n\n## 一.介绍\n**想要了解码云，我们先来了解一下什么是版本控制系统。**\n**版本控制系统的功能**\n1. 代码的备份\n2. 恢复之前的版本\n3. 查看代码修改的内容\n4. 有利于团队的开发，提高开发的效率\n\n>我们可以这样理解\n>这就相当于游戏的存档，当我们打bos的时候先给游戏存个档，如果失败，还可以从存档处继续玩。\n\n- **版本控制系统的分类可分为三种 本地（SCCS RCS），集中式（CVS）, 和分布式（git）而我们说的码云就是分布式**\n\n- **Git 有图形界面客户端和Git命令行界面客户端，我推荐大家先学命令行的客户端，因为我们学习知识不仅要知其然，而且要知其所以然**\n\n- **相信大家也听过微软的github，代码托管平台 ，但是它的界面全部都是英文版的，英语不是很好的朋友学习起来有一点难度，比如说像博主就是。但是感兴趣的朋友可以了解一下。\ngithub官网：[https://github.com/](https://github.com/)**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/202002201813354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 二.注册账户\n1. 首先我们先进入码云的官网：[https://gitee.com/](https://gitee.com/)，注册一个账户\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308102158275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n2. 填写相关的信息，注意 个人空间的地址填成自己熟悉的字母，后面用会比较方便\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308101929981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t3. 登录后的图片，我的可能好大家的不太一样，因为[我的gitee](https://gitee.com/zfq0620/) 建了好几个仓库\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308102402252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## 三.本地环境的配置\n言归正传,我们说一下环境的搭建，使用码云，我们先要学会本地代码库的一系列的操作，然后在学习同步到远程代码库，当然远程代码库也有上传文件，删除文件和修改文件等功能，但是如果文件比较多的话就相对比较麻烦。\n\n### 1.如果是在linux系统\n1. 使用命令来下载 git （sudo apt-get install git）,想要获取git的帮助信息也可以使用命令 git command --help，同时也能验证git有没有安装成功。\n2. 使用git之前先要配置用户名，Email和文本编辑器。\n    git config --global user.name \"ZHAI\"\n    git config --global user.email zfq0620@126.com\n    sudo git config --system core.editor vim (设置文本编辑器为vim)\n    查看配置的信息用 git config --list\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220183222551.png)\n\n### 2.如果是windows系统\n 1. 首先我们需要下载一个软件，这个是微软的github的客户端，下载链接：[https://www.lanzous.com/i9iqtvi](https://www.lanzous.com/i9iqtvi)，下载后，就安装，傻瓜式安装一路下一步就行，等安装成功后，鼠标右键会显示下面图片中所显示的两项内容。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220184306454.png)\n 2. 和上面一样，得先配置户名，Email。\n     方法，先鼠标有键，然后打开git Bash Here，然后输入\n    git config --global user.name \"ZHAI\"\n    git config --global user.email zfq0620@126.com\n    输入之后就退出，简单的配置就到这里。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220185049685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n    \n## 四.本地代码库的操作\n### 1.基本概念\n我们先来明白几个名词 working Directory（工作区），Staging Area（暂存区），.git directory(Repository)(仓库)\n\n>我们可以这样理解，就像我们在超市购物，我们得先把想要的商品放在购物车，然后在推到收银台去结账。\n\n### 2.命令操作\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220185944518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190159751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190258508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220190508406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n## 五.远程代码库的操作\n### 1.下载远程代码库的代码\n1. 首先我们鼠标右键打开git Bash Here 客户端 \n2. 输入 git clone + 网址（以下图片部分）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220191135493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n### 2.同步远程仓库（上传代码）\n#### 克隆之后的代码更新\n1. 首先我们需要先克隆代码，到本地的文件夹内（注意克隆的时候会将整个仓库克\t隆下来以及.git配置文件等）\n2. 我们修改本地克隆下来的文件后 \n    先要 git add 修改的文件\n    然后 git commit -m \"说明性语言\"\n    最后 git push 就可以将修改过的文件同步到远程代码库\n\n#### 新建仓库后的代码上传\n\n新建仓库后显示如下![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220200026139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**当我们新建一个仓库后，仓库类无任何内容，我们将本地的代码同步到远程仓库就需要一下步骤**\n1. 进入本地仓库目录 cd + 目录的名字\n2. 添加文件到缓存区 git add + 文件名  \n3. 将缓存区文件添加到仓库 git commit -m \"first commit\"\n4. git remote add origin + 网站\n5. git push -u origin master\n\n>等我们再次刷新远程代码库的时候，已经显示所有的上传文件\n\n#### 将远程代码库的文件同步到本地\n- 我们使用 git pull 命令\n\n## 六.注意\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200220201401985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n","slug":"3.小白入门gitee（码云）","published":1,"updated":"2020-03-10T13:23:47.871Z","layout":"post","link":"","_id":"ck7m05luy000ivgv41du2c5rm","content":"<h2 id=\"一-介绍\"><a href=\"#一-介绍\" class=\"headerlink\" title=\"一.介绍\"></a>一.介绍</h2><p><strong>想要了解码云，我们先来了解一下什么是版本控制系统。</strong><br><strong>版本控制系统的功能</strong></p>\n<ol>\n<li>代码的备份</li>\n<li>恢复之前的版本</li>\n<li>查看代码修改的内容</li>\n<li>有利于团队的开发，提高开发的效率</li>\n</ol>\n<blockquote>\n<p>我们可以这样理解<br>这就相当于游戏的存档，当我们打bos的时候先给游戏存个档，如果失败，还可以从存档处继续玩。</p>\n</blockquote>\n<ul>\n<li><p><strong>版本控制系统的分类可分为三种 本地（SCCS RCS），集中式（CVS）, 和分布式（git）而我们说的码云就是分布式</strong></p>\n</li>\n<li><p><strong>Git 有图形界面客户端和Git命令行界面客户端，我推荐大家先学命令行的客户端，因为我们学习知识不仅要知其然，而且要知其所以然</strong></p>\n</li>\n<li><p><strong>相信大家也听过微软的github，代码托管平台 ，但是它的界面全部都是英文版的，英语不是很好的朋友学习起来有一点难度，比如说像博主就是。但是感兴趣的朋友可以了解一下。<br>github官网：<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">https://github.com/</a></strong><br><img src=\"https://img-blog.csdnimg.cn/202002201813354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"二-注册账户\"><a href=\"#二-注册账户\" class=\"headerlink\" title=\"二.注册账户\"></a>二.注册账户</h2></li>\n</ul>\n<ol>\n<li><p>首先我们先进入码云的官网：<a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">https://gitee.com/</a>，注册一个账户<br><img src=\"https://img-blog.csdnimg.cn/20200308102158275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>填写相关的信息，注意 个人空间的地址填成自己熟悉的字母，后面用会比较方便<br> <img src=\"https://img-blog.csdnimg.cn/20200308101929981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"3\">\n<li>登录后的图片，我的可能好大家的不太一样，因为<a href=\"https://gitee.com/zfq0620/\" target=\"_blank\" rel=\"noopener\">我的gitee</a> 建了好几个仓库<br><img src=\"https://img-blog.csdnimg.cn/20200308102402252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三-本地环境的配置\"><a href=\"#三-本地环境的配置\" class=\"headerlink\" title=\"三.本地环境的配置\"></a>三.本地环境的配置</h2><p>言归正传,我们说一下环境的搭建，使用码云，我们先要学会本地代码库的一系列的操作，然后在学习同步到远程代码库，当然远程代码库也有上传文件，删除文件和修改文件等功能，但是如果文件比较多的话就相对比较麻烦。</p>\n<h3 id=\"1-如果是在linux系统\"><a href=\"#1-如果是在linux系统\" class=\"headerlink\" title=\"1.如果是在linux系统\"></a>1.如果是在linux系统</h3><ol>\n<li>使用命令来下载 git （sudo apt-get install git）,想要获取git的帮助信息也可以使用命令 git command –help，同时也能验证git有没有安装成功。</li>\n<li>使用git之前先要配置用户名，Email和文本编辑器。<br> git config –global user.name “ZHAI”<br> git config –global user.email <a href=\"mailto:zfq0620@126.com\">zfq0620@126.com</a><br> sudo git config –system core.editor vim (设置文本编辑器为vim)<br> 查看配置的信息用 git config –list<br><img src=\"https://img-blog.csdnimg.cn/20200220183222551.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"2-如果是windows系统\"><a href=\"#2-如果是windows系统\" class=\"headerlink\" title=\"2.如果是windows系统\"></a>2.如果是windows系统</h3><ol>\n<li>首先我们需要下载一个软件，这个是微软的github的客户端，下载链接：<a href=\"https://www.lanzous.com/i9iqtvi\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/i9iqtvi</a>，下载后，就安装，傻瓜式安装一路下一步就行，等安装成功后，鼠标右键会显示下面图片中所显示的两项内容。<br><img src=\"https://img-blog.csdnimg.cn/20200220184306454.png\" alt=\"在这里插入图片描述\"></li>\n<li>和上面一样，得先配置户名，Email。<br> 方法，先鼠标有键，然后打开git Bash Here，然后输入<br>git config –global user.name “ZHAI”<br>git config –global user.email <a href=\"mailto:zfq0620@126.com\">zfq0620@126.com</a><br>输入之后就退出，简单的配置就到这里。<br><img src=\"https://img-blog.csdnimg.cn/20200220185049685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h2 id=\"四-本地代码库的操作\"><a href=\"#四-本地代码库的操作\" class=\"headerlink\" title=\"四.本地代码库的操作\"></a>四.本地代码库的操作</h2><h3 id=\"1-基本概念\"><a href=\"#1-基本概念\" class=\"headerlink\" title=\"1.基本概念\"></a>1.基本概念</h3><p>我们先来明白几个名词 working Directory（工作区），Staging Area（暂存区），.git directory(Repository)(仓库)</p>\n<blockquote>\n<p>我们可以这样理解，就像我们在超市购物，我们得先把想要的商品放在购物车，然后在推到收银台去结账。</p>\n</blockquote>\n<h3 id=\"2-命令操作\"><a href=\"#2-命令操作\" class=\"headerlink\" title=\"2.命令操作\"></a>2.命令操作</h3><p><img src=\"https://img-blog.csdnimg.cn/20200220185944518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200220190159751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200220190258508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200220190508406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-远程代码库的操作\"><a href=\"#五-远程代码库的操作\" class=\"headerlink\" title=\"五.远程代码库的操作\"></a>五.远程代码库的操作</h2><h3 id=\"1-下载远程代码库的代码\"><a href=\"#1-下载远程代码库的代码\" class=\"headerlink\" title=\"1.下载远程代码库的代码\"></a>1.下载远程代码库的代码</h3><ol>\n<li>首先我们鼠标右键打开git Bash Here 客户端 </li>\n<li>输入 git clone + 网址（以下图片部分）<br><img src=\"https://img-blog.csdnimg.cn/20200220191135493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"2-同步远程仓库（上传代码）\"><a href=\"#2-同步远程仓库（上传代码）\" class=\"headerlink\" title=\"2.同步远程仓库（上传代码）\"></a>2.同步远程仓库（上传代码）</h3><h4 id=\"克隆之后的代码更新\"><a href=\"#克隆之后的代码更新\" class=\"headerlink\" title=\"克隆之后的代码更新\"></a>克隆之后的代码更新</h4><ol>\n<li>首先我们需要先克隆代码，到本地的文件夹内（注意克隆的时候会将整个仓库克    隆下来以及.git配置文件等）</li>\n<li>我们修改本地克隆下来的文件后<br> 先要 git add 修改的文件<br> 然后 git commit -m “说明性语言”<br> 最后 git push 就可以将修改过的文件同步到远程代码库</li>\n</ol>\n<h4 id=\"新建仓库后的代码上传\"><a href=\"#新建仓库后的代码上传\" class=\"headerlink\" title=\"新建仓库后的代码上传\"></a>新建仓库后的代码上传</h4><p>新建仓库后显示如下<img src=\"https://img-blog.csdnimg.cn/20200220200026139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>当我们新建一个仓库后，仓库类无任何内容，我们将本地的代码同步到远程仓库就需要一下步骤</strong></p>\n<ol>\n<li>进入本地仓库目录 cd + 目录的名字</li>\n<li>添加文件到缓存区 git add + 文件名  </li>\n<li>将缓存区文件添加到仓库 git commit -m “first commit”</li>\n<li>git remote add origin + 网站</li>\n<li>git push -u origin master</li>\n</ol>\n<blockquote>\n<p>等我们再次刷新远程代码库的时候，已经显示所有的上传文件</p>\n</blockquote>\n<h4 id=\"将远程代码库的文件同步到本地\"><a href=\"#将远程代码库的文件同步到本地\" class=\"headerlink\" title=\"将远程代码库的文件同步到本地\"></a>将远程代码库的文件同步到本地</h4><ul>\n<li>我们使用 git pull 命令</li>\n</ul>\n<h2 id=\"六-注意\"><a href=\"#六-注意\" class=\"headerlink\" title=\"六.注意\"></a>六.注意</h2><p><img src=\"https://img-blog.csdnimg.cn/20200220201401985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"length":1706,"excerpt":"","more":"<h2 id=\"一-介绍\"><a href=\"#一-介绍\" class=\"headerlink\" title=\"一.介绍\"></a>一.介绍</h2><p><strong>想要了解码云，我们先来了解一下什么是版本控制系统。</strong><br><strong>版本控制系统的功能</strong></p>\n<ol>\n<li>代码的备份</li>\n<li>恢复之前的版本</li>\n<li>查看代码修改的内容</li>\n<li>有利于团队的开发，提高开发的效率</li>\n</ol>\n<blockquote>\n<p>我们可以这样理解<br>这就相当于游戏的存档，当我们打bos的时候先给游戏存个档，如果失败，还可以从存档处继续玩。</p>\n</blockquote>\n<ul>\n<li><p><strong>版本控制系统的分类可分为三种 本地（SCCS RCS），集中式（CVS）, 和分布式（git）而我们说的码云就是分布式</strong></p>\n</li>\n<li><p><strong>Git 有图形界面客户端和Git命令行界面客户端，我推荐大家先学命令行的客户端，因为我们学习知识不仅要知其然，而且要知其所以然</strong></p>\n</li>\n<li><p><strong>相信大家也听过微软的github，代码托管平台 ，但是它的界面全部都是英文版的，英语不是很好的朋友学习起来有一点难度，比如说像博主就是。但是感兴趣的朋友可以了解一下。<br>github官网：<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">https://github.com/</a></strong><br><img src=\"https://img-blog.csdnimg.cn/202002201813354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"二-注册账户\"><a href=\"#二-注册账户\" class=\"headerlink\" title=\"二.注册账户\"></a>二.注册账户</h2></li>\n</ul>\n<ol>\n<li><p>首先我们先进入码云的官网：<a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">https://gitee.com/</a>，注册一个账户<br><img src=\"https://img-blog.csdnimg.cn/20200308102158275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>填写相关的信息，注意 个人空间的地址填成自己熟悉的字母，后面用会比较方便<br> <img src=\"https://img-blog.csdnimg.cn/20200308101929981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"3\">\n<li>登录后的图片，我的可能好大家的不太一样，因为<a href=\"https://gitee.com/zfq0620/\" target=\"_blank\" rel=\"noopener\">我的gitee</a> 建了好几个仓库<br><img src=\"https://img-blog.csdnimg.cn/20200308102402252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三-本地环境的配置\"><a href=\"#三-本地环境的配置\" class=\"headerlink\" title=\"三.本地环境的配置\"></a>三.本地环境的配置</h2><p>言归正传,我们说一下环境的搭建，使用码云，我们先要学会本地代码库的一系列的操作，然后在学习同步到远程代码库，当然远程代码库也有上传文件，删除文件和修改文件等功能，但是如果文件比较多的话就相对比较麻烦。</p>\n<h3 id=\"1-如果是在linux系统\"><a href=\"#1-如果是在linux系统\" class=\"headerlink\" title=\"1.如果是在linux系统\"></a>1.如果是在linux系统</h3><ol>\n<li>使用命令来下载 git （sudo apt-get install git）,想要获取git的帮助信息也可以使用命令 git command –help，同时也能验证git有没有安装成功。</li>\n<li>使用git之前先要配置用户名，Email和文本编辑器。<br> git config –global user.name “ZHAI”<br> git config –global user.email <a href=\"mailto:zfq0620@126.com\">zfq0620@126.com</a><br> sudo git config –system core.editor vim (设置文本编辑器为vim)<br> 查看配置的信息用 git config –list<br><img src=\"https://img-blog.csdnimg.cn/20200220183222551.png\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"2-如果是windows系统\"><a href=\"#2-如果是windows系统\" class=\"headerlink\" title=\"2.如果是windows系统\"></a>2.如果是windows系统</h3><ol>\n<li>首先我们需要下载一个软件，这个是微软的github的客户端，下载链接：<a href=\"https://www.lanzous.com/i9iqtvi\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/i9iqtvi</a>，下载后，就安装，傻瓜式安装一路下一步就行，等安装成功后，鼠标右键会显示下面图片中所显示的两项内容。<br><img src=\"https://img-blog.csdnimg.cn/20200220184306454.png\" alt=\"在这里插入图片描述\"></li>\n<li>和上面一样，得先配置户名，Email。<br> 方法，先鼠标有键，然后打开git Bash Here，然后输入<br>git config –global user.name “ZHAI”<br>git config –global user.email <a href=\"mailto:zfq0620@126.com\">zfq0620@126.com</a><br>输入之后就退出，简单的配置就到这里。<br><img src=\"https://img-blog.csdnimg.cn/20200220185049685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h2 id=\"四-本地代码库的操作\"><a href=\"#四-本地代码库的操作\" class=\"headerlink\" title=\"四.本地代码库的操作\"></a>四.本地代码库的操作</h2><h3 id=\"1-基本概念\"><a href=\"#1-基本概念\" class=\"headerlink\" title=\"1.基本概念\"></a>1.基本概念</h3><p>我们先来明白几个名词 working Directory（工作区），Staging Area（暂存区），.git directory(Repository)(仓库)</p>\n<blockquote>\n<p>我们可以这样理解，就像我们在超市购物，我们得先把想要的商品放在购物车，然后在推到收银台去结账。</p>\n</blockquote>\n<h3 id=\"2-命令操作\"><a href=\"#2-命令操作\" class=\"headerlink\" title=\"2.命令操作\"></a>2.命令操作</h3><p><img src=\"https://img-blog.csdnimg.cn/20200220185944518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200220190159751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200220190258508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200220190508406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-远程代码库的操作\"><a href=\"#五-远程代码库的操作\" class=\"headerlink\" title=\"五.远程代码库的操作\"></a>五.远程代码库的操作</h2><h3 id=\"1-下载远程代码库的代码\"><a href=\"#1-下载远程代码库的代码\" class=\"headerlink\" title=\"1.下载远程代码库的代码\"></a>1.下载远程代码库的代码</h3><ol>\n<li>首先我们鼠标右键打开git Bash Here 客户端 </li>\n<li>输入 git clone + 网址（以下图片部分）<br><img src=\"https://img-blog.csdnimg.cn/20200220191135493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"2-同步远程仓库（上传代码）\"><a href=\"#2-同步远程仓库（上传代码）\" class=\"headerlink\" title=\"2.同步远程仓库（上传代码）\"></a>2.同步远程仓库（上传代码）</h3><h4 id=\"克隆之后的代码更新\"><a href=\"#克隆之后的代码更新\" class=\"headerlink\" title=\"克隆之后的代码更新\"></a>克隆之后的代码更新</h4><ol>\n<li>首先我们需要先克隆代码，到本地的文件夹内（注意克隆的时候会将整个仓库克    隆下来以及.git配置文件等）</li>\n<li>我们修改本地克隆下来的文件后<br> 先要 git add 修改的文件<br> 然后 git commit -m “说明性语言”<br> 最后 git push 就可以将修改过的文件同步到远程代码库</li>\n</ol>\n<h4 id=\"新建仓库后的代码上传\"><a href=\"#新建仓库后的代码上传\" class=\"headerlink\" title=\"新建仓库后的代码上传\"></a>新建仓库后的代码上传</h4><p>新建仓库后显示如下<img src=\"https://img-blog.csdnimg.cn/20200220200026139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>当我们新建一个仓库后，仓库类无任何内容，我们将本地的代码同步到远程仓库就需要一下步骤</strong></p>\n<ol>\n<li>进入本地仓库目录 cd + 目录的名字</li>\n<li>添加文件到缓存区 git add + 文件名  </li>\n<li>将缓存区文件添加到仓库 git commit -m “first commit”</li>\n<li>git remote add origin + 网站</li>\n<li>git push -u origin master</li>\n</ol>\n<blockquote>\n<p>等我们再次刷新远程代码库的时候，已经显示所有的上传文件</p>\n</blockquote>\n<h4 id=\"将远程代码库的文件同步到本地\"><a href=\"#将远程代码库的文件同步到本地\" class=\"headerlink\" title=\"将远程代码库的文件同步到本地\"></a>将远程代码库的文件同步到本地</h4><ul>\n<li>我们使用 git pull 命令</li>\n</ul>\n<h2 id=\"六-注意\"><a href=\"#六-注意\" class=\"headerlink\" title=\"六.注意\"></a>六.注意</h2><p><img src=\"https://img-blog.csdnimg.cn/20200220201401985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"hexo+sakura主题美化合集","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-20T08:18:01.000Z","comments":1,"keywords":"hexo主题美化合集","description":"hexo主题美化合集","photos":["http://img.mp.itc.cn/upload/20170112/ca122ef14888451e9c0388619b5877f2_th.jpg"],"_content":"\n\n## 一.简介\n我们搭建了自己的博客后，肯定需要美化，打造属于自己的个性博客，但是百度上面好多大神发的教程比较散，我尝试了以后汇总了一下分享给大家\n\n- 主题基本修改\n- 添加通讯以及美化背景\n- 添加2d板娘\n\n\n## 二.主题基本修改\n主题基本的修改我给大家推荐的是 [yremp大神](https://yremp.live/hexo-sakura/) 的这篇文章\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310115912131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**包含的修改项**\n- 顶部站点名字\n- 顶部导航栏\n- 头像\n- 社交栏\n- 顶部图片和效果\n- 通知栏\n- startdash\n- Discovery\n- 文章封面和内容\n- 归档子页面 \n- 清单子页面\n- 友情链接相关配置\n- 左下角播放器\n- 切换背景\n- 评论不在白名单问题\n>大家可以根据自己的需求简单的修改\n\n## 三.添加通讯以及美化背景\n这块我给大家推荐的是 [cungudafa大神](https://blog.csdn.net/cungudafa/article/details/104295156) 的这篇文章\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310122203275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**包含的修改项**\n1. 背景样式的修改(花瓣飘落、文字，爱心，连线，飘动的彩带，鼠标点击爆炸等等)\n2. 背景图片的切换，不蒜子网页计数\n3. 在线通讯,绑定微信实时提醒\n\n>当然如果这满足不了你美化的需求，还可以看看这篇文章，[TRHX大神](https://blog.csdn.net/qq_36759224/article/details/85420403) 有背景的雪花飘落，背景的代码雨等等\n\n## 四.添加2D板娘\n**2d板娘，就是下面图片的效果，下面我给大家两种方法**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310123643936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 1.通过core-js安装\n这种方式也是最普通的方法，因为我们在搭建博客的时间基本的环境(node.js和hexo)已经搭建好了，所以直接安装 live2d 的插件就好了\n\n**开始教程**\n1.我们执行下面命令安装 live2d 模块，\n```bash\nnpm install --save hexo-helper-live2d\n```\n**案例**\n>但是在我安装的时候，直接就报错了，原因是core-js的版本太低了，无法安装liv2d，所以得升级\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310130604320.png)\n>我们输入下面命令查看core-js 的版本\n>`npm ls core-js   ` \n>因为core-js（是专门管理插件的，也就是我们node_modules 的文件夹）它在升级后之前的版本就不能用了\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310130854330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>我的之前版本是 core-js@2 所以安装不了，我们可以先卸载，然后在安装新版本\n>`npm uninstall --save core-js@^2`  //卸载\n>`npm install --save core-js@^3`   //安装\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031013114633.png)\n然后我们就可以安装 hexo-helper-live2d 模块了\n\n安装成功后是这样子的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310132039446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**特别注意core-js的使用**\n如何我们不用这个模块了，不要直接去文件夹自己手动删除，这里会让整个文件系统出错，所有我们需要输入命令\n\n```bash\n//例如\nnpm install --save + 模块名称    //安装了该模块\nnpm uninstall --save + 模块名称  //卸载该模块\n```\n2.下载我们的版娘\n我们可以使用一下命令\n\n```bash\nnpm install live2d-widget-model-wanko \n```\n注意：live2d-widget-model-wanko 为板娘主题的名字，我们可以按照自己的喜好选择\n\n**live2d模型仓库**\nlive2d-widget-model-chitose\nlive2d-widget-model-epsilon2_1\nlive2d-widget-model-gf\nlive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haruto\nlive2d-widget-model-hibiki\nlive2d-widget-model-hijiki\nlive2d-widget-model-izumi\nlive2d-widget-model-koharu\nlive2d-widget-model-miku\nlive2d-widget-model-ni-j\nlive2d-widget-model-nico\nlive2d-widget-model-nietzsche\nlive2d-widget-model-nipsilon\nlive2d-widget-model-nito\nlive2d-widget-model-shizuku\nlive2d-widget-model-tororo\nlive2d-widget-model-tsumiki\nlive2d-widget-model-unitychan\nlive2d-widget-model-wanko\nlive2d-widget-model-z16\n>大家可以在 [github下载](https://github.com/xiazeyu/live2d-widget-models)，但是我建议大家使用命令去安装\n>模型预览大家可以进入[此文章预览对应的板娘](https://blog.csdn.net/weixin_34321753/article/details/93895440)\n\n3.在站点配置文件 或 主题配置文件(_config.yml) 的末尾添加如下内容\n\n```bash\n# Live2D\n## https://github.com/EYHN/hexo-helper-live2d\nlive2d:\n  enable: true\n  # enable: false\n  scriptFrom: local # 默认\n  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)\n  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径\n  pluginModelPath: assets/ # 模型文件相对与插件根目录路径\n  # scriptFrom: jsdelivr # jsdelivr CDN\n  # scriptFrom: unpkg # unpkg CDN\n  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url\n  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中\n  debug: false # 调试, 是否在控制台输出日志\n  model:\n    use: live2d-widget-model-wanko # 修改项 npm-module package name \n    # use: wanko # 博客根目录/live2d_models/ 下的目录名\n    # use: ./wives/wanko # 相对于博客根目录的路径\n    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true # 手机中是否展示\n```\n**注意**\n我们需要改的就是use 这个地方，我们下载的那个主题，我们就修改成什么名字，当然在 display 项中也可以修改显示的位置已经大小\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310134508559.png)\n\n### 2.直接修改文件安装\n我们先下载这个大神的 [主题包](https://www.lanzous.com/ia41avg)\n\n1.然后解压 live2d-widget文件解压到本地博客目录的themes/sakura/source 下\n\n2.修改项目中的 autoload.js 文件，如下：\n将\n```bash\nconst live2d_path = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/\";\n```\n改为\n\n```bash\nconst live2d_path = \"/live2d-widget/\";\n```\n3.在 /themes/sakura/layout/_layout.ejs 代码的尾部,新增如下内容：\n\n```bash\n<script src=\"/live2d-widget/autoload.js\"></script>\n```\n4.主题配置文件_congig.yml 代码末尾,新增如下内容\n\n```bash\nlive2d:\n  enable: true\n```\n5.想修改看板娘大小、位置、格式、文本内容等，可查看并修改 `waifu-tips.js` 、 `waifu-tips.json` 和 `waifu.css`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310141439371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：大神的项目需要 jQuery 和 font-awesome 支持\n\n\n## 五.总结\n我修改的博客主题是sakura 这个主题，当然修改其他主题也是大同小异，大家可以跟着去修改\n\n","source":"_posts/13.hexo+sakura主题美化合集.md","raw":"---\ntitle: hexo+sakura主题美化合集\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中... \ncategories: 技术\ndate: 2020-2-20 16:18:01\ncomments: true\ntags: \n - 前端\n\nkeywords: hexo主题美化合集\ndescription:  hexo主题美化合集\nphotos: http://img.mp.itc.cn/upload/20170112/ca122ef14888451e9c0388619b5877f2_th.jpg\n---\n\n\n## 一.简介\n我们搭建了自己的博客后，肯定需要美化，打造属于自己的个性博客，但是百度上面好多大神发的教程比较散，我尝试了以后汇总了一下分享给大家\n\n- 主题基本修改\n- 添加通讯以及美化背景\n- 添加2d板娘\n\n\n## 二.主题基本修改\n主题基本的修改我给大家推荐的是 [yremp大神](https://yremp.live/hexo-sakura/) 的这篇文章\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310115912131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**包含的修改项**\n- 顶部站点名字\n- 顶部导航栏\n- 头像\n- 社交栏\n- 顶部图片和效果\n- 通知栏\n- startdash\n- Discovery\n- 文章封面和内容\n- 归档子页面 \n- 清单子页面\n- 友情链接相关配置\n- 左下角播放器\n- 切换背景\n- 评论不在白名单问题\n>大家可以根据自己的需求简单的修改\n\n## 三.添加通讯以及美化背景\n这块我给大家推荐的是 [cungudafa大神](https://blog.csdn.net/cungudafa/article/details/104295156) 的这篇文章\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310122203275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**包含的修改项**\n1. 背景样式的修改(花瓣飘落、文字，爱心，连线，飘动的彩带，鼠标点击爆炸等等)\n2. 背景图片的切换，不蒜子网页计数\n3. 在线通讯,绑定微信实时提醒\n\n>当然如果这满足不了你美化的需求，还可以看看这篇文章，[TRHX大神](https://blog.csdn.net/qq_36759224/article/details/85420403) 有背景的雪花飘落，背景的代码雨等等\n\n## 四.添加2D板娘\n**2d板娘，就是下面图片的效果，下面我给大家两种方法**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310123643936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 1.通过core-js安装\n这种方式也是最普通的方法，因为我们在搭建博客的时间基本的环境(node.js和hexo)已经搭建好了，所以直接安装 live2d 的插件就好了\n\n**开始教程**\n1.我们执行下面命令安装 live2d 模块，\n```bash\nnpm install --save hexo-helper-live2d\n```\n**案例**\n>但是在我安装的时候，直接就报错了，原因是core-js的版本太低了，无法安装liv2d，所以得升级\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310130604320.png)\n>我们输入下面命令查看core-js 的版本\n>`npm ls core-js   ` \n>因为core-js（是专门管理插件的，也就是我们node_modules 的文件夹）它在升级后之前的版本就不能用了\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310130854330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>我的之前版本是 core-js@2 所以安装不了，我们可以先卸载，然后在安装新版本\n>`npm uninstall --save core-js@^2`  //卸载\n>`npm install --save core-js@^3`   //安装\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031013114633.png)\n然后我们就可以安装 hexo-helper-live2d 模块了\n\n安装成功后是这样子的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310132039446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**特别注意core-js的使用**\n如何我们不用这个模块了，不要直接去文件夹自己手动删除，这里会让整个文件系统出错，所有我们需要输入命令\n\n```bash\n//例如\nnpm install --save + 模块名称    //安装了该模块\nnpm uninstall --save + 模块名称  //卸载该模块\n```\n2.下载我们的版娘\n我们可以使用一下命令\n\n```bash\nnpm install live2d-widget-model-wanko \n```\n注意：live2d-widget-model-wanko 为板娘主题的名字，我们可以按照自己的喜好选择\n\n**live2d模型仓库**\nlive2d-widget-model-chitose\nlive2d-widget-model-epsilon2_1\nlive2d-widget-model-gf\nlive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)\nlive2d-widget-model-haruto\nlive2d-widget-model-hibiki\nlive2d-widget-model-hijiki\nlive2d-widget-model-izumi\nlive2d-widget-model-koharu\nlive2d-widget-model-miku\nlive2d-widget-model-ni-j\nlive2d-widget-model-nico\nlive2d-widget-model-nietzsche\nlive2d-widget-model-nipsilon\nlive2d-widget-model-nito\nlive2d-widget-model-shizuku\nlive2d-widget-model-tororo\nlive2d-widget-model-tsumiki\nlive2d-widget-model-unitychan\nlive2d-widget-model-wanko\nlive2d-widget-model-z16\n>大家可以在 [github下载](https://github.com/xiazeyu/live2d-widget-models)，但是我建议大家使用命令去安装\n>模型预览大家可以进入[此文章预览对应的板娘](https://blog.csdn.net/weixin_34321753/article/details/93895440)\n\n3.在站点配置文件 或 主题配置文件(_config.yml) 的末尾添加如下内容\n\n```bash\n# Live2D\n## https://github.com/EYHN/hexo-helper-live2d\nlive2d:\n  enable: true\n  # enable: false\n  scriptFrom: local # 默认\n  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)\n  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径\n  pluginModelPath: assets/ # 模型文件相对与插件根目录路径\n  # scriptFrom: jsdelivr # jsdelivr CDN\n  # scriptFrom: unpkg # unpkg CDN\n  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url\n  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中\n  debug: false # 调试, 是否在控制台输出日志\n  model:\n    use: live2d-widget-model-wanko # 修改项 npm-module package name \n    # use: wanko # 博客根目录/live2d_models/ 下的目录名\n    # use: ./wives/wanko # 相对于博客根目录的路径\n    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true # 手机中是否展示\n```\n**注意**\n我们需要改的就是use 这个地方，我们下载的那个主题，我们就修改成什么名字，当然在 display 项中也可以修改显示的位置已经大小\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310134508559.png)\n\n### 2.直接修改文件安装\n我们先下载这个大神的 [主题包](https://www.lanzous.com/ia41avg)\n\n1.然后解压 live2d-widget文件解压到本地博客目录的themes/sakura/source 下\n\n2.修改项目中的 autoload.js 文件，如下：\n将\n```bash\nconst live2d_path = \"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/\";\n```\n改为\n\n```bash\nconst live2d_path = \"/live2d-widget/\";\n```\n3.在 /themes/sakura/layout/_layout.ejs 代码的尾部,新增如下内容：\n\n```bash\n<script src=\"/live2d-widget/autoload.js\"></script>\n```\n4.主题配置文件_congig.yml 代码末尾,新增如下内容\n\n```bash\nlive2d:\n  enable: true\n```\n5.想修改看板娘大小、位置、格式、文本内容等，可查看并修改 `waifu-tips.js` 、 `waifu-tips.json` 和 `waifu.css`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310141439371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：大神的项目需要 jQuery 和 font-awesome 支持\n\n\n## 五.总结\n我修改的博客主题是sakura 这个主题，当然修改其他主题也是大同小异，大家可以跟着去修改\n\n","slug":"13.hexo+sakura主题美化合集","published":1,"updated":"2020-03-10T13:27:27.940Z","layout":"post","link":"","_id":"ck7m05lv5000mvgv44y9f6upc","content":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><p>我们搭建了自己的博客后，肯定需要美化，打造属于自己的个性博客，但是百度上面好多大神发的教程比较散，我尝试了以后汇总了一下分享给大家</p>\n<ul>\n<li>主题基本修改</li>\n<li>添加通讯以及美化背景</li>\n<li>添加2d板娘</li>\n</ul>\n<h2 id=\"二-主题基本修改\"><a href=\"#二-主题基本修改\" class=\"headerlink\" title=\"二.主题基本修改\"></a>二.主题基本修改</h2><p>主题基本的修改我给大家推荐的是 <a href=\"https://yremp.live/hexo-sakura/\" target=\"_blank\" rel=\"noopener\">yremp大神</a> 的这篇文章<br><img src=\"https://img-blog.csdnimg.cn/20200310115912131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>包含的修改项</strong></p>\n<ul>\n<li>顶部站点名字</li>\n<li>顶部导航栏</li>\n<li>头像</li>\n<li>社交栏</li>\n<li>顶部图片和效果</li>\n<li>通知栏</li>\n<li>startdash</li>\n<li>Discovery</li>\n<li>文章封面和内容</li>\n<li>归档子页面 </li>\n<li>清单子页面</li>\n<li>友情链接相关配置</li>\n<li>左下角播放器</li>\n<li>切换背景</li>\n<li>评论不在白名单问题<blockquote>\n<p>大家可以根据自己的需求简单的修改</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"三-添加通讯以及美化背景\"><a href=\"#三-添加通讯以及美化背景\" class=\"headerlink\" title=\"三.添加通讯以及美化背景\"></a>三.添加通讯以及美化背景</h2><p>这块我给大家推荐的是 <a href=\"https://blog.csdn.net/cungudafa/article/details/104295156\" target=\"_blank\" rel=\"noopener\">cungudafa大神</a> 的这篇文章<br><img src=\"https://img-blog.csdnimg.cn/20200310122203275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>包含的修改项</strong></p>\n<ol>\n<li>背景样式的修改(花瓣飘落、文字，爱心，连线，飘动的彩带，鼠标点击爆炸等等)</li>\n<li>背景图片的切换，不蒜子网页计数</li>\n<li>在线通讯,绑定微信实时提醒</li>\n</ol>\n<blockquote>\n<p>当然如果这满足不了你美化的需求，还可以看看这篇文章，<a href=\"https://blog.csdn.net/qq_36759224/article/details/85420403\" target=\"_blank\" rel=\"noopener\">TRHX大神</a> 有背景的雪花飘落，背景的代码雨等等</p>\n</blockquote>\n<h2 id=\"四-添加2D板娘\"><a href=\"#四-添加2D板娘\" class=\"headerlink\" title=\"四.添加2D板娘\"></a>四.添加2D板娘</h2><p><strong>2d板娘，就是下面图片的效果，下面我给大家两种方法</strong><br><img src=\"https://img-blog.csdnimg.cn/20200310123643936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-通过core-js安装\"><a href=\"#1-通过core-js安装\" class=\"headerlink\" title=\"1.通过core-js安装\"></a>1.通过core-js安装</h3><p>这种方式也是最普通的方法，因为我们在搭建博客的时间基本的环境(node.js和hexo)已经搭建好了，所以直接安装 live2d 的插件就好了</p>\n<p><strong>开始教程</strong><br>1.我们执行下面命令安装 live2d 模块，</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save hexo-helper-live2d</code></pre>\n<p><strong>案例</strong></p>\n<blockquote>\n<p>但是在我安装的时候，直接就报错了，原因是core-js的版本太低了，无法安装liv2d，所以得升级<br><img src=\"https://img-blog.csdnimg.cn/20200310130604320.png\" alt=\"在这里插入图片描述\"><br>我们输入下面命令查看core-js 的版本<br><code>npm ls core-js</code><br>因为core-js（是专门管理插件的，也就是我们node_modules 的文件夹）它在升级后之前的版本就不能用了<br><img src=\"https://img-blog.csdnimg.cn/20200310130854330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>我的之前版本是 core-js@2 所以安装不了，我们可以先卸载，然后在安装新版本<br><code>npm uninstall --save core-js@^2</code>  //卸载<br><code>npm install --save core-js@^3</code>   //安装<br><img src=\"https://img-blog.csdnimg.cn/2020031013114633.png\" alt=\"在这里插入图片描述\"><br>然后我们就可以安装 hexo-helper-live2d 模块了</p>\n</blockquote>\n<p>安装成功后是这样子的<br><img src=\"https://img-blog.csdnimg.cn/20200310132039446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>特别注意core-js的使用</strong><br>如何我们不用这个模块了，不要直接去文件夹自己手动删除，这里会让整个文件系统出错，所有我们需要输入命令</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">//例如\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save + 模块名称    //安装了该模块\n<span class=\"token function\">npm</span> uninstall --save + 模块名称  //卸载该模块</code></pre>\n<p>2.下载我们的版娘<br>我们可以使用一下命令</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> live2d-widget-model-wanko </code></pre>\n<p>注意：live2d-widget-model-wanko 为板娘主题的名字，我们可以按照自己的喜好选择</p>\n<p><strong>live2d模型仓库</strong><br>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16</p>\n<blockquote>\n<p>大家可以在 <a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">github下载</a>，但是我建议大家使用命令去安装<br>模型预览大家可以进入<a href=\"https://blog.csdn.net/weixin_34321753/article/details/93895440\" target=\"_blank\" rel=\"noopener\">此文章预览对应的板娘</a></p>\n</blockquote>\n<p>3.在站点配置文件 或 主题配置文件(_config.yml) 的末尾添加如下内容</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\"># Live2D</span>\n<span class=\"token comment\" spellcheck=\"true\">## https://github.com/EYHN/hexo-helper-live2d</span>\nlive2d:\n  enable: <span class=\"token boolean\">true</span>\n  <span class=\"token comment\" spellcheck=\"true\"># enable: false</span>\n  scriptFrom: local <span class=\"token comment\" spellcheck=\"true\"># 默认</span>\n  pluginRootPath: live2dw/ <span class=\"token comment\" spellcheck=\"true\"># 插件在站点上的根目录(相对路径)</span>\n  pluginJsPath: lib/ <span class=\"token comment\" spellcheck=\"true\"># 脚本文件相对与插件根目录路径</span>\n  pluginModelPath: assets/ <span class=\"token comment\" spellcheck=\"true\"># 模型文件相对与插件根目录路径</span>\n  <span class=\"token comment\" spellcheck=\"true\"># scriptFrom: jsdelivr # jsdelivr CDN</span>\n  <span class=\"token comment\" spellcheck=\"true\"># scriptFrom: unpkg # unpkg CDN</span>\n  <span class=\"token comment\" spellcheck=\"true\"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span>\n  tagMode: <span class=\"token boolean\">false</span> <span class=\"token comment\" spellcheck=\"true\"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>\n  debug: <span class=\"token boolean\">false</span> <span class=\"token comment\" spellcheck=\"true\"># 调试, 是否在控制台输出日志</span>\n  model:\n    use: live2d-widget-model-wanko <span class=\"token comment\" spellcheck=\"true\"># 修改项 npm-module package name </span>\n    <span class=\"token comment\" spellcheck=\"true\"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span>\n    <span class=\"token comment\" spellcheck=\"true\"># use: ./wives/wanko # 相对于博客根目录的路径</span>\n    <span class=\"token comment\" spellcheck=\"true\"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span>\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: <span class=\"token boolean\">true</span> <span class=\"token comment\" spellcheck=\"true\"># 手机中是否展示</span></code></pre>\n<p><strong>注意</strong><br>我们需要改的就是use 这个地方，我们下载的那个主题，我们就修改成什么名字，当然在 display 项中也可以修改显示的位置已经大小<br><img src=\"https://img-blog.csdnimg.cn/20200310134508559.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-直接修改文件安装\"><a href=\"#2-直接修改文件安装\" class=\"headerlink\" title=\"2.直接修改文件安装\"></a>2.直接修改文件安装</h3><p>我们先下载这个大神的 <a href=\"https://www.lanzous.com/ia41avg\" target=\"_blank\" rel=\"noopener\">主题包</a></p>\n<p>1.然后解压 live2d-widget文件解压到本地博客目录的themes/sakura/source 下</p>\n<p>2.修改项目中的 autoload.js 文件，如下：<br>将</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">const live2d_path <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/\"</span><span class=\"token punctuation\">;</span></code></pre>\n<p>改为</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">const live2d_path <span class=\"token operator\">=</span> <span class=\"token string\">\"/live2d-widget/\"</span><span class=\"token punctuation\">;</span></code></pre>\n<p>3.在 /themes/sakura/layout/_layout.ejs 代码的尾部,新增如下内容：</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"/live2d-widget/autoload.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/script<span class=\"token operator\">></span></code></pre>\n<p>4.主题配置文件_congig.yml 代码末尾,新增如下内容</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">live2d:\n  enable: <span class=\"token boolean\">true</span></code></pre>\n<p>5.想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code><br><img src=\"https://img-blog.csdnimg.cn/20200310141439371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：大神的项目需要 jQuery 和 font-awesome 支持</p>\n</blockquote>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><p>我修改的博客主题是sakura 这个主题，当然修改其他主题也是大同小异，大家可以跟着去修改</p>\n","site":{"data":{}},"length":3166,"excerpt":"","more":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><p>我们搭建了自己的博客后，肯定需要美化，打造属于自己的个性博客，但是百度上面好多大神发的教程比较散，我尝试了以后汇总了一下分享给大家</p>\n<ul>\n<li>主题基本修改</li>\n<li>添加通讯以及美化背景</li>\n<li>添加2d板娘</li>\n</ul>\n<h2 id=\"二-主题基本修改\"><a href=\"#二-主题基本修改\" class=\"headerlink\" title=\"二.主题基本修改\"></a>二.主题基本修改</h2><p>主题基本的修改我给大家推荐的是 <a href=\"https://yremp.live/hexo-sakura/\" target=\"_blank\" rel=\"noopener\">yremp大神</a> 的这篇文章<br><img src=\"https://img-blog.csdnimg.cn/20200310115912131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>包含的修改项</strong></p>\n<ul>\n<li>顶部站点名字</li>\n<li>顶部导航栏</li>\n<li>头像</li>\n<li>社交栏</li>\n<li>顶部图片和效果</li>\n<li>通知栏</li>\n<li>startdash</li>\n<li>Discovery</li>\n<li>文章封面和内容</li>\n<li>归档子页面 </li>\n<li>清单子页面</li>\n<li>友情链接相关配置</li>\n<li>左下角播放器</li>\n<li>切换背景</li>\n<li>评论不在白名单问题<blockquote>\n<p>大家可以根据自己的需求简单的修改</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"三-添加通讯以及美化背景\"><a href=\"#三-添加通讯以及美化背景\" class=\"headerlink\" title=\"三.添加通讯以及美化背景\"></a>三.添加通讯以及美化背景</h2><p>这块我给大家推荐的是 <a href=\"https://blog.csdn.net/cungudafa/article/details/104295156\" target=\"_blank\" rel=\"noopener\">cungudafa大神</a> 的这篇文章<br><img src=\"https://img-blog.csdnimg.cn/20200310122203275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>包含的修改项</strong></p>\n<ol>\n<li>背景样式的修改(花瓣飘落、文字，爱心，连线，飘动的彩带，鼠标点击爆炸等等)</li>\n<li>背景图片的切换，不蒜子网页计数</li>\n<li>在线通讯,绑定微信实时提醒</li>\n</ol>\n<blockquote>\n<p>当然如果这满足不了你美化的需求，还可以看看这篇文章，<a href=\"https://blog.csdn.net/qq_36759224/article/details/85420403\" target=\"_blank\" rel=\"noopener\">TRHX大神</a> 有背景的雪花飘落，背景的代码雨等等</p>\n</blockquote>\n<h2 id=\"四-添加2D板娘\"><a href=\"#四-添加2D板娘\" class=\"headerlink\" title=\"四.添加2D板娘\"></a>四.添加2D板娘</h2><p><strong>2d板娘，就是下面图片的效果，下面我给大家两种方法</strong><br><img src=\"https://img-blog.csdnimg.cn/20200310123643936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"1-通过core-js安装\"><a href=\"#1-通过core-js安装\" class=\"headerlink\" title=\"1.通过core-js安装\"></a>1.通过core-js安装</h3><p>这种方式也是最普通的方法，因为我们在搭建博客的时间基本的环境(node.js和hexo)已经搭建好了，所以直接安装 live2d 的插件就好了</p>\n<p><strong>开始教程</strong><br>1.我们执行下面命令安装 live2d 模块，</p>\n<pre><code class=\"bash\">npm install --save hexo-helper-live2d</code></pre>\n<p><strong>案例</strong></p>\n<blockquote>\n<p>但是在我安装的时候，直接就报错了，原因是core-js的版本太低了，无法安装liv2d，所以得升级<br><img src=\"https://img-blog.csdnimg.cn/20200310130604320.png\" alt=\"在这里插入图片描述\"><br>我们输入下面命令查看core-js 的版本<br><code>npm ls core-js</code><br>因为core-js（是专门管理插件的，也就是我们node_modules 的文件夹）它在升级后之前的版本就不能用了<br><img src=\"https://img-blog.csdnimg.cn/20200310130854330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>我的之前版本是 core-js@2 所以安装不了，我们可以先卸载，然后在安装新版本<br><code>npm uninstall --save core-js@^2</code>  //卸载<br><code>npm install --save core-js@^3</code>   //安装<br><img src=\"https://img-blog.csdnimg.cn/2020031013114633.png\" alt=\"在这里插入图片描述\"><br>然后我们就可以安装 hexo-helper-live2d 模块了</p>\n</blockquote>\n<p>安装成功后是这样子的<br><img src=\"https://img-blog.csdnimg.cn/20200310132039446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>特别注意core-js的使用</strong><br>如何我们不用这个模块了，不要直接去文件夹自己手动删除，这里会让整个文件系统出错，所有我们需要输入命令</p>\n<pre><code class=\"bash\">//例如\nnpm install --save + 模块名称    //安装了该模块\nnpm uninstall --save + 模块名称  //卸载该模块</code></pre>\n<p>2.下载我们的版娘<br>我们可以使用一下命令</p>\n<pre><code class=\"bash\">npm install live2d-widget-model-wanko </code></pre>\n<p>注意：live2d-widget-model-wanko 为板娘主题的名字，我们可以按照自己的喜好选择</p>\n<p><strong>live2d模型仓库</strong><br>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16</p>\n<blockquote>\n<p>大家可以在 <a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">github下载</a>，但是我建议大家使用命令去安装<br>模型预览大家可以进入<a href=\"https://blog.csdn.net/weixin_34321753/article/details/93895440\" target=\"_blank\" rel=\"noopener\">此文章预览对应的板娘</a></p>\n</blockquote>\n<p>3.在站点配置文件 或 主题配置文件(_config.yml) 的末尾添加如下内容</p>\n<pre><code class=\"bash\"># Live2D\n## https://github.com/EYHN/hexo-helper-live2d\nlive2d:\n  enable: true\n  # enable: false\n  scriptFrom: local # 默认\n  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)\n  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径\n  pluginModelPath: assets/ # 模型文件相对与插件根目录路径\n  # scriptFrom: jsdelivr # jsdelivr CDN\n  # scriptFrom: unpkg # unpkg CDN\n  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url\n  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中\n  debug: false # 调试, 是否在控制台输出日志\n  model:\n    use: live2d-widget-model-wanko # 修改项 npm-module package name \n    # use: wanko # 博客根目录/live2d_models/ 下的目录名\n    # use: ./wives/wanko # 相对于博客根目录的路径\n    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true # 手机中是否展示</code></pre>\n<p><strong>注意</strong><br>我们需要改的就是use 这个地方，我们下载的那个主题，我们就修改成什么名字，当然在 display 项中也可以修改显示的位置已经大小<br><img src=\"https://img-blog.csdnimg.cn/20200310134508559.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-直接修改文件安装\"><a href=\"#2-直接修改文件安装\" class=\"headerlink\" title=\"2.直接修改文件安装\"></a>2.直接修改文件安装</h3><p>我们先下载这个大神的 <a href=\"https://www.lanzous.com/ia41avg\" target=\"_blank\" rel=\"noopener\">主题包</a></p>\n<p>1.然后解压 live2d-widget文件解压到本地博客目录的themes/sakura/source 下</p>\n<p>2.修改项目中的 autoload.js 文件，如下：<br>将</p>\n<pre><code class=\"bash\">const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;;</code></pre>\n<p>改为</p>\n<pre><code class=\"bash\">const live2d_path = &quot;/live2d-widget/&quot;;</code></pre>\n<p>3.在 /themes/sakura/layout/_layout.ejs 代码的尾部,新增如下内容：</p>\n<pre><code class=\"bash\">&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</code></pre>\n<p>4.主题配置文件_congig.yml 代码末尾,新增如下内容</p>\n<pre><code class=\"bash\">live2d:\n  enable: true</code></pre>\n<p>5.想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code><br><img src=\"https://img-blog.csdnimg.cn/20200310141439371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：大神的项目需要 jQuery 和 font-awesome 支持</p>\n</blockquote>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><p>我修改的博客主题是sakura 这个主题，当然修改其他主题也是大同小异，大家可以跟着去修改</p>\n"},{"title":"jsDeliver+github打造私人图床","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-03T03:12:00.000Z","comments":1,"keywords":"搭建私人图床","description":"搭建私人图床","photos":["https://images7.alphacoders.com/992/992404.jpg"],"_content":"\n\n## 一.简介\n### 1.什么是图床\n>百度：“图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。”\n注意：`github 支持的就是cdn加速`\n\n### 2.什么是jsDelive\njsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。\n\n>我们可以进入 [jsDeliver官网](https://www.jsdelivr.com/)来查看\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308135620988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.为什么搭建图床\n- 我们在写用markdown写博客的时候，需要插入图片，图片存在本地的话上传到微博或者自己搭建的博客网站上面是无法显示的\n- 编写网页的时候，需要插入图片的地方，我们总不能放在相应的文件夹，这样会影响网页的加载速度\n\n>所以我就就需要用到图床，将图片保存到服务器上，使用的时候直接用\n>URL 来获取先显示\n>注意：URL是文件的网络地址，相当于人的住址，每一个网络资源都有固定且唯一的网络地址\n\n## 二.github的配置\n### 1.创建github仓库\n>如果你初次接触github 的话，你可以先学习一下 [github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n>\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308140335611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308140923309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### 2.推送图片资源到仓库\n将本地的图片资源上传到我们的仓库，方法很多我们采用微软的github软件来推送到我们的仓库\n\n>我也就不多说了，不会的还是看一下 [github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n\n**注意**\n1. 鼠标在那个文件夹下左键打开 git bash here，执行命令就默认在那个文件夹下\n2. 推送的文件特别多，我们可以采用 * 代表全部文件\n```bash\ngit add * //注意 *代表当前目录下所用的文件\ngit commit -m \"add files\" //然后推送到本地仓库\ngit push //推送到远程仓库\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308141732770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.发布版本\n点击release 发布版本\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143000300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143155637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143817628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n发布成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030814385660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 三.jsDelive加载资源\n**使用方法**\n```bash\nhttps://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n比如：\n\n//加载js\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/js/jquery.js\n\n//加载图片\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/images/hb.png\n```\n\n重点：这个链接相当于一个外链，使用和直链一样，如下图： 总的来说，外链怎么用，这个链接怎么用\n\n>这是我的测试图片\n[https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png](https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png)\n\n## 四.服务器图床盘点\n也有好多，不需要我们自己搭建的，图床服务器，推荐给大家\n1. 路过图床\n\t网站： [https://imgchr.com/](https://imgchr.com/)\n\t简介：支持免注册上传图片，永久存储，支持HTTPS加密访\t\t问和调用图片，提供多种图片链接格式，成立于2011年\n限制：最大10M\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308145450650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2. SM.MS\n\t网站:[https://sm.ms/](https://sm.ms/)\n\t特点：永久存储免注册，图片链接支持https，可以删除上传\t的图片，提供多种图片链接格式，建立于2015年，速度比路过图床慢\n图片上传限制：每个图片最大5M，每次最多上传10张\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308145920673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 小贱贱图床\n网站：[http://pic.xiaojianjian.net](http://pic.xiaojianjian.net)\n需要注册，每日可以上传图片30张，上传后可以获取一个简单的外链，速度很快，但是图片清晰度会变低\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308150105696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n4. 聚合图床\n网站：[https://www.superbed.cn](https://www.superbed.cn)\n简介：将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理\n图片上传限制：无\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308150328960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 堆爱外链\n地址：[http://pan.duiai.cc](http://pan.duiai.cc)\n简介：注册才可以上传，存在的时间比较久，除了图片还可以上传视频和音乐\n限制：视频体积过大不可，但具体限制不明 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308151030735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 五.总结\n搭建图床的方法很多，就像七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名，又拍云也需要绑定域名才可以使用，所有我不推荐大家使用。\n**在这里我给大家推荐两个软件**\n\n- mpic \n下载地址：[https://www.lanzous.com/ia1vy9a](https://www.lanzous.com/ia1vy9a)\n- picGo\n下载地址：[https://www.lanzous.com/ia1vp8f](https://www.lanzous.com/ia1vp8f)\n\n希望对大家有用!\n\n","source":"_posts/4.jsDeliver+github打造属于自己的图床.md","raw":"---\ntitle: jsDeliver+github打造私人图床\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-3 11:12:00\ncomments: true\ntags: \n - 前端\nkeywords: 搭建私人图床\ndescription:  搭建私人图床\nphotos: https://images7.alphacoders.com/992/992404.jpg\n---\n\n\n## 一.简介\n### 1.什么是图床\n>百度：“图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。”\n注意：`github 支持的就是cdn加速`\n\n### 2.什么是jsDelive\njsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。\n\n>我们可以进入 [jsDeliver官网](https://www.jsdelivr.com/)来查看\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308135620988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.为什么搭建图床\n- 我们在写用markdown写博客的时候，需要插入图片，图片存在本地的话上传到微博或者自己搭建的博客网站上面是无法显示的\n- 编写网页的时候，需要插入图片的地方，我们总不能放在相应的文件夹，这样会影响网页的加载速度\n\n>所以我就就需要用到图床，将图片保存到服务器上，使用的时候直接用\n>URL 来获取先显示\n>注意：URL是文件的网络地址，相当于人的住址，每一个网络资源都有固定且唯一的网络地址\n\n## 二.github的配置\n### 1.创建github仓库\n>如果你初次接触github 的话，你可以先学习一下 [github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n>\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308140335611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308140923309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### 2.推送图片资源到仓库\n将本地的图片资源上传到我们的仓库，方法很多我们采用微软的github软件来推送到我们的仓库\n\n>我也就不多说了，不会的还是看一下 [github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n\n**注意**\n1. 鼠标在那个文件夹下左键打开 git bash here，执行命令就默认在那个文件夹下\n2. 推送的文件特别多，我们可以采用 * 代表全部文件\n```bash\ngit add * //注意 *代表当前目录下所用的文件\ngit commit -m \"add files\" //然后推送到本地仓库\ngit push //推送到远程仓库\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308141732770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.发布版本\n点击release 发布版本\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143000300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143155637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308143817628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n发布成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030814385660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 三.jsDelive加载资源\n**使用方法**\n```bash\nhttps://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n比如：\n\n//加载js\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/js/jquery.js\n\n//加载图片\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/images/hb.png\n```\n\n重点：这个链接相当于一个外链，使用和直链一样，如下图： 总的来说，外链怎么用，这个链接怎么用\n\n>这是我的测试图片\n[https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png](https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png)\n\n## 四.服务器图床盘点\n也有好多，不需要我们自己搭建的，图床服务器，推荐给大家\n1. 路过图床\n\t网站： [https://imgchr.com/](https://imgchr.com/)\n\t简介：支持免注册上传图片，永久存储，支持HTTPS加密访\t\t问和调用图片，提供多种图片链接格式，成立于2011年\n限制：最大10M\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308145450650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2. SM.MS\n\t网站:[https://sm.ms/](https://sm.ms/)\n\t特点：永久存储免注册，图片链接支持https，可以删除上传\t的图片，提供多种图片链接格式，建立于2015年，速度比路过图床慢\n图片上传限制：每个图片最大5M，每次最多上传10张\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308145920673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 小贱贱图床\n网站：[http://pic.xiaojianjian.net](http://pic.xiaojianjian.net)\n需要注册，每日可以上传图片30张，上传后可以获取一个简单的外链，速度很快，但是图片清晰度会变低\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308150105696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n4. 聚合图床\n网站：[https://www.superbed.cn](https://www.superbed.cn)\n简介：将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理\n图片上传限制：无\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308150328960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 堆爱外链\n地址：[http://pan.duiai.cc](http://pan.duiai.cc)\n简介：注册才可以上传，存在的时间比较久，除了图片还可以上传视频和音乐\n限制：视频体积过大不可，但具体限制不明 \n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308151030735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 五.总结\n搭建图床的方法很多，就像七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名，又拍云也需要绑定域名才可以使用，所有我不推荐大家使用。\n**在这里我给大家推荐两个软件**\n\n- mpic \n下载地址：[https://www.lanzous.com/ia1vy9a](https://www.lanzous.com/ia1vy9a)\n- picGo\n下载地址：[https://www.lanzous.com/ia1vp8f](https://www.lanzous.com/ia1vp8f)\n\n希望对大家有用!\n\n","slug":"4.jsDeliver+github打造属于自己的图床","published":1,"updated":"2020-03-10T13:24:18.034Z","layout":"post","link":"","_id":"ck7m05lv8000nvgv4g2exffx6","content":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><h3 id=\"1-什么是图床\"><a href=\"#1-什么是图床\" class=\"headerlink\" title=\"1.什么是图床\"></a>1.什么是图床</h3><blockquote>\n<p>百度：“图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。”<br>注意：<code>github 支持的就是cdn加速</code></p>\n</blockquote>\n<h3 id=\"2-什么是jsDelive\"><a href=\"#2-什么是jsDelive\" class=\"headerlink\" title=\"2.什么是jsDelive\"></a>2.什么是jsDelive</h3><p>jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。</p>\n<blockquote>\n<p>我们可以进入 <a href=\"https://www.jsdelivr.com/\" target=\"_blank\" rel=\"noopener\">jsDeliver官网</a>来查看</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308135620988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-为什么搭建图床\"><a href=\"#3-为什么搭建图床\" class=\"headerlink\" title=\"3.为什么搭建图床\"></a>3.为什么搭建图床</h3><ul>\n<li>我们在写用markdown写博客的时候，需要插入图片，图片存在本地的话上传到微博或者自己搭建的博客网站上面是无法显示的</li>\n<li>编写网页的时候，需要插入图片的地方，我们总不能放在相应的文件夹，这样会影响网页的加载速度</li>\n</ul>\n<blockquote>\n<p>所以我就就需要用到图床，将图片保存到服务器上，使用的时候直接用<br>URL 来获取先显示<br>注意：URL是文件的网络地址，相当于人的住址，每一个网络资源都有固定且唯一的网络地址</p>\n</blockquote>\n<h2 id=\"二-github的配置\"><a href=\"#二-github的配置\" class=\"headerlink\" title=\"二.github的配置\"></a>二.github的配置</h2><h3 id=\"1-创建github仓库\"><a href=\"#1-创建github仓库\" class=\"headerlink\" title=\"1.创建github仓库\"></a>1.创建github仓库</h3><blockquote>\n<p>如果你初次接触github 的话，你可以先学习一下 <a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308140335611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308140923309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-推送图片资源到仓库\"><a href=\"#2-推送图片资源到仓库\" class=\"headerlink\" title=\"2.推送图片资源到仓库\"></a>2.推送图片资源到仓库</h3><p>将本地的图片资源上传到我们的仓库，方法很多我们采用微软的github软件来推送到我们的仓库</p>\n<blockquote>\n<p>我也就不多说了，不会的还是看一下 <a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><strong>注意</strong></p>\n<ol>\n<li>鼠标在那个文件夹下左键打开 git bash here，执行命令就默认在那个文件夹下</li>\n<li>推送的文件特别多，我们可以采用 * 代表全部文件<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> add * //注意 *代表当前目录下所用的文件\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"add files\"</span> //然后推送到本地仓库\n<span class=\"token function\">git</span> push //推送到远程仓库</code></pre>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308141732770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-发布版本\"><a href=\"#3-发布版本\" class=\"headerlink\" title=\"3.发布版本\"></a>3.发布版本</h3><p>点击release 发布版本<br><img src=\"https://img-blog.csdnimg.cn/20200308143000300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308143155637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308143817628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发布成功<br><img src=\"https://img-blog.csdnimg.cn/2020030814385660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"三-jsDelive加载资源\"><a href=\"#三-jsDelive加载资源\" class=\"headerlink\" title=\"三.jsDelive加载资源\"></a>三.jsDelive加载资源</h2><p><strong>使用方法</strong></p>\n<pre class=\" language-bash\"><code class=\"language-bash\">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n比如：\n\n//加载js\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/js/jquery.js\n\n//加载图片\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/images/hb.png</code></pre>\n<p>重点：这个链接相当于一个外链，使用和直链一样，如下图： 总的来说，外链怎么用，这个链接怎么用</p>\n<blockquote>\n<p>这是我的测试图片<br><a href=\"https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png</a></p>\n</blockquote>\n<h2 id=\"四-服务器图床盘点\"><a href=\"#四-服务器图床盘点\" class=\"headerlink\" title=\"四.服务器图床盘点\"></a>四.服务器图床盘点</h2><p>也有好多，不需要我们自己搭建的，图床服务器，推荐给大家</p>\n<ol>\n<li><p>路过图床<br> 网站： <a href=\"https://imgchr.com/\" target=\"_blank\" rel=\"noopener\">https://imgchr.com/</a><br> 简介：支持免注册上传图片，永久存储，支持HTTPS加密访        问和调用图片，提供多种图片链接格式，成立于2011年<br>限制：最大10M<br> <img src=\"https://img-blog.csdnimg.cn/20200308145450650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>SM.MS<br> 网站:<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">https://sm.ms/</a><br> 特点：永久存储免注册，图片链接支持https，可以删除上传    的图片，提供多种图片链接格式，建立于2015年，速度比路过图床慢<br>图片上传限制：每个图片最大5M，每次最多上传10张<br><img src=\"https://img-blog.csdnimg.cn/20200308145920673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>小贱贱图床<br>网站：<a href=\"http://pic.xiaojianjian.net\" target=\"_blank\" rel=\"noopener\">http://pic.xiaojianjian.net</a><br>需要注册，每日可以上传图片30张，上传后可以获取一个简单的外链，速度很快，但是图片清晰度会变低<br><img src=\"https://img-blog.csdnimg.cn/20200308150105696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>聚合图床<br>网站：<a href=\"https://www.superbed.cn\" target=\"_blank\" rel=\"noopener\">https://www.superbed.cn</a><br>简介：将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理<br>图片上传限制：无<br><img src=\"https://img-blog.csdnimg.cn/20200308150328960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>堆爱外链<br>地址：<a href=\"http://pan.duiai.cc\" target=\"_blank\" rel=\"noopener\">http://pan.duiai.cc</a><br>简介：注册才可以上传，存在的时间比较久，除了图片还可以上传视频和音乐<br>限制：视频体积过大不可，但具体限制不明<br><img src=\"https://img-blog.csdnimg.cn/20200308151030735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><p>搭建图床的方法很多，就像七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名，又拍云也需要绑定域名才可以使用，所有我不推荐大家使用。</p>\n</li>\n</ol>\n<p><strong>在这里我给大家推荐两个软件</strong></p>\n<ul>\n<li>mpic<br>下载地址：<a href=\"https://www.lanzous.com/ia1vy9a\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vy9a</a></li>\n<li>picGo<br>下载地址：<a href=\"https://www.lanzous.com/ia1vp8f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vp8f</a></li>\n</ul>\n<p>希望对大家有用!</p>\n","site":{"data":{}},"length":1735,"excerpt":"","more":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><h3 id=\"1-什么是图床\"><a href=\"#1-什么是图床\" class=\"headerlink\" title=\"1.什么是图床\"></a>1.什么是图床</h3><blockquote>\n<p>百度：“图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。”<br>注意：<code>github 支持的就是cdn加速</code></p>\n</blockquote>\n<h3 id=\"2-什么是jsDelive\"><a href=\"#2-什么是jsDelive\" class=\"headerlink\" title=\"2.什么是jsDelive\"></a>2.什么是jsDelive</h3><p>jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。</p>\n<blockquote>\n<p>我们可以进入 <a href=\"https://www.jsdelivr.com/\" target=\"_blank\" rel=\"noopener\">jsDeliver官网</a>来查看</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308135620988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-为什么搭建图床\"><a href=\"#3-为什么搭建图床\" class=\"headerlink\" title=\"3.为什么搭建图床\"></a>3.为什么搭建图床</h3><ul>\n<li>我们在写用markdown写博客的时候，需要插入图片，图片存在本地的话上传到微博或者自己搭建的博客网站上面是无法显示的</li>\n<li>编写网页的时候，需要插入图片的地方，我们总不能放在相应的文件夹，这样会影响网页的加载速度</li>\n</ul>\n<blockquote>\n<p>所以我就就需要用到图床，将图片保存到服务器上，使用的时候直接用<br>URL 来获取先显示<br>注意：URL是文件的网络地址，相当于人的住址，每一个网络资源都有固定且唯一的网络地址</p>\n</blockquote>\n<h2 id=\"二-github的配置\"><a href=\"#二-github的配置\" class=\"headerlink\" title=\"二.github的配置\"></a>二.github的配置</h2><h3 id=\"1-创建github仓库\"><a href=\"#1-创建github仓库\" class=\"headerlink\" title=\"1.创建github仓库\"></a>1.创建github仓库</h3><blockquote>\n<p>如果你初次接触github 的话，你可以先学习一下 <a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308140335611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308140923309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-推送图片资源到仓库\"><a href=\"#2-推送图片资源到仓库\" class=\"headerlink\" title=\"2.推送图片资源到仓库\"></a>2.推送图片资源到仓库</h3><p>将本地的图片资源上传到我们的仓库，方法很多我们采用微软的github软件来推送到我们的仓库</p>\n<blockquote>\n<p>我也就不多说了，不会的还是看一下 <a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><strong>注意</strong></p>\n<ol>\n<li>鼠标在那个文件夹下左键打开 git bash here，执行命令就默认在那个文件夹下</li>\n<li>推送的文件特别多，我们可以采用 * 代表全部文件<pre><code class=\"bash\">git add * //注意 *代表当前目录下所用的文件\ngit commit -m &quot;add files&quot; //然后推送到本地仓库\ngit push //推送到远程仓库</code></pre>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308141732770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-发布版本\"><a href=\"#3-发布版本\" class=\"headerlink\" title=\"3.发布版本\"></a>3.发布版本</h3><p>点击release 发布版本<br><img src=\"https://img-blog.csdnimg.cn/20200308143000300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308143155637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308143817628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>发布成功<br><img src=\"https://img-blog.csdnimg.cn/2020030814385660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"三-jsDelive加载资源\"><a href=\"#三-jsDelive加载资源\" class=\"headerlink\" title=\"三.jsDelive加载资源\"></a>三.jsDelive加载资源</h2><p><strong>使用方法</strong></p>\n<pre><code class=\"bash\">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n比如：\n\n//加载js\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/js/jquery.js\n\n//加载图片\n\nhttps://cdn.jsdelivr.net/gh/yremp/cdn@1.0/images/hb.png</code></pre>\n<p>重点：这个链接相当于一个外链，使用和直链一样，如下图： 总的来说，外链怎么用，这个链接怎么用</p>\n<blockquote>\n<p>这是我的测试图片<br><a href=\"https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png</a></p>\n</blockquote>\n<h2 id=\"四-服务器图床盘点\"><a href=\"#四-服务器图床盘点\" class=\"headerlink\" title=\"四.服务器图床盘点\"></a>四.服务器图床盘点</h2><p>也有好多，不需要我们自己搭建的，图床服务器，推荐给大家</p>\n<ol>\n<li><p>路过图床<br> 网站： <a href=\"https://imgchr.com/\" target=\"_blank\" rel=\"noopener\">https://imgchr.com/</a><br> 简介：支持免注册上传图片，永久存储，支持HTTPS加密访        问和调用图片，提供多种图片链接格式，成立于2011年<br>限制：最大10M<br> <img src=\"https://img-blog.csdnimg.cn/20200308145450650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>SM.MS<br> 网站:<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">https://sm.ms/</a><br> 特点：永久存储免注册，图片链接支持https，可以删除上传    的图片，提供多种图片链接格式，建立于2015年，速度比路过图床慢<br>图片上传限制：每个图片最大5M，每次最多上传10张<br><img src=\"https://img-blog.csdnimg.cn/20200308145920673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>小贱贱图床<br>网站：<a href=\"http://pic.xiaojianjian.net\" target=\"_blank\" rel=\"noopener\">http://pic.xiaojianjian.net</a><br>需要注册，每日可以上传图片30张，上传后可以获取一个简单的外链，速度很快，但是图片清晰度会变低<br><img src=\"https://img-blog.csdnimg.cn/20200308150105696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>聚合图床<br>网站：<a href=\"https://www.superbed.cn\" target=\"_blank\" rel=\"noopener\">https://www.superbed.cn</a><br>简介：将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理<br>图片上传限制：无<br><img src=\"https://img-blog.csdnimg.cn/20200308150328960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>堆爱外链<br>地址：<a href=\"http://pan.duiai.cc\" target=\"_blank\" rel=\"noopener\">http://pan.duiai.cc</a><br>简介：注册才可以上传，存在的时间比较久，除了图片还可以上传视频和音乐<br>限制：视频体积过大不可，但具体限制不明<br><img src=\"https://img-blog.csdnimg.cn/20200308151030735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><p>搭建图床的方法很多，就像七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名，又拍云也需要绑定域名才可以使用，所有我不推荐大家使用。</p>\n</li>\n</ol>\n<p><strong>在这里我给大家推荐两个软件</strong></p>\n<ul>\n<li>mpic<br>下载地址：<a href=\"https://www.lanzous.com/ia1vy9a\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vy9a</a></li>\n<li>picGo<br>下载地址：<a href=\"https://www.lanzous.com/ia1vp8f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vp8f</a></li>\n</ul>\n<p>希望对大家有用!</p>\n"},{"title":"小白入门github","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://yremp.club","authorAbout":"学习中...","authorDesc":null,"date":"2020-02-01T01:10:01.000Z","comments":1,"keywords":"github的使用教程","description":"github的使用教程","photos":["https://images2.alphacoders.com/106/1068324.jpg"],"_content":"\n## github是什么\n**github就是版本控制系统，我们可以理解为一个代码的托管平台，作为一个程序猿，学会使用github对我们提高工作效率是很有必要的，当然国内外的开发人员都在使用。**\n\n## github和其他代码托管平台的区别\n**像现在代码托管平台已经很多了，比如说码云，它和github很相似，但是各有各的有缺点。**\n\n>码云 \n优点：服务器在中国访问的速度那没的说，而且界面为中文适合初学者学习和使用，特别容易上手，可以点击这边连接进入学习。\n[小白入门码云](https://blog.csdn.net/weixin_45631738/article/details/104414876)\n\n\n>github\n对于github而言，它的访问速度相对比较慢，但是github的成立时比较早的，功能比较强大，至于说界面全是英语，我们可以使用谷歌浏览器，界面可以翻译成中文，等用熟了以后，也就不存在什么英语不英语的问题了\n\n## 入手github\n### 账户注册\n首先我们需要注册一个属于我们自己账户，[github的官网：https://github.com/](https://github.com/)，我们可以点击注册。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307140939808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307141208960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307141926250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142100270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142345815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**登录之后的样子，作为一个新的账户还没有项目，会有一点区别**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142733505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 添加项目仓库\n**我们来创建属于自己的第一个仓库**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307143315179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144134548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144306878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144859787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### 删除仓库\n**在我们不许要的时候我们可以删除仓库**\n1. 点击settings 管理设置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307145049771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2. 将页面拉倒最底下，红色方块框着的地方\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030714530921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307145539907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### github的本地操作\n用的最多的就是，在我们电脑的本地文件夹建立一个仓库，然后将我们的代码推送到，远程仓库上（也就是我们的github上面）\n**这里我以windows为例**\n- 首先我们需要下载，微软的github管理的软件，个人感觉是比较好用的，强力推荐。[点击下载github软件](https://www.lanzous.com/i9iqtvi)\n- 下载完成后就是傻瓜式的安装，安装成成功后，我们在我们电脑桌面的空白的地方，点击鼠标右击，如果发现多出来这两个选项，就证明安装成功。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307150720645.png)\n\n**命令操作**\n**git bash here 的命令操作和码云上都是一样的，不会的可看一下上面的教程，在这里我就简单的做个简绍**\n\n**首先我们，我们需要克隆我们的代码库到本地文件夹**\n>找到我们需要存放代码文件的文件夹，鼠标右键 选择打开 git bash heregit bash here，输入相关命令\n\n```c\ngit clone + 远程仓库的网址\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307151804501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**克隆仓库到我们本地之后，我们就可以将我们需要上传到仓库的文件，复制到此仓库目录之下**\n**方法一：**\n```c\n//添加代码到本地缓存区\ngit add + （hello.txt）文件名\n\n//从缓存区推送到本地仓库\ngit commit -m \"add hello.txt(添加描述信息)\"\n\n//由于我们克隆的时候同时也克隆了 .git 配置文件所有直接执行命令可以推送到远程仓库，注意克隆其他人的仓库，不能这样，因为需要输入用户名和密码\ngit push\n```\n\n**方法二：**\n\n```c\n//在合适的目录下打开git bash here 命令窗口 ，建立本地仓库\ngit init\n\n//点击文件到缓存区\ngit add + 文件名\n\n//提交到本地仓库\ngit commit -m \"描述性的文字\"\n\n//推送到远程仓库\ngit remote add origin + 仓库地址\ngit push -u origin master \n```\n\n## 交流\n这个是我的github账户：[https://github.com/zfq0620](https://github.com/zfq0620)\n\n","source":"_posts/2.小白入门 github.md","raw":"---\ntitle: 小白入门github\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://yremp.club\nauthorAbout: 学习中... \nauthorDesc: \ncategories: 技术\ndate: 2020-2-1 9:10:01\ncomments: true\ntags: \n - 嵌入式\nkeywords: github的使用教程\ndescription:  github的使用教程\nphotos: https://images2.alphacoders.com/106/1068324.jpg\n---\n\n## github是什么\n**github就是版本控制系统，我们可以理解为一个代码的托管平台，作为一个程序猿，学会使用github对我们提高工作效率是很有必要的，当然国内外的开发人员都在使用。**\n\n## github和其他代码托管平台的区别\n**像现在代码托管平台已经很多了，比如说码云，它和github很相似，但是各有各的有缺点。**\n\n>码云 \n优点：服务器在中国访问的速度那没的说，而且界面为中文适合初学者学习和使用，特别容易上手，可以点击这边连接进入学习。\n[小白入门码云](https://blog.csdn.net/weixin_45631738/article/details/104414876)\n\n\n>github\n对于github而言，它的访问速度相对比较慢，但是github的成立时比较早的，功能比较强大，至于说界面全是英语，我们可以使用谷歌浏览器，界面可以翻译成中文，等用熟了以后，也就不存在什么英语不英语的问题了\n\n## 入手github\n### 账户注册\n首先我们需要注册一个属于我们自己账户，[github的官网：https://github.com/](https://github.com/)，我们可以点击注册。\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307140939808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307141208960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307141926250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142100270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142345815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**登录之后的样子，作为一个新的账户还没有项目，会有一点区别**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307142733505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 添加项目仓库\n**我们来创建属于自己的第一个仓库**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307143315179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144134548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144306878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307144859787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### 删除仓库\n**在我们不许要的时候我们可以删除仓库**\n1. 点击settings 管理设置\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307145049771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2. 将页面拉倒最底下，红色方块框着的地方\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030714530921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307145539907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### github的本地操作\n用的最多的就是，在我们电脑的本地文件夹建立一个仓库，然后将我们的代码推送到，远程仓库上（也就是我们的github上面）\n**这里我以windows为例**\n- 首先我们需要下载，微软的github管理的软件，个人感觉是比较好用的，强力推荐。[点击下载github软件](https://www.lanzous.com/i9iqtvi)\n- 下载完成后就是傻瓜式的安装，安装成成功后，我们在我们电脑桌面的空白的地方，点击鼠标右击，如果发现多出来这两个选项，就证明安装成功。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307150720645.png)\n\n**命令操作**\n**git bash here 的命令操作和码云上都是一样的，不会的可看一下上面的教程，在这里我就简单的做个简绍**\n\n**首先我们，我们需要克隆我们的代码库到本地文件夹**\n>找到我们需要存放代码文件的文件夹，鼠标右键 选择打开 git bash heregit bash here，输入相关命令\n\n```c\ngit clone + 远程仓库的网址\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307151804501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**克隆仓库到我们本地之后，我们就可以将我们需要上传到仓库的文件，复制到此仓库目录之下**\n**方法一：**\n```c\n//添加代码到本地缓存区\ngit add + （hello.txt）文件名\n\n//从缓存区推送到本地仓库\ngit commit -m \"add hello.txt(添加描述信息)\"\n\n//由于我们克隆的时候同时也克隆了 .git 配置文件所有直接执行命令可以推送到远程仓库，注意克隆其他人的仓库，不能这样，因为需要输入用户名和密码\ngit push\n```\n\n**方法二：**\n\n```c\n//在合适的目录下打开git bash here 命令窗口 ，建立本地仓库\ngit init\n\n//点击文件到缓存区\ngit add + 文件名\n\n//提交到本地仓库\ngit commit -m \"描述性的文字\"\n\n//推送到远程仓库\ngit remote add origin + 仓库地址\ngit push -u origin master \n```\n\n## 交流\n这个是我的github账户：[https://github.com/zfq0620](https://github.com/zfq0620)\n\n","slug":"2.小白入门 github","published":1,"updated":"2020-03-10T13:23:28.306Z","layout":"post","link":"","_id":"ck7m05lvd000svgv4dvv19rj1","content":"<h2 id=\"github是什么\"><a href=\"#github是什么\" class=\"headerlink\" title=\"github是什么\"></a>github是什么</h2><p><strong>github就是版本控制系统，我们可以理解为一个代码的托管平台，作为一个程序猿，学会使用github对我们提高工作效率是很有必要的，当然国内外的开发人员都在使用。</strong></p>\n<h2 id=\"github和其他代码托管平台的区别\"><a href=\"#github和其他代码托管平台的区别\" class=\"headerlink\" title=\"github和其他代码托管平台的区别\"></a>github和其他代码托管平台的区别</h2><p><strong>像现在代码托管平台已经很多了，比如说码云，它和github很相似，但是各有各的有缺点。</strong></p>\n<blockquote>\n<p>码云<br>优点：服务器在中国访问的速度那没的说，而且界面为中文适合初学者学习和使用，特别容易上手，可以点击这边连接进入学习。<br><a href=\"https://blog.csdn.net/weixin_45631738/article/details/104414876\" target=\"_blank\" rel=\"noopener\">小白入门码云</a></p>\n</blockquote>\n<blockquote>\n<p>github<br>对于github而言，它的访问速度相对比较慢，但是github的成立时比较早的，功能比较强大，至于说界面全是英语，我们可以使用谷歌浏览器，界面可以翻译成中文，等用熟了以后，也就不存在什么英语不英语的问题了</p>\n</blockquote>\n<h2 id=\"入手github\"><a href=\"#入手github\" class=\"headerlink\" title=\"入手github\"></a>入手github</h2><h3 id=\"账户注册\"><a href=\"#账户注册\" class=\"headerlink\" title=\"账户注册\"></a>账户注册</h3><p>首先我们需要注册一个属于我们自己账户，<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github的官网：https://github.com/</a>，我们可以点击注册。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307140939808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307141208960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307141926250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307142100270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307142345815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>登录之后的样子，作为一个新的账户还没有项目，会有一点区别</strong><br><img src=\"https://img-blog.csdnimg.cn/20200307142733505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"添加项目仓库\"><a href=\"#添加项目仓库\" class=\"headerlink\" title=\"添加项目仓库\"></a>添加项目仓库</h3><p><strong>我们来创建属于自己的第一个仓库</strong><br><img src=\"https://img-blog.csdnimg.cn/20200307143315179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144134548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144306878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144859787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"删除仓库\"><a href=\"#删除仓库\" class=\"headerlink\" title=\"删除仓库\"></a>删除仓库</h3><p><strong>在我们不许要的时候我们可以删除仓库</strong></p>\n<ol>\n<li>点击settings 管理设置<br><img src=\"https://img-blog.csdnimg.cn/20200307145049771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>将页面拉倒最底下，红色方块框着的地方<br><img src=\"https://img-blog.csdnimg.cn/2020030714530921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307145539907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"github的本地操作\"><a href=\"#github的本地操作\" class=\"headerlink\" title=\"github的本地操作\"></a>github的本地操作</h3><p>用的最多的就是，在我们电脑的本地文件夹建立一个仓库，然后将我们的代码推送到，远程仓库上（也就是我们的github上面）<br><strong>这里我以windows为例</strong></p>\n<ul>\n<li>首先我们需要下载，微软的github管理的软件，个人感觉是比较好用的，强力推荐。<a href=\"https://www.lanzous.com/i9iqtvi\" target=\"_blank\" rel=\"noopener\">点击下载github软件</a></li>\n<li>下载完成后就是傻瓜式的安装，安装成成功后，我们在我们电脑桌面的空白的地方，点击鼠标右击，如果发现多出来这两个选项，就证明安装成功。<br><img src=\"https://img-blog.csdnimg.cn/20200307150720645.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><strong>命令操作</strong><br><strong>git bash here 的命令操作和码云上都是一样的，不会的可看一下上面的教程，在这里我就简单的做个简绍</strong></p>\n<p><strong>首先我们，我们需要克隆我们的代码库到本地文件夹</strong></p>\n<blockquote>\n<p>找到我们需要存放代码文件的文件夹，鼠标右键 选择打开 git bash heregit bash here，输入相关命令</p>\n</blockquote>\n<pre class=\" language-c\"><code class=\"language-c\">git clone <span class=\"token operator\">+</span> 远程仓库的网址</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307151804501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>克隆仓库到我们本地之后，我们就可以将我们需要上传到仓库的文件，复制到此仓库目录之下</strong><br><strong>方法一：</strong></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//添加代码到本地缓存区</span>\ngit add <span class=\"token operator\">+</span> （hello<span class=\"token punctuation\">.</span>txt）文件名\n\n<span class=\"token comment\" spellcheck=\"true\">//从缓存区推送到本地仓库</span>\ngit commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"add hello.txt(添加描述信息)\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//由于我们克隆的时候同时也克隆了 .git 配置文件所有直接执行命令可以推送到远程仓库，注意克隆其他人的仓库，不能这样，因为需要输入用户名和密码</span>\ngit push</code></pre>\n<p><strong>方法二：</strong></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//在合适的目录下打开git bash here 命令窗口 ，建立本地仓库</span>\ngit init\n\n<span class=\"token comment\" spellcheck=\"true\">//点击文件到缓存区</span>\ngit add <span class=\"token operator\">+</span> 文件名\n\n<span class=\"token comment\" spellcheck=\"true\">//提交到本地仓库</span>\ngit commit <span class=\"token operator\">-</span>m <span class=\"token string\">\"描述性的文字\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//推送到远程仓库</span>\ngit remote add origin <span class=\"token operator\">+</span> 仓库地址\ngit push <span class=\"token operator\">-</span>u origin master </code></pre>\n<h2 id=\"交流\"><a href=\"#交流\" class=\"headerlink\" title=\"交流\"></a>交流</h2><p>这个是我的github账户：<a href=\"https://github.com/zfq0620\" target=\"_blank\" rel=\"noopener\">https://github.com/zfq0620</a></p>\n","site":{"data":{}},"length":1253,"excerpt":"","more":"<h2 id=\"github是什么\"><a href=\"#github是什么\" class=\"headerlink\" title=\"github是什么\"></a>github是什么</h2><p><strong>github就是版本控制系统，我们可以理解为一个代码的托管平台，作为一个程序猿，学会使用github对我们提高工作效率是很有必要的，当然国内外的开发人员都在使用。</strong></p>\n<h2 id=\"github和其他代码托管平台的区别\"><a href=\"#github和其他代码托管平台的区别\" class=\"headerlink\" title=\"github和其他代码托管平台的区别\"></a>github和其他代码托管平台的区别</h2><p><strong>像现在代码托管平台已经很多了，比如说码云，它和github很相似，但是各有各的有缺点。</strong></p>\n<blockquote>\n<p>码云<br>优点：服务器在中国访问的速度那没的说，而且界面为中文适合初学者学习和使用，特别容易上手，可以点击这边连接进入学习。<br><a href=\"https://blog.csdn.net/weixin_45631738/article/details/104414876\" target=\"_blank\" rel=\"noopener\">小白入门码云</a></p>\n</blockquote>\n<blockquote>\n<p>github<br>对于github而言，它的访问速度相对比较慢，但是github的成立时比较早的，功能比较强大，至于说界面全是英语，我们可以使用谷歌浏览器，界面可以翻译成中文，等用熟了以后，也就不存在什么英语不英语的问题了</p>\n</blockquote>\n<h2 id=\"入手github\"><a href=\"#入手github\" class=\"headerlink\" title=\"入手github\"></a>入手github</h2><h3 id=\"账户注册\"><a href=\"#账户注册\" class=\"headerlink\" title=\"账户注册\"></a>账户注册</h3><p>首先我们需要注册一个属于我们自己账户，<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">github的官网：https://github.com/</a>，我们可以点击注册。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307140939808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307141208960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307141926250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307142100270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307142345815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>登录之后的样子，作为一个新的账户还没有项目，会有一点区别</strong><br><img src=\"https://img-blog.csdnimg.cn/20200307142733505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"添加项目仓库\"><a href=\"#添加项目仓库\" class=\"headerlink\" title=\"添加项目仓库\"></a>添加项目仓库</h3><p><strong>我们来创建属于自己的第一个仓库</strong><br><img src=\"https://img-blog.csdnimg.cn/20200307143315179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144134548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144306878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307144859787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"删除仓库\"><a href=\"#删除仓库\" class=\"headerlink\" title=\"删除仓库\"></a>删除仓库</h3><p><strong>在我们不许要的时候我们可以删除仓库</strong></p>\n<ol>\n<li>点击settings 管理设置<br><img src=\"https://img-blog.csdnimg.cn/20200307145049771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>将页面拉倒最底下，红色方块框着的地方<br><img src=\"https://img-blog.csdnimg.cn/2020030714530921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307145539907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ol>\n<h3 id=\"github的本地操作\"><a href=\"#github的本地操作\" class=\"headerlink\" title=\"github的本地操作\"></a>github的本地操作</h3><p>用的最多的就是，在我们电脑的本地文件夹建立一个仓库，然后将我们的代码推送到，远程仓库上（也就是我们的github上面）<br><strong>这里我以windows为例</strong></p>\n<ul>\n<li>首先我们需要下载，微软的github管理的软件，个人感觉是比较好用的，强力推荐。<a href=\"https://www.lanzous.com/i9iqtvi\" target=\"_blank\" rel=\"noopener\">点击下载github软件</a></li>\n<li>下载完成后就是傻瓜式的安装，安装成成功后，我们在我们电脑桌面的空白的地方，点击鼠标右击，如果发现多出来这两个选项，就证明安装成功。<br><img src=\"https://img-blog.csdnimg.cn/20200307150720645.png\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p><strong>命令操作</strong><br><strong>git bash here 的命令操作和码云上都是一样的，不会的可看一下上面的教程，在这里我就简单的做个简绍</strong></p>\n<p><strong>首先我们，我们需要克隆我们的代码库到本地文件夹</strong></p>\n<blockquote>\n<p>找到我们需要存放代码文件的文件夹，鼠标右键 选择打开 git bash heregit bash here，输入相关命令</p>\n</blockquote>\n<pre><code class=\"c\">git clone + 远程仓库的网址</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307151804501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><strong>克隆仓库到我们本地之后，我们就可以将我们需要上传到仓库的文件，复制到此仓库目录之下</strong><br><strong>方法一：</strong></p>\n<pre><code class=\"c\">//添加代码到本地缓存区\ngit add + （hello.txt）文件名\n\n//从缓存区推送到本地仓库\ngit commit -m &quot;add hello.txt(添加描述信息)&quot;\n\n//由于我们克隆的时候同时也克隆了 .git 配置文件所有直接执行命令可以推送到远程仓库，注意克隆其他人的仓库，不能这样，因为需要输入用户名和密码\ngit push</code></pre>\n<p><strong>方法二：</strong></p>\n<pre><code class=\"c\">//在合适的目录下打开git bash here 命令窗口 ，建立本地仓库\ngit init\n\n//点击文件到缓存区\ngit add + 文件名\n\n//提交到本地仓库\ngit commit -m &quot;描述性的文字&quot;\n\n//推送到远程仓库\ngit remote add origin + 仓库地址\ngit push -u origin master </code></pre>\n<h2 id=\"交流\"><a href=\"#交流\" class=\"headerlink\" title=\"交流\"></a>交流</h2><p>这个是我的github账户：<a href=\"https://github.com/zfq0620\" target=\"_blank\" rel=\"noopener\">https://github.com/zfq0620</a></p>\n"},{"title":"玩转浏览器黑科技","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-06T01:32:00.000Z","comments":1,"keywords":"浏览器的使用","description":"浏览器的使用","photos":["https://img.zcool.cn/community/01bb9357ec9490a84a0e282b9a6131.jpg@1280w_1l_2o_100sh.jpg"],"_content":"\n\n## 一. 简介\n浏览器，大家每天都在用，作为一个上网的工具，或是学习或是娱乐，一个好的浏览器可以让我们的工作和学习效率提高一\n大半。但是之前接触的浏览器，都从在一定的问题。\n\n**比如说**\n\n- 浏览器界面太复杂，无用的信息太多\n- 功能不齐全，想要截个完整的网页太难\n- 广告一大堆，找关闭方式都找不到\n\n>为了打破这样的局面，我给大家推荐一个完美的浏览器\n>电脑端：Google Chrome（谷歌浏览器）\n>手机端：kiwi \n\n或许你的电脑已经安装了谷歌浏览器，但是它潜在的功能，你是否发现了\n\n## 二. 软件下载安装\n1. 想要使用，首先我们得先安装浏览器，百度上下载安装，广告一大堆，删都删不掉，所有我一般不去百度下载安装\n>这里我给大家发一下[我的谷歌版本](https://www.lanzous.com/ia1lsch) 大家可以点击下载\n\n2. 还有一个看的别人用的版本有挺多的版本，大家可以[点击下载](https://tools.shuax.com/chrome)\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308113556840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t**这里用四个版本大家可以根据自己的需求去下载安装**\n\t1. Stable Channel：稳定版，正式版，更新慢，比较稳定适合普通用户，\n\t2. Beta Channel：测试版，主要是安全上的测试，适合较稳定可以尝鲜的用户\n\t3. Dev Channel：开发版，主要是功能上的测试，不稳定，适合开发人员使用\n\t4. Canary Build：金丝雀版，它可以独立的安装或是免安装，不会覆盖原本的 Google Chrome 版本，适合开发人员使用，存在不稳定因素\n\t\n\n## 三.软件的配置\n1.软件下载完，就是傻瓜式的安装，我就不发截图了，安装完成，我们就需要配置一下浏览器才可以正常使用\n>我们还是得先[下载这个插件](https://www.lanzous.com/ia1m2fa)\n\n2.开始配置，加载谷歌访问助手破解版插件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120013191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120603493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3.进入商店进行安装插件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030812083237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120921499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308121050189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 四.插件推荐\n1.之所以推荐此浏览器给大家，也源于它强大的插件功能，自己可以打造属于自己的一款浏览器，当然插件中的黑科技值得大家去探索\n**我给大家推荐几个好用的插件**\n\n- infinity 标签页   （可以美化我们的浏览器）\n- tampermonkey （功能十分强大）\n>了解更多插件和插件的功能，可 [打开链接](https://www.zhihu.com/answer/693396771)\n\n2.当然我们，也可以通过第三方网站进行下载，下载的插件我们可以向上面的一样，在扩展程序中添加\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122234371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**网站推荐**\n\n- [https://greasyfork.org/zh-CN](https://greasyfork.org/zh-CN)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122433167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- [https://chromecj.com/](https://chromecj.com/)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122700624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n \n ## 五.手机端浏览器\n 手机端的浏览器也是特别的重要，我这里也给大家推荐一个\n > [kiwi浏览器下载](https://www.lanzous.com/ia1lzeb)\n \n 1.和电脑端一样，我们安装好之后得先安装[谷歌访问助手破解版插件](https://www.lanzous.com/ia1m2fa)，才可以正常使用\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308123619635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2.电脑端的插件，移动都手机端同样也是使用，我们只需要在扩展程序里面添加就好了\n\n## 六.总结\n大家可以按照不同的需求来安装不同的插件，可以说是事半功倍\n\n\n","source":"_posts/7.玩转浏览器黑科技.md","raw":"---\ntitle: 玩转浏览器黑科技\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 资源\ndate: 2020-2-6 09:32:00\ncomments: true\ntags: \n - 软件应用\n\nkeywords: 浏览器的使用\ndescription: 浏览器的使用\nphotos: https://img.zcool.cn/community/01bb9357ec9490a84a0e282b9a6131.jpg@1280w_1l_2o_100sh.jpg\n---\n\n\n## 一. 简介\n浏览器，大家每天都在用，作为一个上网的工具，或是学习或是娱乐，一个好的浏览器可以让我们的工作和学习效率提高一\n大半。但是之前接触的浏览器，都从在一定的问题。\n\n**比如说**\n\n- 浏览器界面太复杂，无用的信息太多\n- 功能不齐全，想要截个完整的网页太难\n- 广告一大堆，找关闭方式都找不到\n\n>为了打破这样的局面，我给大家推荐一个完美的浏览器\n>电脑端：Google Chrome（谷歌浏览器）\n>手机端：kiwi \n\n或许你的电脑已经安装了谷歌浏览器，但是它潜在的功能，你是否发现了\n\n## 二. 软件下载安装\n1. 想要使用，首先我们得先安装浏览器，百度上下载安装，广告一大堆，删都删不掉，所有我一般不去百度下载安装\n>这里我给大家发一下[我的谷歌版本](https://www.lanzous.com/ia1lsch) 大家可以点击下载\n\n2. 还有一个看的别人用的版本有挺多的版本，大家可以[点击下载](https://tools.shuax.com/chrome)\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308113556840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t**这里用四个版本大家可以根据自己的需求去下载安装**\n\t1. Stable Channel：稳定版，正式版，更新慢，比较稳定适合普通用户，\n\t2. Beta Channel：测试版，主要是安全上的测试，适合较稳定可以尝鲜的用户\n\t3. Dev Channel：开发版，主要是功能上的测试，不稳定，适合开发人员使用\n\t4. Canary Build：金丝雀版，它可以独立的安装或是免安装，不会覆盖原本的 Google Chrome 版本，适合开发人员使用，存在不稳定因素\n\t\n\n## 三.软件的配置\n1.软件下载完，就是傻瓜式的安装，我就不发截图了，安装完成，我们就需要配置一下浏览器才可以正常使用\n>我们还是得先[下载这个插件](https://www.lanzous.com/ia1m2fa)\n\n2.开始配置，加载谷歌访问助手破解版插件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120013191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120603493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3.进入商店进行安装插件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030812083237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308120921499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308121050189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 四.插件推荐\n1.之所以推荐此浏览器给大家，也源于它强大的插件功能，自己可以打造属于自己的一款浏览器，当然插件中的黑科技值得大家去探索\n**我给大家推荐几个好用的插件**\n\n- infinity 标签页   （可以美化我们的浏览器）\n- tampermonkey （功能十分强大）\n>了解更多插件和插件的功能，可 [打开链接](https://www.zhihu.com/answer/693396771)\n\n2.当然我们，也可以通过第三方网站进行下载，下载的插件我们可以向上面的一样，在扩展程序中添加\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122234371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**网站推荐**\n\n- [https://greasyfork.org/zh-CN](https://greasyfork.org/zh-CN)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122433167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- [https://chromecj.com/](https://chromecj.com/)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308122700624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n \n ## 五.手机端浏览器\n 手机端的浏览器也是特别的重要，我这里也给大家推荐一个\n > [kiwi浏览器下载](https://www.lanzous.com/ia1lzeb)\n \n 1.和电脑端一样，我们安装好之后得先安装[谷歌访问助手破解版插件](https://www.lanzous.com/ia1m2fa)，才可以正常使用\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308123619635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n2.电脑端的插件，移动都手机端同样也是使用，我们只需要在扩展程序里面添加就好了\n\n## 六.总结\n大家可以按照不同的需求来安装不同的插件，可以说是事半功倍\n\n\n","slug":"7.玩转浏览器黑科技","published":1,"updated":"2020-03-10T13:25:33.202Z","layout":"post","link":"","_id":"ck7m05lvi000vvgv45jjpcbzz","content":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一. 简介\"></a>一. 简介</h2><p>浏览器，大家每天都在用，作为一个上网的工具，或是学习或是娱乐，一个好的浏览器可以让我们的工作和学习效率提高一<br>大半。但是之前接触的浏览器，都从在一定的问题。</p>\n<p><strong>比如说</strong></p>\n<ul>\n<li>浏览器界面太复杂，无用的信息太多</li>\n<li>功能不齐全，想要截个完整的网页太难</li>\n<li>广告一大堆，找关闭方式都找不到</li>\n</ul>\n<blockquote>\n<p>为了打破这样的局面，我给大家推荐一个完美的浏览器<br>电脑端：Google Chrome（谷歌浏览器）<br>手机端：kiwi </p>\n</blockquote>\n<p>或许你的电脑已经安装了谷歌浏览器，但是它潜在的功能，你是否发现了</p>\n<h2 id=\"二-软件下载安装\"><a href=\"#二-软件下载安装\" class=\"headerlink\" title=\"二. 软件下载安装\"></a>二. 软件下载安装</h2><ol>\n<li><p>想要使用，首先我们得先安装浏览器，百度上下载安装，广告一大堆，删都删不掉，所有我一般不去百度下载安装</p>\n<blockquote>\n<p>这里我给大家发一下<a href=\"https://www.lanzous.com/ia1lsch\" target=\"_blank\" rel=\"noopener\">我的谷歌版本</a> 大家可以点击下载</p>\n</blockquote>\n</li>\n<li><p>还有一个看的别人用的版本有挺多的版本，大家可以<a href=\"https://tools.shuax.com/chrome\" target=\"_blank\" rel=\"noopener\">点击下载</a><br> <img src=\"https://img-blog.csdnimg.cn/20200308113556840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> <strong>这里用四个版本大家可以根据自己的需求去下载安装</strong></p>\n<ol>\n<li>Stable Channel：稳定版，正式版，更新慢，比较稳定适合普通用户，</li>\n<li>Beta Channel：测试版，主要是安全上的测试，适合较稳定可以尝鲜的用户</li>\n<li>Dev Channel：开发版，主要是功能上的测试，不稳定，适合开发人员使用</li>\n<li>Canary Build：金丝雀版，它可以独立的安装或是免安装，不会覆盖原本的 Google Chrome 版本，适合开发人员使用，存在不稳定因素</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三-软件的配置\"><a href=\"#三-软件的配置\" class=\"headerlink\" title=\"三.软件的配置\"></a>三.软件的配置</h2><p>1.软件下载完，就是傻瓜式的安装，我就不发截图了，安装完成，我们就需要配置一下浏览器才可以正常使用</p>\n<blockquote>\n<p>我们还是得先<a href=\"https://www.lanzous.com/ia1m2fa\" target=\"_blank\" rel=\"noopener\">下载这个插件</a></p>\n</blockquote>\n<p>2.开始配置，加载谷歌访问助手破解版插件<br><img src=\"https://img-blog.csdnimg.cn/20200308120013191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308120603493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3.进入商店进行安装插件<br><img src=\"https://img-blog.csdnimg.cn/2020030812083237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308120921499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308121050189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"四-插件推荐\"><a href=\"#四-插件推荐\" class=\"headerlink\" title=\"四.插件推荐\"></a>四.插件推荐</h2><p>1.之所以推荐此浏览器给大家，也源于它强大的插件功能，自己可以打造属于自己的一款浏览器，当然插件中的黑科技值得大家去探索<br><strong>我给大家推荐几个好用的插件</strong></p>\n<ul>\n<li>infinity 标签页   （可以美化我们的浏览器）</li>\n<li>tampermonkey （功能十分强大）<blockquote>\n<p>了解更多插件和插件的功能，可 <a href=\"https://www.zhihu.com/answer/693396771\" target=\"_blank\" rel=\"noopener\">打开链接</a></p>\n</blockquote>\n</li>\n</ul>\n<p>2.当然我们，也可以通过第三方网站进行下载，下载的插件我们可以向上面的一样，在扩展程序中添加<br><img src=\"https://img-blog.csdnimg.cn/20200308122234371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>网站推荐</strong></p>\n<ul>\n<li><a href=\"https://greasyfork.org/zh-CN\" target=\"_blank\" rel=\"noopener\">https://greasyfork.org/zh-CN</a><br><img src=\"https://img-blog.csdnimg.cn/20200308122433167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li><a href=\"https://chromecj.com/\" target=\"_blank\" rel=\"noopener\">https://chromecj.com/</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308122700624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-手机端浏览器\"><a href=\"#五-手机端浏览器\" class=\"headerlink\" title=\"五.手机端浏览器\"></a>五.手机端浏览器</h2><p> 手机端的浏览器也是特别的重要，我这里也给大家推荐一个</p>\n<blockquote>\n<p><a href=\"https://www.lanzous.com/ia1lzeb\" target=\"_blank\" rel=\"noopener\">kiwi浏览器下载</a></p>\n</blockquote>\n<p> 1.和电脑端一样，我们安装好之后得先安装<a href=\"https://www.lanzous.com/ia1m2fa\" target=\"_blank\" rel=\"noopener\">谷歌访问助手破解版插件</a>，才可以正常使用<br> <img src=\"https://img-blog.csdnimg.cn/20200308123619635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2.电脑端的插件，移动都手机端同样也是使用，我们只需要在扩展程序里面添加就好了</p>\n<h2 id=\"六-总结\"><a href=\"#六-总结\" class=\"headerlink\" title=\"六.总结\"></a>六.总结</h2><p>大家可以按照不同的需求来安装不同的插件，可以说是事半功倍</p>\n","site":{"data":{}},"length":1023,"excerpt":"","more":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一. 简介\"></a>一. 简介</h2><p>浏览器，大家每天都在用，作为一个上网的工具，或是学习或是娱乐，一个好的浏览器可以让我们的工作和学习效率提高一<br>大半。但是之前接触的浏览器，都从在一定的问题。</p>\n<p><strong>比如说</strong></p>\n<ul>\n<li>浏览器界面太复杂，无用的信息太多</li>\n<li>功能不齐全，想要截个完整的网页太难</li>\n<li>广告一大堆，找关闭方式都找不到</li>\n</ul>\n<blockquote>\n<p>为了打破这样的局面，我给大家推荐一个完美的浏览器<br>电脑端：Google Chrome（谷歌浏览器）<br>手机端：kiwi </p>\n</blockquote>\n<p>或许你的电脑已经安装了谷歌浏览器，但是它潜在的功能，你是否发现了</p>\n<h2 id=\"二-软件下载安装\"><a href=\"#二-软件下载安装\" class=\"headerlink\" title=\"二. 软件下载安装\"></a>二. 软件下载安装</h2><ol>\n<li><p>想要使用，首先我们得先安装浏览器，百度上下载安装，广告一大堆，删都删不掉，所有我一般不去百度下载安装</p>\n<blockquote>\n<p>这里我给大家发一下<a href=\"https://www.lanzous.com/ia1lsch\" target=\"_blank\" rel=\"noopener\">我的谷歌版本</a> 大家可以点击下载</p>\n</blockquote>\n</li>\n<li><p>还有一个看的别人用的版本有挺多的版本，大家可以<a href=\"https://tools.shuax.com/chrome\" target=\"_blank\" rel=\"noopener\">点击下载</a><br> <img src=\"https://img-blog.csdnimg.cn/20200308113556840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br> <strong>这里用四个版本大家可以根据自己的需求去下载安装</strong></p>\n<ol>\n<li>Stable Channel：稳定版，正式版，更新慢，比较稳定适合普通用户，</li>\n<li>Beta Channel：测试版，主要是安全上的测试，适合较稳定可以尝鲜的用户</li>\n<li>Dev Channel：开发版，主要是功能上的测试，不稳定，适合开发人员使用</li>\n<li>Canary Build：金丝雀版，它可以独立的安装或是免安装，不会覆盖原本的 Google Chrome 版本，适合开发人员使用，存在不稳定因素</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"三-软件的配置\"><a href=\"#三-软件的配置\" class=\"headerlink\" title=\"三.软件的配置\"></a>三.软件的配置</h2><p>1.软件下载完，就是傻瓜式的安装，我就不发截图了，安装完成，我们就需要配置一下浏览器才可以正常使用</p>\n<blockquote>\n<p>我们还是得先<a href=\"https://www.lanzous.com/ia1m2fa\" target=\"_blank\" rel=\"noopener\">下载这个插件</a></p>\n</blockquote>\n<p>2.开始配置，加载谷歌访问助手破解版插件<br><img src=\"https://img-blog.csdnimg.cn/20200308120013191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308120603493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>3.进入商店进行安装插件<br><img src=\"https://img-blog.csdnimg.cn/2020030812083237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308120921499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308121050189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"四-插件推荐\"><a href=\"#四-插件推荐\" class=\"headerlink\" title=\"四.插件推荐\"></a>四.插件推荐</h2><p>1.之所以推荐此浏览器给大家，也源于它强大的插件功能，自己可以打造属于自己的一款浏览器，当然插件中的黑科技值得大家去探索<br><strong>我给大家推荐几个好用的插件</strong></p>\n<ul>\n<li>infinity 标签页   （可以美化我们的浏览器）</li>\n<li>tampermonkey （功能十分强大）<blockquote>\n<p>了解更多插件和插件的功能，可 <a href=\"https://www.zhihu.com/answer/693396771\" target=\"_blank\" rel=\"noopener\">打开链接</a></p>\n</blockquote>\n</li>\n</ul>\n<p>2.当然我们，也可以通过第三方网站进行下载，下载的插件我们可以向上面的一样，在扩展程序中添加<br><img src=\"https://img-blog.csdnimg.cn/20200308122234371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>网站推荐</strong></p>\n<ul>\n<li><a href=\"https://greasyfork.org/zh-CN\" target=\"_blank\" rel=\"noopener\">https://greasyfork.org/zh-CN</a><br><img src=\"https://img-blog.csdnimg.cn/20200308122433167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li><a href=\"https://chromecj.com/\" target=\"_blank\" rel=\"noopener\">https://chromecj.com/</a></li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308122700624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-手机端浏览器\"><a href=\"#五-手机端浏览器\" class=\"headerlink\" title=\"五.手机端浏览器\"></a>五.手机端浏览器</h2><p> 手机端的浏览器也是特别的重要，我这里也给大家推荐一个</p>\n<blockquote>\n<p><a href=\"https://www.lanzous.com/ia1lzeb\" target=\"_blank\" rel=\"noopener\">kiwi浏览器下载</a></p>\n</blockquote>\n<p> 1.和电脑端一样，我们安装好之后得先安装<a href=\"https://www.lanzous.com/ia1m2fa\" target=\"_blank\" rel=\"noopener\">谷歌访问助手破解版插件</a>，才可以正常使用<br> <img src=\"https://img-blog.csdnimg.cn/20200308123619635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>2.电脑端的插件，移动都手机端同样也是使用，我们只需要在扩展程序里面添加就好了</p>\n<h2 id=\"六-总结\"><a href=\"#六-总结\" class=\"headerlink\" title=\"六.总结\"></a>六.总结</h2><p>大家可以按照不同的需求来安装不同的插件，可以说是事半功倍</p>\n"},{"title":"PicGo+jsdelivr+github打造私人图床","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-04T05:12:00.000Z","comments":1,"keywords":"搭建私人图床","description":"搭建私人图床","photos":["https://images4.alphacoders.com/641/641968.jpg"],"_content":"\n## 一.简介\n1. 搭建图床的办法特别的多，今天教大家使用picGo 这个软件来搭建自己的图床\n2. PicGo是一个用于快速上传图片并获取图片URL链接的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，github，阿里云，imgur等图床\n\n## 二.准备\n### 1.PicGo的安装\n>点击下载：[https://www.lanzous.com/ia1vp8f](https://www.lanzous.com/ia1vp8f)\n\n安装完成后是长这个样子的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308155330732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 2.github建立仓库\n>github的使用，不就不过多介绍了，不会的朋友，可以看一下，[github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308160136530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308160546521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.创建新的Token\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161035820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161217663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161405419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161455587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n输入密码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161541307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162017507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162231178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 三.配置PicGo\n打开软件，图床设置，打开github图床\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162909523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308163029372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 设定仓库名：按照【用户名/图床仓库名】的格式填写\n- 设定分支名：master\n- 设定Token：粘贴之前生成的Token，一长串数字\n- 指定存储路径：填写想要储存的路径，如 img/，这样就会在仓库下创建一个名为img的文件夹，图片将会储存在此文件夹中\n- 设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以可以设置为https://cdn.jsdelivr.net/gh/用户名/图床仓库名 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308164702630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n如果忘记token，可以重新获取token，再填写，到这里我们就配置完成\n\n## 四. 测试\n点一次测试，将图片放里面去\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308170117932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n>提示\n>上传的图片有问题，我看了下，问题出在填完数据，没点确定，就点了个设置默认图床，等我重新填了一下就好了\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308170623608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030817314180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**注意**\n上传成功后，自动会复制生成的连接，我们粘贴到需要的地方[https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png](https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308173135585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## 五.总结\n1. 同时我也发现一个问题\n- 删除本地相册图片，github上面图片依然存在\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308173844347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 当重复上传相同照片（同名），会提示无法连接服务器，就是报错，然后我们需要重新启动PicGo软件才可以\n\n\n2. 我们需要什么格式的图片链接，就先选好\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174411732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 获取图片的连接\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174515549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n4. 在配置github 的时候设置自定义域名可以不填，但是由于github的服务器是在国外，导致加载图片的速度特别的慢，所有我们还是选择 jsdelivr 来加速\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174802851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 当然我们也可以设置快捷键，在剪完图后之间按快捷键快速生成图片链接\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308175236746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n到这里教程就结束了\n","source":"_posts/5.PicGo+jsdelivr+github打造私人图床.md","raw":"---\ntitle: PicGo+jsdelivr+github打造私人图床\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-4 13:12:00\ncomments: true\ntags: \n - 前端\n \nkeywords: 搭建私人图床\ndescription:  搭建私人图床\nphotos: https://images4.alphacoders.com/641/641968.jpg\n---\n\n## 一.简介\n1. 搭建图床的办法特别的多，今天教大家使用picGo 这个软件来搭建自己的图床\n2. PicGo是一个用于快速上传图片并获取图片URL链接的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，github，阿里云，imgur等图床\n\n## 二.准备\n### 1.PicGo的安装\n>点击下载：[https://www.lanzous.com/ia1vp8f](https://www.lanzous.com/ia1vp8f)\n\n安装完成后是长这个样子的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308155330732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 2.github建立仓库\n>github的使用，不就不过多介绍了，不会的朋友，可以看一下，[github入门](https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308160136530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308160546521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 3.创建新的Token\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161035820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161217663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161405419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161455587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n输入密码\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308161541307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162017507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162231178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n## 三.配置PicGo\n打开软件，图床设置，打开github图床\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308162909523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308163029372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 设定仓库名：按照【用户名/图床仓库名】的格式填写\n- 设定分支名：master\n- 设定Token：粘贴之前生成的Token，一长串数字\n- 指定存储路径：填写想要储存的路径，如 img/，这样就会在仓库下创建一个名为img的文件夹，图片将会储存在此文件夹中\n- 设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以可以设置为https://cdn.jsdelivr.net/gh/用户名/图床仓库名 \n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308164702630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n如果忘记token，可以重新获取token，再填写，到这里我们就配置完成\n\n## 四. 测试\n点一次测试，将图片放里面去\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308170117932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n>提示\n>上传的图片有问题，我看了下，问题出在填完数据，没点确定，就点了个设置默认图床，等我重新填了一下就好了\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308170623608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030817314180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**注意**\n上传成功后，自动会复制生成的连接，我们粘贴到需要的地方[https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png](https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308173135585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n## 五.总结\n1. 同时我也发现一个问题\n- 删除本地相册图片，github上面图片依然存在\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308173844347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 当重复上传相同照片（同名），会提示无法连接服务器，就是报错，然后我们需要重新启动PicGo软件才可以\n\n\n2. 我们需要什么格式的图片链接，就先选好\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174411732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 获取图片的连接\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174515549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n4. 在配置github 的时候设置自定义域名可以不填，但是由于github的服务器是在国外，导致加载图片的速度特别的慢，所有我们还是选择 jsdelivr 来加速\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308174802851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 当然我们也可以设置快捷键，在剪完图后之间按快捷键快速生成图片链接\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200308175236746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n到这里教程就结束了\n","slug":"5.PicGo+jsdelivr+github打造私人图床","published":1,"updated":"2020-03-10T13:22:36.049Z","layout":"post","link":"","_id":"ck7m05lvl000zvgv4d0mk5cub","content":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><ol>\n<li>搭建图床的办法特别的多，今天教大家使用picGo 这个软件来搭建自己的图床</li>\n<li>PicGo是一个用于快速上传图片并获取图片URL链接的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，github，阿里云，imgur等图床</li>\n</ol>\n<h2 id=\"二-准备\"><a href=\"#二-准备\" class=\"headerlink\" title=\"二.准备\"></a>二.准备</h2><h3 id=\"1-PicGo的安装\"><a href=\"#1-PicGo的安装\" class=\"headerlink\" title=\"1.PicGo的安装\"></a>1.PicGo的安装</h3><blockquote>\n<p>点击下载：<a href=\"https://www.lanzous.com/ia1vp8f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vp8f</a></p>\n</blockquote>\n<p>安装完成后是长这个样子的<br><img src=\"https://img-blog.csdnimg.cn/20200308155330732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-github建立仓库\"><a href=\"#2-github建立仓库\" class=\"headerlink\" title=\"2.github建立仓库\"></a>2.github建立仓库</h3><blockquote>\n<p>github的使用，不就不过多介绍了，不会的朋友，可以看一下，<a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308160136530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308160546521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-创建新的Token\"><a href=\"#3-创建新的Token\" class=\"headerlink\" title=\"3.创建新的Token\"></a>3.创建新的Token</h3><p><img src=\"https://img-blog.csdnimg.cn/20200308161035820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161217663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161405419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161455587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>输入密码<br><img src=\"https://img-blog.csdnimg.cn/20200308161541307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308162017507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308162231178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"三-配置PicGo\"><a href=\"#三-配置PicGo\" class=\"headerlink\" title=\"三.配置PicGo\"></a>三.配置PicGo</h2><p>打开软件，图床设置，打开github图床<br><img src=\"https://img-blog.csdnimg.cn/20200308162909523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308163029372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>设定仓库名：按照【用户名/图床仓库名】的格式填写</li>\n<li>设定分支名：master</li>\n<li>设定Token：粘贴之前生成的Token，一长串数字</li>\n<li>指定存储路径：填写想要储存的路径，如 img/，这样就会在仓库下创建一个名为img的文件夹，图片将会储存在此文件夹中</li>\n<li>设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以可以设置为<a href=\"https://cdn.jsdelivr.net/gh/用户名/图床仓库名\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> </li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308164702630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>如果忘记token，可以重新获取token，再填写，到这里我们就配置完成</p>\n<h2 id=\"四-测试\"><a href=\"#四-测试\" class=\"headerlink\" title=\"四. 测试\"></a>四. 测试</h2><p>点一次测试，将图片放里面去<br><img src=\"https://img-blog.csdnimg.cn/20200308170117932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>提示<br>上传的图片有问题，我看了下，问题出在填完数据，没点确定，就点了个设置默认图床，等我重新填了一下就好了</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308170623608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030817314180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>注意</strong><br>上传成功后，自动会复制生成的连接，我们粘贴到需要的地方<a href=\"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png</a><br><img src=\"https://img-blog.csdnimg.cn/20200308173135585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><ol>\n<li>同时我也发现一个问题</li>\n</ol>\n<ul>\n<li>删除本地相册图片，github上面图片依然存在<br><img src=\"https://img-blog.csdnimg.cn/20200308173844347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>当重复上传相同照片（同名），会提示无法连接服务器，就是报错，然后我们需要重新启动PicGo软件才可以</li>\n</ul>\n<ol start=\"2\">\n<li>我们需要什么格式的图片链接，就先选好<br><img src=\"https://img-blog.csdnimg.cn/20200308174411732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>获取图片的连接<br><img src=\"https://img-blog.csdnimg.cn/20200308174515549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>在配置github 的时候设置自定义域名可以不填，但是由于github的服务器是在国外，导致加载图片的速度特别的慢，所有我们还是选择 jsdelivr 来加速<br><img src=\"https://img-blog.csdnimg.cn/20200308174802851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>当然我们也可以设置快捷键，在剪完图后之间按快捷键快速生成图片链接<br> <img src=\"https://img-blog.csdnimg.cn/20200308175236746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>到这里教程就结束了</li>\n</ol>\n","site":{"data":{}},"length":927,"excerpt":"","more":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><ol>\n<li>搭建图床的办法特别的多，今天教大家使用picGo 这个软件来搭建自己的图床</li>\n<li>PicGo是一个用于快速上传图片并获取图片URL链接的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，github，阿里云，imgur等图床</li>\n</ol>\n<h2 id=\"二-准备\"><a href=\"#二-准备\" class=\"headerlink\" title=\"二.准备\"></a>二.准备</h2><h3 id=\"1-PicGo的安装\"><a href=\"#1-PicGo的安装\" class=\"headerlink\" title=\"1.PicGo的安装\"></a>1.PicGo的安装</h3><blockquote>\n<p>点击下载：<a href=\"https://www.lanzous.com/ia1vp8f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/ia1vp8f</a></p>\n</blockquote>\n<p>安装完成后是长这个样子的<br><img src=\"https://img-blog.csdnimg.cn/20200308155330732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-github建立仓库\"><a href=\"#2-github建立仓库\" class=\"headerlink\" title=\"2.github建立仓库\"></a>2.github建立仓库</h3><blockquote>\n<p>github的使用，不就不过多介绍了，不会的朋友，可以看一下，<a href=\"https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app\" target=\"_blank\" rel=\"noopener\">github入门</a></p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308160136530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308160546521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-创建新的Token\"><a href=\"#3-创建新的Token\" class=\"headerlink\" title=\"3.创建新的Token\"></a>3.创建新的Token</h3><p><img src=\"https://img-blog.csdnimg.cn/20200308161035820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161217663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161405419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308161455587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>输入密码<br><img src=\"https://img-blog.csdnimg.cn/20200308161541307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308162017507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308162231178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"三-配置PicGo\"><a href=\"#三-配置PicGo\" class=\"headerlink\" title=\"三.配置PicGo\"></a>三.配置PicGo</h2><p>打开软件，图床设置，打开github图床<br><img src=\"https://img-blog.csdnimg.cn/20200308162909523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200308163029372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>设定仓库名：按照【用户名/图床仓库名】的格式填写</li>\n<li>设定分支名：master</li>\n<li>设定Token：粘贴之前生成的Token，一长串数字</li>\n<li>指定存储路径：填写想要储存的路径，如 img/，这样就会在仓库下创建一个名为img的文件夹，图片将会储存在此文件夹中</li>\n<li>设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以可以设置为<a href=\"https://cdn.jsdelivr.net/gh/用户名/图床仓库名\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> </li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308164702630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>如果忘记token，可以重新获取token，再填写，到这里我们就配置完成</p>\n<h2 id=\"四-测试\"><a href=\"#四-测试\" class=\"headerlink\" title=\"四. 测试\"></a>四. 测试</h2><p>点一次测试，将图片放里面去<br><img src=\"https://img-blog.csdnimg.cn/20200308170117932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>提示<br>上传的图片有问题，我看了下，问题出在填完数据，没点确定，就点了个设置默认图床，等我重新填了一下就好了</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200308170623608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030817314180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>注意</strong><br>上传成功后，自动会复制生成的连接，我们粘贴到需要的地方<a href=\"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png</a><br><img src=\"https://img-blog.csdnimg.cn/20200308173135585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"五-总结\"><a href=\"#五-总结\" class=\"headerlink\" title=\"五.总结\"></a>五.总结</h2><ol>\n<li>同时我也发现一个问题</li>\n</ol>\n<ul>\n<li>删除本地相册图片，github上面图片依然存在<br><img src=\"https://img-blog.csdnimg.cn/20200308173844347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>当重复上传相同照片（同名），会提示无法连接服务器，就是报错，然后我们需要重新启动PicGo软件才可以</li>\n</ul>\n<ol start=\"2\">\n<li>我们需要什么格式的图片链接，就先选好<br><img src=\"https://img-blog.csdnimg.cn/20200308174411732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>获取图片的连接<br><img src=\"https://img-blog.csdnimg.cn/20200308174515549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>在配置github 的时候设置自定义域名可以不填，但是由于github的服务器是在国外，导致加载图片的速度特别的慢，所有我们还是选择 jsdelivr 来加速<br><img src=\"https://img-blog.csdnimg.cn/20200308174802851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n<li>当然我们也可以设置快捷键，在剪完图后之间按快捷键快速生成图片链接<br> <img src=\"https://img-blog.csdnimg.cn/20200308175236746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>到这里教程就结束了</li>\n</ol>\n"},{"title":"轻松入手markdown编程","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-07T11:32:00.000Z","comments":1,"keywords":"markdown的使用","description":"markdown的使用","photos":["https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2872395983,334048296&fm=26&gp=0.jpg"],"_content":"\n## 说明\n**Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。**\n## 应用\n**现在Makedown编程语言应用十分的广泛，比如说在git的项目文件中编写README所使用的的就是，博客中的文件编写格式同样是，等等好多地方都用到了，这个学习起来没有难度，今天就把自己收集的知识分享给大家。**\n## 编程\n### 标题\n\n```\n  # 一级标题\n  ## 二级标题 \n  ### 三级标题（#的个数代表几级标题）\n```\n\n ### 添加图片\n \n\n```\n方法1添加本地图片：\n\t![pc](图片的路径)\n```\n\n### 无须列表\n\n```\n- 昨天\n- 今天\n- 明天\n```\n### 有序列表\n\n```\n1. 过去\n2. 现在\n3. 将来\n```\n\n### 引用\n\n```\n> 说明文字\n```\n\n### 链接\n\n```\n链接：www.baidu.com\n```\n### 粗体\n\n```\n**粗体**\n```\n### 斜体\n\n```\n*斜体*\n```\n### 等宽字体\n\n```\n`等宽` （键盘ESC下面的符号）\n```\n\n### 代码块\n```\n开始：```c（c为c语言语法显示）\n\nint main()\n{\n}\n\n结束：```\n```\n### 插入表格\n\n```\n方法1：\n按 ctrl+t 插入表格\n方法2：\n|表格 |姓名 | 性别 |\n| ---- | ---- | ----  |\n|  1   |      |       |\n|  2   |      |       |\n|  3   |      |       |\n```\n\n ### 分割线\n \n\n```\n---   \n```\n\n### 软件推荐\n软件名：Typora\n- 软件可以进行代码和排版的切换显示![软件可以进行代码和排版的切换显示](https://img-blog.csdnimg.cn/20200201125824641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 文件可以导出各种格式（html，pdf等）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200201130105319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n大家可以自行百度搜索下载，或者点击下方下载链接\n\n蓝秦云：[https://www.lanzous.com/i8yq66f](https://www.lanzous.com/i8yq66f)\n\n\n### 代码示例\ngit链接：[https://gitee.com/zfq0620/Markdown.git](https://gitee.com/zfq0620/Markdown.git)\n\n---\n*希望对大家有用*\n","source":"_posts/8.轻松入手Markdown编程.md","raw":"---\ntitle: 轻松入手markdown编程\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-7 19:32:00\ncomments: true\ntags: \n - 嵌入式\n\nkeywords: markdown的使用\ndescription: markdown的使用\nphotos: https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2872395983,334048296&fm=26&gp=0.jpg\n---\n\n## 说明\n**Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。**\n## 应用\n**现在Makedown编程语言应用十分的广泛，比如说在git的项目文件中编写README所使用的的就是，博客中的文件编写格式同样是，等等好多地方都用到了，这个学习起来没有难度，今天就把自己收集的知识分享给大家。**\n## 编程\n### 标题\n\n```\n  # 一级标题\n  ## 二级标题 \n  ### 三级标题（#的个数代表几级标题）\n```\n\n ### 添加图片\n \n\n```\n方法1添加本地图片：\n\t![pc](图片的路径)\n```\n\n### 无须列表\n\n```\n- 昨天\n- 今天\n- 明天\n```\n### 有序列表\n\n```\n1. 过去\n2. 现在\n3. 将来\n```\n\n### 引用\n\n```\n> 说明文字\n```\n\n### 链接\n\n```\n链接：www.baidu.com\n```\n### 粗体\n\n```\n**粗体**\n```\n### 斜体\n\n```\n*斜体*\n```\n### 等宽字体\n\n```\n`等宽` （键盘ESC下面的符号）\n```\n\n### 代码块\n```\n开始：```c（c为c语言语法显示）\n\nint main()\n{\n}\n\n结束：```\n```\n### 插入表格\n\n```\n方法1：\n按 ctrl+t 插入表格\n方法2：\n|表格 |姓名 | 性别 |\n| ---- | ---- | ----  |\n|  1   |      |       |\n|  2   |      |       |\n|  3   |      |       |\n```\n\n ### 分割线\n \n\n```\n---   \n```\n\n### 软件推荐\n软件名：Typora\n- 软件可以进行代码和排版的切换显示![软件可以进行代码和排版的切换显示](https://img-blog.csdnimg.cn/20200201125824641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n- 文件可以导出各种格式（html，pdf等）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200201130105319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n大家可以自行百度搜索下载，或者点击下方下载链接\n\n蓝秦云：[https://www.lanzous.com/i8yq66f](https://www.lanzous.com/i8yq66f)\n\n\n### 代码示例\ngit链接：[https://gitee.com/zfq0620/Markdown.git](https://gitee.com/zfq0620/Markdown.git)\n\n---\n*希望对大家有用*\n","slug":"8.轻松入手Markdown编程","published":1,"updated":"2020-03-10T13:25:48.632Z","layout":"post","link":"","_id":"ck7m05lvo0013vgv4c672hmog","content":"<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p><strong>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</strong></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p><strong>现在Makedown编程语言应用十分的广泛，比如说在git的项目文件中编写README所使用的的就是，博客中的文件编写格式同样是，等等好多地方都用到了，这个学习起来没有难度，今天就把自己收集的知识分享给大家。</strong></p>\n<h2 id=\"编程\"><a href=\"#编程\" class=\"headerlink\" title=\"编程\"></a>编程</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><pre><code>  # 一级标题\n  ## 二级标题 \n  ### 三级标题（#的个数代表几级标题）</code></pre><h3 id=\"添加图片\"><a href=\"#添加图片\" class=\"headerlink\" title=\"添加图片\"></a>添加图片</h3><pre><code>方法1添加本地图片：\n    ![pc](图片的路径)</code></pre><h3 id=\"无须列表\"><a href=\"#无须列表\" class=\"headerlink\" title=\"无须列表\"></a>无须列表</h3><pre><code>- 昨天\n- 今天\n- 明天</code></pre><h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><pre><code>1. 过去\n2. 现在\n3. 将来</code></pre><h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><pre><code>&gt; 说明文字</code></pre><h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><pre><code>链接：www.baidu.com</code></pre><h3 id=\"粗体\"><a href=\"#粗体\" class=\"headerlink\" title=\"粗体\"></a>粗体</h3><pre><code>**粗体**</code></pre><h3 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h3><pre><code>*斜体*</code></pre><h3 id=\"等宽字体\"><a href=\"#等宽字体\" class=\"headerlink\" title=\"等宽字体\"></a>等宽字体</h3><pre><code>`等宽` （键盘ESC下面的符号）</code></pre><h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><pre><code>开始：```c（c为c语言语法显示）\n\nint main()\n{\n}\n\n结束：```</code></pre><h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><pre><code>方法1：\n按 ctrl+t 插入表格\n方法2：\n|表格 |姓名 | 性别 |\n| ---- | ---- | ----  |\n|  1   |      |       |\n|  2   |      |       |\n|  3   |      |       |</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><pre><code>---   </code></pre><h3 id=\"软件推荐\"><a href=\"#软件推荐\" class=\"headerlink\" title=\"软件推荐\"></a>软件推荐</h3><p>软件名：Typora</p>\n<ul>\n<li>软件可以进行代码和排版的切换显示<img src=\"https://img-blog.csdnimg.cn/20200201125824641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"软件可以进行代码和排版的切换显示\"></li>\n<li>文件可以导出各种格式（html，pdf等）<img src=\"https://img-blog.csdnimg.cn/20200201130105319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>大家可以自行百度搜索下载，或者点击下方下载链接</p>\n<p>蓝秦云：<a href=\"https://www.lanzous.com/i8yq66f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/i8yq66f</a></p>\n<h3 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h3><p>git链接：<a href=\"https://gitee.com/zfq0620/Markdown.git\" target=\"_blank\" rel=\"noopener\">https://gitee.com/zfq0620/Markdown.git</a></p>\n<hr>\n<p><em>希望对大家有用</em></p>\n","site":{"data":{}},"length":589,"excerpt":"","more":"<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p><strong>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</strong></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p><strong>现在Makedown编程语言应用十分的广泛，比如说在git的项目文件中编写README所使用的的就是，博客中的文件编写格式同样是，等等好多地方都用到了，这个学习起来没有难度，今天就把自己收集的知识分享给大家。</strong></p>\n<h2 id=\"编程\"><a href=\"#编程\" class=\"headerlink\" title=\"编程\"></a>编程</h2><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><pre><code>  # 一级标题\n  ## 二级标题 \n  ### 三级标题（#的个数代表几级标题）</code></pre><h3 id=\"添加图片\"><a href=\"#添加图片\" class=\"headerlink\" title=\"添加图片\"></a>添加图片</h3><pre><code>方法1添加本地图片：\n    ![pc](图片的路径)</code></pre><h3 id=\"无须列表\"><a href=\"#无须列表\" class=\"headerlink\" title=\"无须列表\"></a>无须列表</h3><pre><code>- 昨天\n- 今天\n- 明天</code></pre><h3 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h3><pre><code>1. 过去\n2. 现在\n3. 将来</code></pre><h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><pre><code>&gt; 说明文字</code></pre><h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><pre><code>链接：www.baidu.com</code></pre><h3 id=\"粗体\"><a href=\"#粗体\" class=\"headerlink\" title=\"粗体\"></a>粗体</h3><pre><code>**粗体**</code></pre><h3 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h3><pre><code>*斜体*</code></pre><h3 id=\"等宽字体\"><a href=\"#等宽字体\" class=\"headerlink\" title=\"等宽字体\"></a>等宽字体</h3><pre><code>`等宽` （键盘ESC下面的符号）</code></pre><h3 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h3><pre><code>开始：```c（c为c语言语法显示）\n\nint main()\n{\n}\n\n结束：```</code></pre><h3 id=\"插入表格\"><a href=\"#插入表格\" class=\"headerlink\" title=\"插入表格\"></a>插入表格</h3><pre><code>方法1：\n按 ctrl+t 插入表格\n方法2：\n|表格 |姓名 | 性别 |\n| ---- | ---- | ----  |\n|  1   |      |       |\n|  2   |      |       |\n|  3   |      |       |</code></pre><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h3><pre><code>---   </code></pre><h3 id=\"软件推荐\"><a href=\"#软件推荐\" class=\"headerlink\" title=\"软件推荐\"></a>软件推荐</h3><p>软件名：Typora</p>\n<ul>\n<li>软件可以进行代码和排版的切换显示<img src=\"https://img-blog.csdnimg.cn/20200201125824641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"软件可以进行代码和排版的切换显示\"></li>\n<li>文件可以导出各种格式（html，pdf等）<img src=\"https://img-blog.csdnimg.cn/20200201130105319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></li>\n</ul>\n<p>大家可以自行百度搜索下载，或者点击下方下载链接</p>\n<p>蓝秦云：<a href=\"https://www.lanzous.com/i8yq66f\" target=\"_blank\" rel=\"noopener\">https://www.lanzous.com/i8yq66f</a></p>\n<h3 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h3><p>git链接：<a href=\"https://gitee.com/zfq0620/Markdown.git\" target=\"_blank\" rel=\"noopener\">https://gitee.com/zfq0620/Markdown.git</a></p>\n<hr>\n<p><em>希望对大家有用</em></p>\n"},{"title":"C语言之字符串处理","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-09T07:12:10.000Z","comments":1,"keywords":"C语言中字符串的学习","description":"C语言中字符串的学习","photos":["https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/20200309131137.png"],"_content":"\n\n# 字符串处理函数\n## 1.简介\n-  在c语言的学习过程中，我们会学习很多字符串处理函数，入strlen，strcpy，strcmp等等,使用也特别简单，只需要调用库函数就行。\n-  但是对于c语言初学者来说，作为一个面向过程的语言，了解其函数内的实现过程还非常用必要的。\n\n## 2.字符串实现函数\n### strcpy（字符串拷贝函数）\n```c\n#include <stdio.h>\n#define M 50\n//指针函数 返回值为指向字符串str1的指针\nchar *strcpy(char * str1, const char * str2 )\n{\n\t//判断 是否为空指针\n\tif(str1 == NULL || str2 == NULL)\n\t{\n\t\treturn NULL;\n\t}\n\tchar *p = str1;\n\twhile((* str1++ = * str2++) != '\\0');\n\treturn p;\n}\n\nint main()\n{\n\tchar str1[M]={0};\n\tchar str2[M]={0};\n\tprintf(\"please input str1\\r\\n\");\n\tfgets(str1,50,stdin);\n\tchar *p = strcpy(str2,str1);\n\tputs(str2); \n\treturn 0;\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216175811663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n> 注意：fgets输入的时候会将缓存区里面的回车换行\n\n**作为笔试题考察点有四处**\n1. 异常处理  str1，str2 是否为NULL\n2. const 的修饰，str2不能被修改需要const来修饰\n3. 字符串会拷贝 '\\0' \n4. 返回值（指向str2的指针），可以方便调用者调用\n\n### strcmp（字符串比较大小）\n```c\n**#include <stdio.h>\n#define M 50\n#define N 50\nint Strcmp(const char *str1,const char *str2);\nint main()\n{\n\t//输入两个字符串\n\tchar str1[M]={0};\n\tchar str2[N]={0};\n\tprintf(\"please input str1\\r\\n\");\n\tscanf(\"%s\",str1);\n\tprintf(\"please input str2\\r\\n\");\n\tscanf(\"%s\",str2);\n\t//比较两字符串的大小\n\tStrcmp(str1,str2);\n\treturn 0;\n}\n\nint Strcmp(const char *str1,const char *str2)\n{\n\t//判断 是否为空指针\n\tif(str1 == NULL || str2 == NULL)\n \t{\n \t\t return;\n \t}\n\tint i=0;\n\twhile(*(str1+i)==*(str2+i) && *(str1+i)!='\\0')\n\t{\n\t\ti++;\n\t}\n\tif( *(str1+i)>*(str2+i) ) \n\t{\n\t\tprintf(\"str1>str2\\r\\n\");\n\t\treturn 1;\n\t}\n\telse if( *(str1+i) < *(str2+i) )\n\t{\n\t\tprintf(\"str1<str2\\r\\n\");\n\t\treturn -1;\n\t}\n\telse\n\t{\n\t\tprintf(\"str1=str2\\r\\n\");\n\t\treturn 0;\n\t}\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216181316684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**作为笔试题考点同上**\n\n### strcat （字符串拼接函数）\n```c\n#include <stdio.h>\n#include <string.h>\n#define M 50\n#define N 50\nchar *str_cat(char*,char*);\n\nint main()\n{\n\tchar str1[M]={0};\n\tchar str2[N]={0};\n\t//输入两个字符串\n\tprintf(\"please input str1\\r\\n\");\n\tscanf(\"%s\",str1);\n\tprintf(\"please input str2\\r\\n\");\n\tscanf(\"%s\",str2);\n\tchar *p=str_cat(str1,str2);\n\tputs(p);\n\treturn 0;\n}\n\n//字符串拼接\nchar *str_cat(char *str1,char *str2)\n{\n\t//判断 是否为空指针\n\t if(str1 == NULL || str2 == NULL)\n  \t{\n   \t\t return;\n  \t}\n  \t//字符串str1的长度\n \tint j=strlen(str1);\n \t//字符串str2的长度\n \tint k=strlen(str2);\n\tif( M < (j+k) )\n\t{\n\t\treturn ;\n\t}\n\t//定义两个指针\n\tchar *pp=str1;\n\tchar *p=str1+j;\n\tchar *q=str2;\n\tint i=0;\n\tfor(i=0;i<k;i++)\n\t{\n\t\t*(p+i) = *(q+i);\n\t}\n\treturn pp;\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216201318383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### strlen（求字符串的长度）\n```c\n#include <stdio.h>\nint mystrlen(char *pStr);\nint main()\n{\n\tchar str[100] ={0};\n\tprintf(\"please input str\\r\\n\");\n\tscanf(\"%s\",str);\n\t//用变量a来接受函数的返回值\n\tint a=mystrlen(str);\n\tprintf(\"%d\\r\\n\",a);\n\treturn 0;\n}\n\n//求字符串的长度\nint mystrlen(char *pStr)\n{\n\tif(NULL==pStr)\n\t{\n\t\treturn -1;\n\t}\n\tint i=0;\n\twhile(pStr[i] !='\\0')\n\t{\n\t\ti++;\n\t}\n\treturn i;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216204138907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：strlen 和 sizeof的区别\n- strlen 计算字符串的长度，不计算字符串的结束标识符 '\\0'\n- sizeof 计算的是占空间的大小会计算进去\n\n### 字符串的翻转\n**方法一 **\n```c\n#include <stdio.h>\n#include <string.h>\n#define n 50\n\nint main()\n{\n\t//输入字符\n\tchar arr[n]={0};\n\tscanf(\"%s\",arr);\n\tchar *p=arr;\n\tchar *q=&arr[strlen(arr)-1];\n\tint i=0;\n\t//用指针p指向首地址，q指向字符的尾地址\n\tfor(i=0;i<strlen(arr)/2;i++)\n\t{\t\n\t\tchar tmp= *(p+i);\n\t\t *(p+i)=*(q-i);\n\t\t *(q-i)=tmp;\n\t}\n\tputs(arr);\n\treturn 0;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216205158640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**方法二**\n```c\n#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar str[100]={0};\n\tgets(str);\n\tchar *p=str;\n\tchar *q=str+strlen(str)-1;\n\n\twhile(p<q)\n\t{\n\t\tint tmp=*p;\n\t\t*p=*q;\n\t\t*q=tmp;\n\t\tp++;\n\t\tq--;\n\t}\n\tputs(str);\n\treturn 0;\n}\n```\n\n### 字符串的查找\n> 编写一个字符串查找函数，函数原型为：\nchar *str_search(const char *str1, const char *str2)，\n该函数实现在字符串str1中找出字符串str2第一次出现的位置。\n如果str2出现在str1中，则返回str2在str1中出现的首地址，\n如果在str1中没有与str2匹配的字符串则返回NULL\n\n```c\n#include <stdio.h>\n#include <string.h>\nchar *str_search( char *str1, char *str2 );\n\nint main()\n{\n\t//定义两个字符串\n\tchar str1[20] = {0};\n\tchar str2[20] = {0};\n\t//赋值\n\tscanf(\"%s\",str1);\n\tscanf(\"%s\",str2);\n\tchar *q = str_search(str1,str2);\n\tprintf(\"%s\\r\\n\",q);\n\treturn 0;\n}\n\nchar *str_search( char *str1, char *str2 )\n{\n\t//定义一个指针指向 str1\n\tchar *p = str1;\n\t//逐个移动比较\n\tint i = 0;\n\tfor( i=0; i < strlen(str1); i++ )\n\t{\n\t\tchar tmp = *( p+strlen(str2)+i );\n\t\t*( p+strlen(str2)+i ) = '\\0';\n\t\t//比较两个字符串\n\t\tif( 0 == strcmp( str1+i, str2 ) )\n\t\t{\n\t\t\treturn p+i;\n\t\t}\t\n\t\t*( p+strlen(str2)+i ) = tmp;\n\t}\n\treturn NULL;\n}\t\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216210417995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n \n\n\n\n","source":"_posts/9.c语言之字符串处理函数的实现.md","raw":"---\ntitle: C语言之字符串处理\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-9 15:12:10\ncomments: true\ntags: \n - C语言\n\nkeywords: C语言中字符串的学习\ndescription: C语言中字符串的学习\nphotos: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/20200309131137.png\n---\n\n\n# 字符串处理函数\n## 1.简介\n-  在c语言的学习过程中，我们会学习很多字符串处理函数，入strlen，strcpy，strcmp等等,使用也特别简单，只需要调用库函数就行。\n-  但是对于c语言初学者来说，作为一个面向过程的语言，了解其函数内的实现过程还非常用必要的。\n\n## 2.字符串实现函数\n### strcpy（字符串拷贝函数）\n```c\n#include <stdio.h>\n#define M 50\n//指针函数 返回值为指向字符串str1的指针\nchar *strcpy(char * str1, const char * str2 )\n{\n\t//判断 是否为空指针\n\tif(str1 == NULL || str2 == NULL)\n\t{\n\t\treturn NULL;\n\t}\n\tchar *p = str1;\n\twhile((* str1++ = * str2++) != '\\0');\n\treturn p;\n}\n\nint main()\n{\n\tchar str1[M]={0};\n\tchar str2[M]={0};\n\tprintf(\"please input str1\\r\\n\");\n\tfgets(str1,50,stdin);\n\tchar *p = strcpy(str2,str1);\n\tputs(str2); \n\treturn 0;\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216175811663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n> 注意：fgets输入的时候会将缓存区里面的回车换行\n\n**作为笔试题考察点有四处**\n1. 异常处理  str1，str2 是否为NULL\n2. const 的修饰，str2不能被修改需要const来修饰\n3. 字符串会拷贝 '\\0' \n4. 返回值（指向str2的指针），可以方便调用者调用\n\n### strcmp（字符串比较大小）\n```c\n**#include <stdio.h>\n#define M 50\n#define N 50\nint Strcmp(const char *str1,const char *str2);\nint main()\n{\n\t//输入两个字符串\n\tchar str1[M]={0};\n\tchar str2[N]={0};\n\tprintf(\"please input str1\\r\\n\");\n\tscanf(\"%s\",str1);\n\tprintf(\"please input str2\\r\\n\");\n\tscanf(\"%s\",str2);\n\t//比较两字符串的大小\n\tStrcmp(str1,str2);\n\treturn 0;\n}\n\nint Strcmp(const char *str1,const char *str2)\n{\n\t//判断 是否为空指针\n\tif(str1 == NULL || str2 == NULL)\n \t{\n \t\t return;\n \t}\n\tint i=0;\n\twhile(*(str1+i)==*(str2+i) && *(str1+i)!='\\0')\n\t{\n\t\ti++;\n\t}\n\tif( *(str1+i)>*(str2+i) ) \n\t{\n\t\tprintf(\"str1>str2\\r\\n\");\n\t\treturn 1;\n\t}\n\telse if( *(str1+i) < *(str2+i) )\n\t{\n\t\tprintf(\"str1<str2\\r\\n\");\n\t\treturn -1;\n\t}\n\telse\n\t{\n\t\tprintf(\"str1=str2\\r\\n\");\n\t\treturn 0;\n\t}\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216181316684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**作为笔试题考点同上**\n\n### strcat （字符串拼接函数）\n```c\n#include <stdio.h>\n#include <string.h>\n#define M 50\n#define N 50\nchar *str_cat(char*,char*);\n\nint main()\n{\n\tchar str1[M]={0};\n\tchar str2[N]={0};\n\t//输入两个字符串\n\tprintf(\"please input str1\\r\\n\");\n\tscanf(\"%s\",str1);\n\tprintf(\"please input str2\\r\\n\");\n\tscanf(\"%s\",str2);\n\tchar *p=str_cat(str1,str2);\n\tputs(p);\n\treturn 0;\n}\n\n//字符串拼接\nchar *str_cat(char *str1,char *str2)\n{\n\t//判断 是否为空指针\n\t if(str1 == NULL || str2 == NULL)\n  \t{\n   \t\t return;\n  \t}\n  \t//字符串str1的长度\n \tint j=strlen(str1);\n \t//字符串str2的长度\n \tint k=strlen(str2);\n\tif( M < (j+k) )\n\t{\n\t\treturn ;\n\t}\n\t//定义两个指针\n\tchar *pp=str1;\n\tchar *p=str1+j;\n\tchar *q=str2;\n\tint i=0;\n\tfor(i=0;i<k;i++)\n\t{\n\t\t*(p+i) = *(q+i);\n\t}\n\treturn pp;\n}\n```\n**运行结果**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216201318383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n### strlen（求字符串的长度）\n```c\n#include <stdio.h>\nint mystrlen(char *pStr);\nint main()\n{\n\tchar str[100] ={0};\n\tprintf(\"please input str\\r\\n\");\n\tscanf(\"%s\",str);\n\t//用变量a来接受函数的返回值\n\tint a=mystrlen(str);\n\tprintf(\"%d\\r\\n\",a);\n\treturn 0;\n}\n\n//求字符串的长度\nint mystrlen(char *pStr)\n{\n\tif(NULL==pStr)\n\t{\n\t\treturn -1;\n\t}\n\tint i=0;\n\twhile(pStr[i] !='\\0')\n\t{\n\t\ti++;\n\t}\n\treturn i;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216204138907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：strlen 和 sizeof的区别\n- strlen 计算字符串的长度，不计算字符串的结束标识符 '\\0'\n- sizeof 计算的是占空间的大小会计算进去\n\n### 字符串的翻转\n**方法一 **\n```c\n#include <stdio.h>\n#include <string.h>\n#define n 50\n\nint main()\n{\n\t//输入字符\n\tchar arr[n]={0};\n\tscanf(\"%s\",arr);\n\tchar *p=arr;\n\tchar *q=&arr[strlen(arr)-1];\n\tint i=0;\n\t//用指针p指向首地址，q指向字符的尾地址\n\tfor(i=0;i<strlen(arr)/2;i++)\n\t{\t\n\t\tchar tmp= *(p+i);\n\t\t *(p+i)=*(q-i);\n\t\t *(q-i)=tmp;\n\t}\n\tputs(arr);\n\treturn 0;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216205158640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**方法二**\n```c\n#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n\tchar str[100]={0};\n\tgets(str);\n\tchar *p=str;\n\tchar *q=str+strlen(str)-1;\n\n\twhile(p<q)\n\t{\n\t\tint tmp=*p;\n\t\t*p=*q;\n\t\t*q=tmp;\n\t\tp++;\n\t\tq--;\n\t}\n\tputs(str);\n\treturn 0;\n}\n```\n\n### 字符串的查找\n> 编写一个字符串查找函数，函数原型为：\nchar *str_search(const char *str1, const char *str2)，\n该函数实现在字符串str1中找出字符串str2第一次出现的位置。\n如果str2出现在str1中，则返回str2在str1中出现的首地址，\n如果在str1中没有与str2匹配的字符串则返回NULL\n\n```c\n#include <stdio.h>\n#include <string.h>\nchar *str_search( char *str1, char *str2 );\n\nint main()\n{\n\t//定义两个字符串\n\tchar str1[20] = {0};\n\tchar str2[20] = {0};\n\t//赋值\n\tscanf(\"%s\",str1);\n\tscanf(\"%s\",str2);\n\tchar *q = str_search(str1,str2);\n\tprintf(\"%s\\r\\n\",q);\n\treturn 0;\n}\n\nchar *str_search( char *str1, char *str2 )\n{\n\t//定义一个指针指向 str1\n\tchar *p = str1;\n\t//逐个移动比较\n\tint i = 0;\n\tfor( i=0; i < strlen(str1); i++ )\n\t{\n\t\tchar tmp = *( p+strlen(str2)+i );\n\t\t*( p+strlen(str2)+i ) = '\\0';\n\t\t//比较两个字符串\n\t\tif( 0 == strcmp( str1+i, str2 ) )\n\t\t{\n\t\t\treturn p+i;\n\t\t}\t\n\t\t*( p+strlen(str2)+i ) = tmp;\n\t}\n\treturn NULL;\n}\t\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200216210417995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n \n\n\n\n","slug":"9.c语言之字符串处理函数的实现","published":1,"updated":"2020-03-10T13:26:05.456Z","layout":"post","link":"","_id":"ck7m05lvr0017vgv4cby0h9yy","content":"<h1 id=\"字符串处理函数\"><a href=\"#字符串处理函数\" class=\"headerlink\" title=\"字符串处理函数\"></a>字符串处理函数</h1><h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.简介\"></a>1.简介</h2><ul>\n<li>在c语言的学习过程中，我们会学习很多字符串处理函数，入strlen，strcpy，strcmp等等,使用也特别简单，只需要调用库函数就行。</li>\n<li>但是对于c语言初学者来说，作为一个面向过程的语言，了解其函数内的实现过程还非常用必要的。</li>\n</ul>\n<h2 id=\"2-字符串实现函数\"><a href=\"#2-字符串实现函数\" class=\"headerlink\" title=\"2.字符串实现函数\"></a>2.字符串实现函数</h2><h3 id=\"strcpy（字符串拷贝函数）\"><a href=\"#strcpy（字符串拷贝函数）\" class=\"headerlink\" title=\"strcpy（字符串拷贝函数）\"></a>strcpy（字符串拷贝函数）</h3><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> M 50</span>\n<span class=\"token comment\" spellcheck=\"true\">//指针函数 返回值为指向字符串str1的指针</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> str1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> str2 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//判断 是否为空指针</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> str2 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> str1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span> str2<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> str1<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> str2<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str1\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">,</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216175811663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：fgets输入的时候会将缓存区里面的回车换行</p>\n</blockquote>\n<p><strong>作为笔试题考察点有四处</strong></p>\n<ol>\n<li>异常处理  str1，str2 是否为NULL</li>\n<li>const 的修饰，str2不能被修改需要const来修饰</li>\n<li>字符串会拷贝 ‘\\0’ </li>\n<li>返回值（指向str2的指针），可以方便调用者调用</li>\n</ol>\n<h3 id=\"strcmp（字符串比较大小）\"><a href=\"#strcmp（字符串比较大小）\" class=\"headerlink\" title=\"strcmp（字符串比较大小）\"></a>strcmp（字符串比较大小）</h3><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token operator\">*</span><span class=\"token operator\">*</span>#include <span class=\"token operator\">&lt;</span>stdio<span class=\"token punctuation\">.</span>h<span class=\"token operator\">></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> M 50</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> N 50</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">Strcmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str1<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//输入两个字符串</span>\n    <span class=\"token keyword\">char</span> str1<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> str2<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str1\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str2\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//比较两字符串的大小</span>\n    <span class=\"token function\">Strcmp</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Strcmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str1<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//判断 是否为空指针</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> str2 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str1<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str2<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str1<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token string\">'\\0'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str1<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str2<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1>str2\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str1<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str2<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1&lt;str2\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"str1=str2\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216181316684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>作为笔试题考点同上</strong></p>\n<h3 id=\"strcat-（字符串拼接函数）\"><a href=\"#strcat-（字符串拼接函数）\" class=\"headerlink\" title=\"strcat （字符串拼接函数）\"></a>strcat （字符串拼接函数）</h3><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> M 50</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> N 50</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">str_cat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> str1<span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> str2<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//输入两个字符串</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str1\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str2\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span><span class=\"token function\">str_cat</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//字符串拼接</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">str_cat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str1<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//判断 是否为空指针</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">||</span> str2 <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\" spellcheck=\"true\">//字符串str1的长度</span>\n     <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\" spellcheck=\"true\">//字符串str2的长度</span>\n     <span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> M <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">//定义两个指针</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pp<span class=\"token operator\">=</span>str1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span>str1<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>q<span class=\"token operator\">=</span>str2<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> pp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216201318383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"strlen（求字符串的长度）\"><a href=\"#strlen（求字符串的长度）\" class=\"headerlink\" title=\"strlen（求字符串的长度）\"></a>strlen（求字符串的长度）</h3><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">mystrlen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"please input str\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//用变量a来接受函数的返回值</span>\n    <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token function\">mystrlen</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\r\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//求字符串的长度</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">mystrlen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pStr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token operator\">==</span>pStr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pStr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span><span class=\"token string\">'\\0'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216204138907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：strlen 和 sizeof的区别</p>\n</blockquote>\n<ul>\n<li>strlen 计算字符串的长度，不计算字符串的结束标识符 ‘\\0’</li>\n<li>sizeof 计算的是占空间的大小会计算进去</li>\n</ul>\n<h3 id=\"字符串的翻转\"><a href=\"#字符串的翻转\" class=\"headerlink\" title=\"字符串的翻转\"></a>字符串的翻转</h3><p>*<em>方法一 *</em></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> n 50</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//输入字符</span>\n    <span class=\"token keyword\">char</span> arr<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>q<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>arr<span class=\"token punctuation\">[</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//用指针p指向首地址，q指向字符的尾地址</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>    \n        <span class=\"token keyword\">char</span> tmp<span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216205158640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>方法二</strong></p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">gets</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span>str<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>q<span class=\"token operator\">=</span>str<span class=\"token operator\">+</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">&lt;</span>q<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> tmp<span class=\"token operator\">=</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span>p<span class=\"token operator\">=</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span>q<span class=\"token operator\">=</span>tmp<span class=\"token punctuation\">;</span>\n        p<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        q<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"字符串的查找\"><a href=\"#字符串的查找\" class=\"headerlink\" title=\"字符串的查找\"></a>字符串的查找</h3><blockquote>\n<p>编写一个字符串查找函数，函数原型为：<br>char *str_search(const char *str1, const char *str2)，<br>该函数实现在字符串str1中找出字符串str2第一次出现的位置。<br>如果str2出现在str1中，则返回str2在str1中出现的首地址，<br>如果在str1中没有与str2匹配的字符串则返回NULL</p>\n</blockquote>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">str_search</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//定义两个字符串</span>\n    <span class=\"token keyword\">char</span> str1<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> str2<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//赋值</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> <span class=\"token function\">str_search</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">,</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\r\\n\"</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token function\">str_search</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str2 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//定义一个指针指向 str1</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//逐个移动比较</span>\n    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">char</span> tmp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//比较两个字符串</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span> str1<span class=\"token operator\">+</span>i<span class=\"token punctuation\">,</span> str2 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> p<span class=\"token operator\">+</span>i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>    \n        <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>i <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>    </code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216210417995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","site":{"data":{}},"length":3484,"excerpt":"","more":"<h1 id=\"字符串处理函数\"><a href=\"#字符串处理函数\" class=\"headerlink\" title=\"字符串处理函数\"></a>字符串处理函数</h1><h2 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1.简介\"></a>1.简介</h2><ul>\n<li>在c语言的学习过程中，我们会学习很多字符串处理函数，入strlen，strcpy，strcmp等等,使用也特别简单，只需要调用库函数就行。</li>\n<li>但是对于c语言初学者来说，作为一个面向过程的语言，了解其函数内的实现过程还非常用必要的。</li>\n</ul>\n<h2 id=\"2-字符串实现函数\"><a href=\"#2-字符串实现函数\" class=\"headerlink\" title=\"2.字符串实现函数\"></a>2.字符串实现函数</h2><h3 id=\"strcpy（字符串拷贝函数）\"><a href=\"#strcpy（字符串拷贝函数）\" class=\"headerlink\" title=\"strcpy（字符串拷贝函数）\"></a>strcpy（字符串拷贝函数）</h3><pre><code class=\"c\">#include &lt;stdio.h&gt;\n#define M 50\n//指针函数 返回值为指向字符串str1的指针\nchar *strcpy(char * str1, const char * str2 )\n{\n    //判断 是否为空指针\n    if(str1 == NULL || str2 == NULL)\n    {\n        return NULL;\n    }\n    char *p = str1;\n    while((* str1++ = * str2++) != &#39;\\0&#39;);\n    return p;\n}\n\nint main()\n{\n    char str1[M]={0};\n    char str2[M]={0};\n    printf(&quot;please input str1\\r\\n&quot;);\n    fgets(str1,50,stdin);\n    char *p = strcpy(str2,str1);\n    puts(str2); \n    return 0;\n}</code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216175811663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：fgets输入的时候会将缓存区里面的回车换行</p>\n</blockquote>\n<p><strong>作为笔试题考察点有四处</strong></p>\n<ol>\n<li>异常处理  str1，str2 是否为NULL</li>\n<li>const 的修饰，str2不能被修改需要const来修饰</li>\n<li>字符串会拷贝 ‘\\0’ </li>\n<li>返回值（指向str2的指针），可以方便调用者调用</li>\n</ol>\n<h3 id=\"strcmp（字符串比较大小）\"><a href=\"#strcmp（字符串比较大小）\" class=\"headerlink\" title=\"strcmp（字符串比较大小）\"></a>strcmp（字符串比较大小）</h3><pre><code class=\"c\">**#include &lt;stdio.h&gt;\n#define M 50\n#define N 50\nint Strcmp(const char *str1,const char *str2);\nint main()\n{\n    //输入两个字符串\n    char str1[M]={0};\n    char str2[N]={0};\n    printf(&quot;please input str1\\r\\n&quot;);\n    scanf(&quot;%s&quot;,str1);\n    printf(&quot;please input str2\\r\\n&quot;);\n    scanf(&quot;%s&quot;,str2);\n    //比较两字符串的大小\n    Strcmp(str1,str2);\n    return 0;\n}\n\nint Strcmp(const char *str1,const char *str2)\n{\n    //判断 是否为空指针\n    if(str1 == NULL || str2 == NULL)\n     {\n          return;\n     }\n    int i=0;\n    while(*(str1+i)==*(str2+i) &amp;&amp; *(str1+i)!=&#39;\\0&#39;)\n    {\n        i++;\n    }\n    if( *(str1+i)&gt;*(str2+i) ) \n    {\n        printf(&quot;str1&gt;str2\\r\\n&quot;);\n        return 1;\n    }\n    else if( *(str1+i) &lt; *(str2+i) )\n    {\n        printf(&quot;str1&lt;str2\\r\\n&quot;);\n        return -1;\n    }\n    else\n    {\n        printf(&quot;str1=str2\\r\\n&quot;);\n        return 0;\n    }\n}</code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216181316684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>作为笔试题考点同上</strong></p>\n<h3 id=\"strcat-（字符串拼接函数）\"><a href=\"#strcat-（字符串拼接函数）\" class=\"headerlink\" title=\"strcat （字符串拼接函数）\"></a>strcat （字符串拼接函数）</h3><pre><code class=\"c\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define M 50\n#define N 50\nchar *str_cat(char*,char*);\n\nint main()\n{\n    char str1[M]={0};\n    char str2[N]={0};\n    //输入两个字符串\n    printf(&quot;please input str1\\r\\n&quot;);\n    scanf(&quot;%s&quot;,str1);\n    printf(&quot;please input str2\\r\\n&quot;);\n    scanf(&quot;%s&quot;,str2);\n    char *p=str_cat(str1,str2);\n    puts(p);\n    return 0;\n}\n\n//字符串拼接\nchar *str_cat(char *str1,char *str2)\n{\n    //判断 是否为空指针\n     if(str1 == NULL || str2 == NULL)\n      {\n            return;\n      }\n      //字符串str1的长度\n     int j=strlen(str1);\n     //字符串str2的长度\n     int k=strlen(str2);\n    if( M &lt; (j+k) )\n    {\n        return ;\n    }\n    //定义两个指针\n    char *pp=str1;\n    char *p=str1+j;\n    char *q=str2;\n    int i=0;\n    for(i=0;i&lt;k;i++)\n    {\n        *(p+i) = *(q+i);\n    }\n    return pp;\n}</code></pre>\n<p><strong>运行结果</strong><br><img src=\"https://img-blog.csdnimg.cn/20200216201318383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"strlen（求字符串的长度）\"><a href=\"#strlen（求字符串的长度）\" class=\"headerlink\" title=\"strlen（求字符串的长度）\"></a>strlen（求字符串的长度）</h3><pre><code class=\"c\">#include &lt;stdio.h&gt;\nint mystrlen(char *pStr);\nint main()\n{\n    char str[100] ={0};\n    printf(&quot;please input str\\r\\n&quot;);\n    scanf(&quot;%s&quot;,str);\n    //用变量a来接受函数的返回值\n    int a=mystrlen(str);\n    printf(&quot;%d\\r\\n&quot;,a);\n    return 0;\n}\n\n//求字符串的长度\nint mystrlen(char *pStr)\n{\n    if(NULL==pStr)\n    {\n        return -1;\n    }\n    int i=0;\n    while(pStr[i] !=&#39;\\0&#39;)\n    {\n        i++;\n    }\n    return i;\n}</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216204138907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：strlen 和 sizeof的区别</p>\n</blockquote>\n<ul>\n<li>strlen 计算字符串的长度，不计算字符串的结束标识符 ‘\\0’</li>\n<li>sizeof 计算的是占空间的大小会计算进去</li>\n</ul>\n<h3 id=\"字符串的翻转\"><a href=\"#字符串的翻转\" class=\"headerlink\" title=\"字符串的翻转\"></a>字符串的翻转</h3><p>*<em>方法一 *</em></p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define n 50\n\nint main()\n{\n    //输入字符\n    char arr[n]={0};\n    scanf(&quot;%s&quot;,arr);\n    char *p=arr;\n    char *q=&amp;arr[strlen(arr)-1];\n    int i=0;\n    //用指针p指向首地址，q指向字符的尾地址\n    for(i=0;i&lt;strlen(arr)/2;i++)\n    {    \n        char tmp= *(p+i);\n         *(p+i)=*(q-i);\n         *(q-i)=tmp;\n    }\n    puts(arr);\n    return 0;\n}</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216205158640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>方法二</strong></p>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main()\n{\n    char str[100]={0};\n    gets(str);\n    char *p=str;\n    char *q=str+strlen(str)-1;\n\n    while(p&lt;q)\n    {\n        int tmp=*p;\n        *p=*q;\n        *q=tmp;\n        p++;\n        q--;\n    }\n    puts(str);\n    return 0;\n}</code></pre>\n<h3 id=\"字符串的查找\"><a href=\"#字符串的查找\" class=\"headerlink\" title=\"字符串的查找\"></a>字符串的查找</h3><blockquote>\n<p>编写一个字符串查找函数，函数原型为：<br>char *str_search(const char *str1, const char *str2)，<br>该函数实现在字符串str1中找出字符串str2第一次出现的位置。<br>如果str2出现在str1中，则返回str2在str1中出现的首地址，<br>如果在str1中没有与str2匹配的字符串则返回NULL</p>\n</blockquote>\n<pre><code class=\"c\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nchar *str_search( char *str1, char *str2 );\n\nint main()\n{\n    //定义两个字符串\n    char str1[20] = {0};\n    char str2[20] = {0};\n    //赋值\n    scanf(&quot;%s&quot;,str1);\n    scanf(&quot;%s&quot;,str2);\n    char *q = str_search(str1,str2);\n    printf(&quot;%s\\r\\n&quot;,q);\n    return 0;\n}\n\nchar *str_search( char *str1, char *str2 )\n{\n    //定义一个指针指向 str1\n    char *p = str1;\n    //逐个移动比较\n    int i = 0;\n    for( i=0; i &lt; strlen(str1); i++ )\n    {\n        char tmp = *( p+strlen(str2)+i );\n        *( p+strlen(str2)+i ) = &#39;\\0&#39;;\n        //比较两个字符串\n        if( 0 == strcmp( str1+i, str2 ) )\n        {\n            return p+i;\n        }    \n        *( p+strlen(str2)+i ) = tmp;\n    }\n    return NULL;\n}    </code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200216210417995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n"},{"title":"hexo+gitee搭建私人博客成功避开所有坑","author":"Mr Zhai","avatar":"https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png","authorLink":"https://zfq0620.gitee.io/","authorAbout":"学习中...","authorDesc":"学习中...","date":"2020-02-05T08:12:00.000Z","comments":1,"keywords":"搭建个人博客","description":"搭建个人博客","photos":["https://pic2.zhimg.com/v2-f9654b817205f6af3e472af284ecc2b2_1200x500.jpg"],"_content":"\n## 一.简介\n- 为什么要搭建博客，因为某天突然看到好多大神级别的人物在发自己搭建的博客，效果特别的好，作为小白的我看了之后，蠢蠢欲动，于是乎一下走上了不归的试坑道路\n\n- 搭建个人博客，一方面可以记录我们生活的方方面面，按照自己的需求设计自己的模块，可以说是私人订制了，另一方面就是给别人提供了一种了解你自己的渠道，可以说是自己的一个名片，因为我们需要的是让更多的人认识我们，而不是我们认识更多的人\n\n>在此请允许我秀一下成功后的喜悦，[我的博客](https://zfq0620.gitee.io/)\n\n## 二.为什么使用hexo+码云搭建\n1. 我感觉搭建博客最简单的方法就是，在一个服务器上面去搭建，比如说阿里云，腾讯云等等，我们只需要在服务器的文件系统上传压缩包并解压，用测试域名就可以看到效果了，但是现在服务器都是收费的，从理想的角度来考虑，当然要选择一个可以长期使用而且不收费的服务器\n\n2. 所有我们选择码云，因为码云上有gitee pages(免费的静态网页托管服务)，目前码云支持Jekyll、Hugo、Hexo编译静态资源，不知道什么是[Jekyll、Hugo、Hexo](https://gitee.com/help/articles/4136#article-header0) 可以打开链接看看\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307165045742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 选择hexo的原因是，hexo基于Node.js实现的，而且目前主流的vue前端一般都是使用npm或者yarn来跑项目，因此使用hexo搭建博客比较简单\n\n## 三.hexo 本地博客搭建\n**这里我以windows系统为例，因为我条件限制，希望理解**\n### 1. 准备\n这里我们需要下载安装两个软件，我们就去官网下载一下[node.js](https://nodejs.org/en/)和 [git](https://git-scm.com/download/win)，如何git 下载比较慢的话，在下面说码云使用教程模块，也有下载链接\n\n### 2.Node.js 的安装配置\n我们下载完 node.js 进行安装就可以了。\n>关于配置可以参考这两篇文章\n>1. [node.js的安装](https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=2&sn=643a205068a006fb162c2c1397d42d47&chksm=fcf0887acb87016ca195976dbedb279c1c7f4c579016cca11143f21a6dffbb89080d0cabf44d&scene=21#wechat_redirect)\n>2. [node.js的环境配置](https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=3&sn=9f7895c0f5ba0e29b93afdc140bda9e6&chksm=fcf0887acb87016cca4e902de7a501c52368ea52bebbe6e75cb10ea8b784c13f5dcabf042ca3&scene=21#wechat_redirect)\n\n### 3.hexo 的安装\n```c\n//接下来我们安装hexo，打开git 命令行，执行如下命令\n$ npm install hexo-cli -g\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307170441173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：输入hexo 按回车，出现下面help 就说明安装成功\n### 4.初始化项目文件\n在准备放项目文件的目录，可以通过windows的cmd终端或者git bash 执行如下的命令\n\n```c\nhexo init blog   //注意：blog为项目的文件夹名可自定义\n```\n执行命令就会开始下载文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307171000690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n下载成功之后的目录是这样的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030719010916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307191025235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 5.本地测试项目\n输入常用的hexo 命令进行本地的测试\n\n```c\nhexo clean //清空已经存在的hexo网站文件\nhexo generate(可简写g) //依据网页文件和新的css样式生成新的网站文件\nhexo server(可简写为s) //启动本地服务器，可以在localhost：4000查看网站修改效果\n```\n\n我们先 输入 hexo g 生成网站文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194109630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n然后再启动本地服务器，我在在浏览器输入 http://localhost:4000 就能看到样式内容了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194337111.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194654587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n到这里本地测试就结束了，关键我们要放在服务器上面，本地测试适用于我们，一边修改代码，一边刷新网页查看修改好的样子\n\n## 四.主题模块\n1. 一般默认安装的主题是一个 landscape 主题，但是我感觉不是很花哨，而且hexo的主题特别多，都挺漂亮的，我们可以选择更改\n\t>[hexo官方主题：https://hexo.io/themes/](https://hexo.io/themes/)\n\n2. 给大家推荐一个主题 sakura，我搭建的主题就是这个，效果还是挺不错的,[sakura下载链接](https://github.com/honjun/hexo-theme-sakura)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307223006950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n3. 下载之后，我们将hexo-theme-sakura-master中的主题样式复制到 根目录下的 theme 目录下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307222330953.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030722243065.png)\n4. 修改更目录下的配置文件 _config.yml\n\n>注意\n>theme： sakura    //此处的主题名字要和theme文件夹下主题名一致\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307222845632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 重新运行测试,查看效果\n\n```c\nhexo clean\nhexo g\nhexo s\n```\n\n## 五.码云部署\n1. 首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下[码云入门](https://blog.csdn.net/weixin_45631738/article/details/104414876)\n2. 当然注册账号我们可以直接进入码云官网：[https://gitee.com/](https://gitee.com/)都是中文一看就会的那种\n3. 创建仓库\n\t特别要注意这里有个大坑：`仓库名称，使用语言(JavaScript)，访问权限(公开)`\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307201109990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307201826785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>作为小白的我，成功的掉进这个坑里爬了好几天，没爬出来，最终请教大神帮忙，才发现是此处的原因。\n>当时，写的仓库名不是我的用户名，导致码云pages部署的路径有问题，导致相对路径不对，读不到css样式和js运行文件，所有进去后就是这个样子，所以依次告警大家不要入坑\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307224725494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n\n4. 获取仓库地址\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307202408310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 修改配置文件 在blog主目录下找到 _config.yml 打开进行配置，在代码的最底下找到此处\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307202747687.png)\n\t修改之后的样子，\n\t**特别注意这里还有个坑**：`修改代码时候注意空格`，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307203008590.png)\n\n6. 开始部署，我们需要属于以下命令\n\t\n\n```C\nnpm install hexo-deployer-git --save\nhexo g  //生成网站文件\nhexo d  //上传到远程在码云上新建的仓库\n\n//也可以采用一键部署\nhexo g --d\n```\n\n此时会弹出对话框让我们输入码云的用户名和密码，我们输完以后，就会开始上传，在本地文件夹中会多出来.deploy_git文件夹（上传的是此外文件夹下的内容，也就是生成的网站文件）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307205213501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n登录码云账户，打开和自己用户名相同的仓库观察，如果出现和.deploy_git或者public文件夹下的文件就证明文件上传成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307205625309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n7. 开启pages功能\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307210149690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307210929528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t这样我们就可以点击生成的域名来看我们搭建的效果了[https://zfq0620.gitee.io](https://zfq0620.gitee.io)\n\n\n## 六.博客使用\n### 1.编写文章\n>首先我给大家推荐一个软件 vsCode,这个软件占用空间很小，插件很多，功能特别强大，我们可以打开我们整个文件夹，进行修改代码，写文章，对我们提高效率很有帮助\n>下载：[vsCode.exe](https://www.lanzous.com/ia2kt9a)\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200309100627872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**方法一**\n通过命令来实现\n\n```c\nhexo new hello  //hello 为博客的文件名\n```\n同时会在 根目录下 /source/_posts 目录下生成hello.md\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307213138179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**方法二**\n手动到根目录下 /source/_posts 目录下，创建一个makedown 文件进行编写就可以了\n\n文件开头可以参考这里来写\n```c\n---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---\n文章的正文部分，可以参考markdown 语法格式来写\n```\n\n### 2.发布文章\n我们还是使用命令，推送到gitee上\n\n```c\nhexo g --d\n```\n推送成功之后，我们观察码云的远程仓库，我们的md格式的文件会自动生成到对应的目录，并且转化成html格式\n\n我们在去浏览我们的网站，如何发现和之前一样没有找到我们发布的文章，我们就到码云的page服务，去更新\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307215838546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n***\n将 csdn 博客导出在我们自己新建的博客中的方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307220217873.png)\n点击导出，格式为makedown，复制到 /source/_posts 目录下，并加以修改添加一下部分，进行分类\n```c\n---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---\n```\n\n\n\n\n","source":"_posts/6.hexo+gitee(码云)搭建个人博客避开所有坑.md","raw":"---\ntitle: hexo+gitee搭建私人博客成功避开所有坑\nauthor: Mr Zhai\navatar: https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/DestCropImage.png\nauthorLink: https://zfq0620.gitee.io/ \nauthorAbout: 学习中... \nauthorDesc: 学习中...\ncategories: 技术\ndate: 2020-2-5 16:12:00\ncomments: true\ntags: \n - 前端\n\nkeywords: 搭建个人博客\ndescription:  搭建个人博客\nphotos: https://pic2.zhimg.com/v2-f9654b817205f6af3e472af284ecc2b2_1200x500.jpg\n---\n\n## 一.简介\n- 为什么要搭建博客，因为某天突然看到好多大神级别的人物在发自己搭建的博客，效果特别的好，作为小白的我看了之后，蠢蠢欲动，于是乎一下走上了不归的试坑道路\n\n- 搭建个人博客，一方面可以记录我们生活的方方面面，按照自己的需求设计自己的模块，可以说是私人订制了，另一方面就是给别人提供了一种了解你自己的渠道，可以说是自己的一个名片，因为我们需要的是让更多的人认识我们，而不是我们认识更多的人\n\n>在此请允许我秀一下成功后的喜悦，[我的博客](https://zfq0620.gitee.io/)\n\n## 二.为什么使用hexo+码云搭建\n1. 我感觉搭建博客最简单的方法就是，在一个服务器上面去搭建，比如说阿里云，腾讯云等等，我们只需要在服务器的文件系统上传压缩包并解压，用测试域名就可以看到效果了，但是现在服务器都是收费的，从理想的角度来考虑，当然要选择一个可以长期使用而且不收费的服务器\n\n2. 所有我们选择码云，因为码云上有gitee pages(免费的静态网页托管服务)，目前码云支持Jekyll、Hugo、Hexo编译静态资源，不知道什么是[Jekyll、Hugo、Hexo](https://gitee.com/help/articles/4136#article-header0) 可以打开链接看看\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307165045742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n3. 选择hexo的原因是，hexo基于Node.js实现的，而且目前主流的vue前端一般都是使用npm或者yarn来跑项目，因此使用hexo搭建博客比较简单\n\n## 三.hexo 本地博客搭建\n**这里我以windows系统为例，因为我条件限制，希望理解**\n### 1. 准备\n这里我们需要下载安装两个软件，我们就去官网下载一下[node.js](https://nodejs.org/en/)和 [git](https://git-scm.com/download/win)，如何git 下载比较慢的话，在下面说码云使用教程模块，也有下载链接\n\n### 2.Node.js 的安装配置\n我们下载完 node.js 进行安装就可以了。\n>关于配置可以参考这两篇文章\n>1. [node.js的安装](https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=2&sn=643a205068a006fb162c2c1397d42d47&chksm=fcf0887acb87016ca195976dbedb279c1c7f4c579016cca11143f21a6dffbb89080d0cabf44d&scene=21#wechat_redirect)\n>2. [node.js的环境配置](https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=3&sn=9f7895c0f5ba0e29b93afdc140bda9e6&chksm=fcf0887acb87016cca4e902de7a501c52368ea52bebbe6e75cb10ea8b784c13f5dcabf042ca3&scene=21#wechat_redirect)\n\n### 3.hexo 的安装\n```c\n//接下来我们安装hexo，打开git 命令行，执行如下命令\n$ npm install hexo-cli -g\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307170441173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>注意：输入hexo 按回车，出现下面help 就说明安装成功\n### 4.初始化项目文件\n在准备放项目文件的目录，可以通过windows的cmd终端或者git bash 执行如下的命令\n\n```c\nhexo init blog   //注意：blog为项目的文件夹名可自定义\n```\n执行命令就会开始下载文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307171000690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n下载成功之后的目录是这样的\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030719010916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307191025235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n### 5.本地测试项目\n输入常用的hexo 命令进行本地的测试\n\n```c\nhexo clean //清空已经存在的hexo网站文件\nhexo generate(可简写g) //依据网页文件和新的css样式生成新的网站文件\nhexo server(可简写为s) //启动本地服务器，可以在localhost：4000查看网站修改效果\n```\n\n我们先 输入 hexo g 生成网站文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194109630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n然后再启动本地服务器，我在在浏览器输入 http://localhost:4000 就能看到样式内容了\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194337111.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307194654587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n到这里本地测试就结束了，关键我们要放在服务器上面，本地测试适用于我们，一边修改代码，一边刷新网页查看修改好的样子\n\n## 四.主题模块\n1. 一般默认安装的主题是一个 landscape 主题，但是我感觉不是很花哨，而且hexo的主题特别多，都挺漂亮的，我们可以选择更改\n\t>[hexo官方主题：https://hexo.io/themes/](https://hexo.io/themes/)\n\n2. 给大家推荐一个主题 sakura，我搭建的主题就是这个，效果还是挺不错的,[sakura下载链接](https://github.com/honjun/hexo-theme-sakura)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307223006950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n3. 下载之后，我们将hexo-theme-sakura-master中的主题样式复制到 根目录下的 theme 目录下\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307222330953.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020030722243065.png)\n4. 修改更目录下的配置文件 _config.yml\n\n>注意\n>theme： sakura    //此处的主题名字要和theme文件夹下主题名一致\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307222845632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 重新运行测试,查看效果\n\n```c\nhexo clean\nhexo g\nhexo s\n```\n\n## 五.码云部署\n1. 首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下[码云入门](https://blog.csdn.net/weixin_45631738/article/details/104414876)\n2. 当然注册账号我们可以直接进入码云官网：[https://gitee.com/](https://gitee.com/)都是中文一看就会的那种\n3. 创建仓库\n\t特别要注意这里有个大坑：`仓库名称，使用语言(JavaScript)，访问权限(公开)`\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307201109990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307201826785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n>作为小白的我，成功的掉进这个坑里爬了好几天，没爬出来，最终请教大神帮忙，才发现是此处的原因。\n>当时，写的仓库名不是我的用户名，导致码云pages部署的路径有问题，导致相对路径不对，读不到css样式和js运行文件，所有进去后就是这个样子，所以依次告警大家不要入坑\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307224725494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n\n\n4. 获取仓库地址\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307202408310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n5. 修改配置文件 在blog主目录下找到 _config.yml 打开进行配置，在代码的最底下找到此处\n\t![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307202747687.png)\n\t修改之后的样子，\n\t**特别注意这里还有个坑**：`修改代码时候注意空格`，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307203008590.png)\n\n6. 开始部署，我们需要属于以下命令\n\t\n\n```C\nnpm install hexo-deployer-git --save\nhexo g  //生成网站文件\nhexo d  //上传到远程在码云上新建的仓库\n\n//也可以采用一键部署\nhexo g --d\n```\n\n此时会弹出对话框让我们输入码云的用户名和密码，我们输完以后，就会开始上传，在本地文件夹中会多出来.deploy_git文件夹（上传的是此外文件夹下的内容，也就是生成的网站文件）\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307205213501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n登录码云账户，打开和自己用户名相同的仓库观察，如果出现和.deploy_git或者public文件夹下的文件就证明文件上传成功\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307205625309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n7. 开启pages功能\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307210149690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307210929528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\t这样我们就可以点击生成的域名来看我们搭建的效果了[https://zfq0620.gitee.io](https://zfq0620.gitee.io)\n\n\n## 六.博客使用\n### 1.编写文章\n>首先我给大家推荐一个软件 vsCode,这个软件占用空间很小，插件很多，功能特别强大，我们可以打开我们整个文件夹，进行修改代码，写文章，对我们提高效率很有帮助\n>下载：[vsCode.exe](https://www.lanzous.com/ia2kt9a)\n>![在这里插入图片描述](https://img-blog.csdnimg.cn/20200309100627872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n\n**方法一**\n通过命令来实现\n\n```c\nhexo new hello  //hello 为博客的文件名\n```\n同时会在 根目录下 /source/_posts 目录下生成hello.md\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307213138179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n**方法二**\n手动到根目录下 /source/_posts 目录下，创建一个makedown 文件进行编写就可以了\n\n文件开头可以参考这里来写\n```c\n---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---\n文章的正文部分，可以参考markdown 语法格式来写\n```\n\n### 2.发布文章\n我们还是使用命令，推送到gitee上\n\n```c\nhexo g --d\n```\n推送成功之后，我们观察码云的远程仓库，我们的md格式的文件会自动生成到对应的目录，并且转化成html格式\n\n我们在去浏览我们的网站，如何发现和之前一样没有找到我们发布的文章，我们就到码云的page服务，去更新\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307215838546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70)\n***\n将 csdn 博客导出在我们自己新建的博客中的方法\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200307220217873.png)\n点击导出，格式为makedown，复制到 /source/_posts 目录下，并加以修改添加一下部分，进行分类\n```c\n---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---\n```\n\n\n\n\n","slug":"6.hexo+gitee(码云)搭建个人博客避开所有坑","published":1,"updated":"2020-03-10T13:24:37.348Z","layout":"post","link":"","_id":"ck7m05lws001ovgv45k0y377r","content":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><ul>\n<li><p>为什么要搭建博客，因为某天突然看到好多大神级别的人物在发自己搭建的博客，效果特别的好，作为小白的我看了之后，蠢蠢欲动，于是乎一下走上了不归的试坑道路</p>\n</li>\n<li><p>搭建个人博客，一方面可以记录我们生活的方方面面，按照自己的需求设计自己的模块，可以说是私人订制了，另一方面就是给别人提供了一种了解你自己的渠道，可以说是自己的一个名片，因为我们需要的是让更多的人认识我们，而不是我们认识更多的人</p>\n</li>\n</ul>\n<blockquote>\n<p>在此请允许我秀一下成功后的喜悦，<a href=\"https://zfq0620.gitee.io/\" target=\"_blank\" rel=\"noopener\">我的博客</a></p>\n</blockquote>\n<h2 id=\"二-为什么使用hexo-码云搭建\"><a href=\"#二-为什么使用hexo-码云搭建\" class=\"headerlink\" title=\"二.为什么使用hexo+码云搭建\"></a>二.为什么使用hexo+码云搭建</h2><ol>\n<li><p>我感觉搭建博客最简单的方法就是，在一个服务器上面去搭建，比如说阿里云，腾讯云等等，我们只需要在服务器的文件系统上传压缩包并解压，用测试域名就可以看到效果了，但是现在服务器都是收费的，从理想的角度来考虑，当然要选择一个可以长期使用而且不收费的服务器</p>\n</li>\n<li><p>所有我们选择码云，因为码云上有gitee pages(免费的静态网页托管服务)，目前码云支持Jekyll、Hugo、Hexo编译静态资源，不知道什么是<a href=\"https://gitee.com/help/articles/4136#article-header0\" target=\"_blank\" rel=\"noopener\">Jekyll、Hugo、Hexo</a> 可以打开链接看看<br><img src=\"https://img-blog.csdnimg.cn/20200307165045742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>选择hexo的原因是，hexo基于Node.js实现的，而且目前主流的vue前端一般都是使用npm或者yarn来跑项目，因此使用hexo搭建博客比较简单</p>\n</li>\n</ol>\n<h2 id=\"三-hexo-本地博客搭建\"><a href=\"#三-hexo-本地博客搭建\" class=\"headerlink\" title=\"三.hexo 本地博客搭建\"></a>三.hexo 本地博客搭建</h2><p><strong>这里我以windows系统为例，因为我条件限制，希望理解</strong></p>\n<h3 id=\"1-准备\"><a href=\"#1-准备\" class=\"headerlink\" title=\"1. 准备\"></a>1. 准备</h3><p>这里我们需要下载安装两个软件，我们就去官网下载一下<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node.js</a>和 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>，如何git 下载比较慢的话，在下面说码云使用教程模块，也有下载链接</p>\n<h3 id=\"2-Node-js-的安装配置\"><a href=\"#2-Node-js-的安装配置\" class=\"headerlink\" title=\"2.Node.js 的安装配置\"></a>2.Node.js 的安装配置</h3><p>我们下载完 node.js 进行安装就可以了。</p>\n<blockquote>\n<p>关于配置可以参考这两篇文章</p>\n<ol>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=2&sn=643a205068a006fb162c2c1397d42d47&chksm=fcf0887acb87016ca195976dbedb279c1c7f4c579016cca11143f21a6dffbb89080d0cabf44d&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">node.js的安装</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=3&sn=9f7895c0f5ba0e29b93afdc140bda9e6&chksm=fcf0887acb87016cca4e902de7a501c52368ea52bebbe6e75cb10ea8b784c13f5dcabf042ca3&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">node.js的环境配置</a></li>\n</ol>\n</blockquote>\n<h3 id=\"3-hexo-的安装\"><a href=\"#3-hexo-的安装\" class=\"headerlink\" title=\"3.hexo 的安装\"></a>3.hexo 的安装</h3><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token comment\" spellcheck=\"true\">//接下来我们安装hexo，打开git 命令行，执行如下命令</span>\n$ npm install hexo<span class=\"token operator\">-</span>cli <span class=\"token operator\">-</span>g</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307170441173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：输入hexo 按回车，出现下面help 就说明安装成功</p>\n</blockquote>\n<h3 id=\"4-初始化项目文件\"><a href=\"#4-初始化项目文件\" class=\"headerlink\" title=\"4.初始化项目文件\"></a>4.初始化项目文件</h3><p>在准备放项目文件的目录，可以通过windows的cmd终端或者git bash 执行如下的命令</p>\n<pre class=\" language-c\"><code class=\"language-c\">hexo init blog   <span class=\"token comment\" spellcheck=\"true\">//注意：blog为项目的文件夹名可自定义</span></code></pre>\n<p>执行命令就会开始下载文件<br><img src=\"https://img-blog.csdnimg.cn/20200307171000690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>下载成功之后的目录是这样的<br><img src=\"https://img-blog.csdnimg.cn/2020030719010916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307191025235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-本地测试项目\"><a href=\"#5-本地测试项目\" class=\"headerlink\" title=\"5.本地测试项目\"></a>5.本地测试项目</h3><p>输入常用的hexo 命令进行本地的测试</p>\n<pre class=\" language-c\"><code class=\"language-c\">hexo clean <span class=\"token comment\" spellcheck=\"true\">//清空已经存在的hexo网站文件</span>\nhexo <span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>可简写g<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//依据网页文件和新的css样式生成新的网站文件</span>\nhexo <span class=\"token function\">server</span><span class=\"token punctuation\">(</span>可简写为s<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">//启动本地服务器，可以在localhost：4000查看网站修改效果</span></code></pre>\n<p>我们先 输入 hexo g 生成网站文件<br><img src=\"https://img-blog.csdnimg.cn/20200307194109630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后再启动本地服务器，我在在浏览器输入 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a> 就能看到样式内容了<br><img src=\"https://img-blog.csdnimg.cn/20200307194337111.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307194654587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>到这里本地测试就结束了，关键我们要放在服务器上面，本地测试适用于我们，一边修改代码，一边刷新网页查看修改好的样子</p>\n<h2 id=\"四-主题模块\"><a href=\"#四-主题模块\" class=\"headerlink\" title=\"四.主题模块\"></a>四.主题模块</h2><ol>\n<li><p>一般默认安装的主题是一个 landscape 主题，但是我感觉不是很花哨，而且hexo的主题特别多，都挺漂亮的，我们可以选择更改</p>\n<blockquote>\n<p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo官方主题：https://hexo.io/themes/</a></p>\n</blockquote>\n</li>\n<li><p>给大家推荐一个主题 sakura，我搭建的主题就是这个，效果还是挺不错的,<a href=\"https://github.com/honjun/hexo-theme-sakura\" target=\"_blank\" rel=\"noopener\">sakura下载链接</a><br><img src=\"https://img-blog.csdnimg.cn/20200307223006950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>下载之后，我们将hexo-theme-sakura-master中的主题样式复制到 根目录下的 theme 目录下<br><img src=\"https://img-blog.csdnimg.cn/20200307222330953.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030722243065.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>修改更目录下的配置文件 _config.yml</p>\n</li>\n</ol>\n<blockquote>\n<p>注意<br>theme： sakura    //此处的主题名字要和theme文件夹下主题名一致</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307222845632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>5. 重新运行测试,查看效果</p>\n<pre class=\" language-c\"><code class=\"language-c\">hexo clean\nhexo g\nhexo s</code></pre>\n<h2 id=\"五-码云部署\"><a href=\"#五-码云部署\" class=\"headerlink\" title=\"五.码云部署\"></a>五.码云部署</h2><ol>\n<li>首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下<a href=\"https://blog.csdn.net/weixin_45631738/article/details/104414876\" target=\"_blank\" rel=\"noopener\">码云入门</a></li>\n<li>当然注册账号我们可以直接进入码云官网：<a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">https://gitee.com/</a>都是中文一看就会的那种</li>\n<li>创建仓库<br> 特别要注意这里有个大坑：<code>仓库名称，使用语言(JavaScript)，访问权限(公开)</code><br> <img src=\"https://img-blog.csdnimg.cn/20200307201109990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307201826785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><blockquote>\n<p>作为小白的我，成功的掉进这个坑里爬了好几天，没爬出来，最终请教大神帮忙，才发现是此处的原因。<br>当时，写的仓库名不是我的用户名，导致码云pages部署的路径有问题，导致相对路径不对，读不到css样式和js运行文件，所有进去后就是这个样子，所以依次告警大家不要入坑</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307224725494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"4\">\n<li><p>获取仓库地址<br> <img src=\"https://img-blog.csdnimg.cn/20200307202408310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>修改配置文件 在blog主目录下找到 _config.yml 打开进行配置，在代码的最底下找到此处<br> <img src=\"https://img-blog.csdnimg.cn/20200307202747687.png\" alt=\"在这里插入图片描述\"><br> 修改之后的样子，<br> <strong>特别注意这里还有个坑</strong>：<code>修改代码时候注意空格</code>，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定<br><img src=\"https://img-blog.csdnimg.cn/20200307203008590.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>开始部署，我们需要属于以下命令</p>\n</li>\n</ol>\n<pre class=\" language-C\"><code class=\"language-C\">npm install hexo-deployer-git --save\nhexo g  //生成网站文件\nhexo d  //上传到远程在码云上新建的仓库\n\n//也可以采用一键部署\nhexo g --d</code></pre>\n<p>此时会弹出对话框让我们输入码云的用户名和密码，我们输完以后，就会开始上传，在本地文件夹中会多出来.deploy_git文件夹（上传的是此外文件夹下的内容，也就是生成的网站文件）<br><img src=\"https://img-blog.csdnimg.cn/20200307205213501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>登录码云账户，打开和自己用户名相同的仓库观察，如果出现和.deploy_git或者public文件夹下的文件就证明文件上传成功<br><img src=\"https://img-blog.csdnimg.cn/20200307205625309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>7. 开启pages功能<br><img src=\"https://img-blog.csdnimg.cn/20200307210149690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307210929528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>    这样我们就可以点击生成的域名来看我们搭建的效果了<a href=\"https://zfq0620.gitee.io\" target=\"_blank\" rel=\"noopener\">https://zfq0620.gitee.io</a></p>\n<h2 id=\"六-博客使用\"><a href=\"#六-博客使用\" class=\"headerlink\" title=\"六.博客使用\"></a>六.博客使用</h2><h3 id=\"1-编写文章\"><a href=\"#1-编写文章\" class=\"headerlink\" title=\"1.编写文章\"></a>1.编写文章</h3><blockquote>\n<p>首先我给大家推荐一个软件 vsCode,这个软件占用空间很小，插件很多，功能特别强大，我们可以打开我们整个文件夹，进行修改代码，写文章，对我们提高效率很有帮助<br>下载：<a href=\"https://www.lanzous.com/ia2kt9a\" target=\"_blank\" rel=\"noopener\">vsCode.exe</a><br><img src=\"https://img-blog.csdnimg.cn/20200309100627872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</blockquote>\n<p><strong>方法一</strong><br>通过命令来实现</p>\n<pre class=\" language-c\"><code class=\"language-c\">hexo new hello  <span class=\"token comment\" spellcheck=\"true\">//hello 为博客的文件名</span></code></pre>\n<p>同时会在 根目录下 /source/_posts 目录下生成hello.md<br><img src=\"https://img-blog.csdnimg.cn/20200307213138179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>方法二</strong><br>手动到根目录下 /source/_posts 目录下，创建一个makedown 文件进行编写就可以了</p>\n<p>文件开头可以参考这里来写</p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论<span class=\"token punctuation\">(</span>true or false<span class=\"token punctuation\">)</span>\ndescription：描述\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n文章的正文部分，可以参考markdown 语法格式来写</code></pre>\n<h3 id=\"2-发布文章\"><a href=\"#2-发布文章\" class=\"headerlink\" title=\"2.发布文章\"></a>2.发布文章</h3><p>我们还是使用命令，推送到gitee上</p>\n<pre class=\" language-c\"><code class=\"language-c\">hexo g <span class=\"token operator\">--</span>d</code></pre>\n<p>推送成功之后，我们观察码云的远程仓库，我们的md格式的文件会自动生成到对应的目录，并且转化成html格式</p>\n<p>我们在去浏览我们的网站，如何发现和之前一样没有找到我们发布的文章，我们就到码云的page服务，去更新<br><img src=\"https://img-blog.csdnimg.cn/20200307215838546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<p>将 csdn 博客导出在我们自己新建的博客中的方法<br><img src=\"https://img-blog.csdnimg.cn/20200307220217873.png\" alt=\"在这里插入图片描述\"><br>点击导出，格式为makedown，复制到 /source/_posts 目录下，并加以修改添加一下部分，进行分类</p>\n<pre class=\" language-c\"><code class=\"language-c\"><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论<span class=\"token punctuation\">(</span>true or false<span class=\"token punctuation\">)</span>\ndescription：描述\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span></code></pre>\n","site":{"data":{}},"length":2812,"excerpt":"","more":"<h2 id=\"一-简介\"><a href=\"#一-简介\" class=\"headerlink\" title=\"一.简介\"></a>一.简介</h2><ul>\n<li><p>为什么要搭建博客，因为某天突然看到好多大神级别的人物在发自己搭建的博客，效果特别的好，作为小白的我看了之后，蠢蠢欲动，于是乎一下走上了不归的试坑道路</p>\n</li>\n<li><p>搭建个人博客，一方面可以记录我们生活的方方面面，按照自己的需求设计自己的模块，可以说是私人订制了，另一方面就是给别人提供了一种了解你自己的渠道，可以说是自己的一个名片，因为我们需要的是让更多的人认识我们，而不是我们认识更多的人</p>\n</li>\n</ul>\n<blockquote>\n<p>在此请允许我秀一下成功后的喜悦，<a href=\"https://zfq0620.gitee.io/\" target=\"_blank\" rel=\"noopener\">我的博客</a></p>\n</blockquote>\n<h2 id=\"二-为什么使用hexo-码云搭建\"><a href=\"#二-为什么使用hexo-码云搭建\" class=\"headerlink\" title=\"二.为什么使用hexo+码云搭建\"></a>二.为什么使用hexo+码云搭建</h2><ol>\n<li><p>我感觉搭建博客最简单的方法就是，在一个服务器上面去搭建，比如说阿里云，腾讯云等等，我们只需要在服务器的文件系统上传压缩包并解压，用测试域名就可以看到效果了，但是现在服务器都是收费的，从理想的角度来考虑，当然要选择一个可以长期使用而且不收费的服务器</p>\n</li>\n<li><p>所有我们选择码云，因为码云上有gitee pages(免费的静态网页托管服务)，目前码云支持Jekyll、Hugo、Hexo编译静态资源，不知道什么是<a href=\"https://gitee.com/help/articles/4136#article-header0\" target=\"_blank\" rel=\"noopener\">Jekyll、Hugo、Hexo</a> 可以打开链接看看<br><img src=\"https://img-blog.csdnimg.cn/20200307165045742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>选择hexo的原因是，hexo基于Node.js实现的，而且目前主流的vue前端一般都是使用npm或者yarn来跑项目，因此使用hexo搭建博客比较简单</p>\n</li>\n</ol>\n<h2 id=\"三-hexo-本地博客搭建\"><a href=\"#三-hexo-本地博客搭建\" class=\"headerlink\" title=\"三.hexo 本地博客搭建\"></a>三.hexo 本地博客搭建</h2><p><strong>这里我以windows系统为例，因为我条件限制，希望理解</strong></p>\n<h3 id=\"1-准备\"><a href=\"#1-准备\" class=\"headerlink\" title=\"1. 准备\"></a>1. 准备</h3><p>这里我们需要下载安装两个软件，我们就去官网下载一下<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node.js</a>和 <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">git</a>，如何git 下载比较慢的话，在下面说码云使用教程模块，也有下载链接</p>\n<h3 id=\"2-Node-js-的安装配置\"><a href=\"#2-Node-js-的安装配置\" class=\"headerlink\" title=\"2.Node.js 的安装配置\"></a>2.Node.js 的安装配置</h3><p>我们下载完 node.js 进行安装就可以了。</p>\n<blockquote>\n<p>关于配置可以参考这两篇文章</p>\n<ol>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=2&sn=643a205068a006fb162c2c1397d42d47&chksm=fcf0887acb87016ca195976dbedb279c1c7f4c579016cca11143f21a6dffbb89080d0cabf44d&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">node.js的安装</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=3&sn=9f7895c0f5ba0e29b93afdc140bda9e6&chksm=fcf0887acb87016cca4e902de7a501c52368ea52bebbe6e75cb10ea8b784c13f5dcabf042ca3&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">node.js的环境配置</a></li>\n</ol>\n</blockquote>\n<h3 id=\"3-hexo-的安装\"><a href=\"#3-hexo-的安装\" class=\"headerlink\" title=\"3.hexo 的安装\"></a>3.hexo 的安装</h3><pre><code class=\"c\">//接下来我们安装hexo，打开git 命令行，执行如下命令\n$ npm install hexo-cli -g</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307170441173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：输入hexo 按回车，出现下面help 就说明安装成功</p>\n</blockquote>\n<h3 id=\"4-初始化项目文件\"><a href=\"#4-初始化项目文件\" class=\"headerlink\" title=\"4.初始化项目文件\"></a>4.初始化项目文件</h3><p>在准备放项目文件的目录，可以通过windows的cmd终端或者git bash 执行如下的命令</p>\n<pre><code class=\"c\">hexo init blog   //注意：blog为项目的文件夹名可自定义</code></pre>\n<p>执行命令就会开始下载文件<br><img src=\"https://img-blog.csdnimg.cn/20200307171000690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>下载成功之后的目录是这样的<br><img src=\"https://img-blog.csdnimg.cn/2020030719010916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307191025235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-本地测试项目\"><a href=\"#5-本地测试项目\" class=\"headerlink\" title=\"5.本地测试项目\"></a>5.本地测试项目</h3><p>输入常用的hexo 命令进行本地的测试</p>\n<pre><code class=\"c\">hexo clean //清空已经存在的hexo网站文件\nhexo generate(可简写g) //依据网页文件和新的css样式生成新的网站文件\nhexo server(可简写为s) //启动本地服务器，可以在localhost：4000查看网站修改效果</code></pre>\n<p>我们先 输入 hexo g 生成网站文件<br><img src=\"https://img-blog.csdnimg.cn/20200307194109630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>然后再启动本地服务器，我在在浏览器输入 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a> 就能看到样式内容了<br><img src=\"https://img-blog.csdnimg.cn/20200307194337111.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307194654587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>到这里本地测试就结束了，关键我们要放在服务器上面，本地测试适用于我们，一边修改代码，一边刷新网页查看修改好的样子</p>\n<h2 id=\"四-主题模块\"><a href=\"#四-主题模块\" class=\"headerlink\" title=\"四.主题模块\"></a>四.主题模块</h2><ol>\n<li><p>一般默认安装的主题是一个 landscape 主题，但是我感觉不是很花哨，而且hexo的主题特别多，都挺漂亮的，我们可以选择更改</p>\n<blockquote>\n<p><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">hexo官方主题：https://hexo.io/themes/</a></p>\n</blockquote>\n</li>\n<li><p>给大家推荐一个主题 sakura，我搭建的主题就是这个，效果还是挺不错的,<a href=\"https://github.com/honjun/hexo-theme-sakura\" target=\"_blank\" rel=\"noopener\">sakura下载链接</a><br><img src=\"https://img-blog.csdnimg.cn/20200307223006950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>下载之后，我们将hexo-theme-sakura-master中的主题样式复制到 根目录下的 theme 目录下<br><img src=\"https://img-blog.csdnimg.cn/20200307222330953.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2020030722243065.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>修改更目录下的配置文件 _config.yml</p>\n</li>\n</ol>\n<blockquote>\n<p>注意<br>theme： sakura    //此处的主题名字要和theme文件夹下主题名一致</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307222845632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>5. 重新运行测试,查看效果</p>\n<pre><code class=\"c\">hexo clean\nhexo g\nhexo s</code></pre>\n<h2 id=\"五-码云部署\"><a href=\"#五-码云部署\" class=\"headerlink\" title=\"五.码云部署\"></a>五.码云部署</h2><ol>\n<li>首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下<a href=\"https://blog.csdn.net/weixin_45631738/article/details/104414876\" target=\"_blank\" rel=\"noopener\">码云入门</a></li>\n<li>当然注册账号我们可以直接进入码云官网：<a href=\"https://gitee.com/\" target=\"_blank\" rel=\"noopener\">https://gitee.com/</a>都是中文一看就会的那种</li>\n<li>创建仓库<br> 特别要注意这里有个大坑：<code>仓库名称，使用语言(JavaScript)，访问权限(公开)</code><br> <img src=\"https://img-blog.csdnimg.cn/20200307201109990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307201826785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><blockquote>\n<p>作为小白的我，成功的掉进这个坑里爬了好几天，没爬出来，最终请教大神帮忙，才发现是此处的原因。<br>当时，写的仓库名不是我的用户名，导致码云pages部署的路径有问题，导致相对路径不对，读不到css样式和js运行文件，所有进去后就是这个样子，所以依次告警大家不要入坑</p>\n</blockquote>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200307224725494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"4\">\n<li><p>获取仓库地址<br> <img src=\"https://img-blog.csdnimg.cn/20200307202408310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>修改配置文件 在blog主目录下找到 _config.yml 打开进行配置，在代码的最底下找到此处<br> <img src=\"https://img-blog.csdnimg.cn/20200307202747687.png\" alt=\"在这里插入图片描述\"><br> 修改之后的样子，<br> <strong>特别注意这里还有个坑</strong>：<code>修改代码时候注意空格</code>，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定<br><img src=\"https://img-blog.csdnimg.cn/20200307203008590.png\" alt=\"在这里插入图片描述\"></p>\n</li>\n<li><p>开始部署，我们需要属于以下命令</p>\n</li>\n</ol>\n<pre><code class=\"C\">npm install hexo-deployer-git --save\nhexo g  //生成网站文件\nhexo d  //上传到远程在码云上新建的仓库\n\n//也可以采用一键部署\nhexo g --d</code></pre>\n<p>此时会弹出对话框让我们输入码云的用户名和密码，我们输完以后，就会开始上传，在本地文件夹中会多出来.deploy_git文件夹（上传的是此外文件夹下的内容，也就是生成的网站文件）<br><img src=\"https://img-blog.csdnimg.cn/20200307205213501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>登录码云账户，打开和自己用户名相同的仓库观察，如果出现和.deploy_git或者public文件夹下的文件就证明文件上传成功<br><img src=\"https://img-blog.csdnimg.cn/20200307205625309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>7. 开启pages功能<br><img src=\"https://img-blog.csdnimg.cn/20200307210149690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200307210929528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>    这样我们就可以点击生成的域名来看我们搭建的效果了<a href=\"https://zfq0620.gitee.io\" target=\"_blank\" rel=\"noopener\">https://zfq0620.gitee.io</a></p>\n<h2 id=\"六-博客使用\"><a href=\"#六-博客使用\" class=\"headerlink\" title=\"六.博客使用\"></a>六.博客使用</h2><h3 id=\"1-编写文章\"><a href=\"#1-编写文章\" class=\"headerlink\" title=\"1.编写文章\"></a>1.编写文章</h3><blockquote>\n<p>首先我给大家推荐一个软件 vsCode,这个软件占用空间很小，插件很多，功能特别强大，我们可以打开我们整个文件夹，进行修改代码，写文章，对我们提高效率很有帮助<br>下载：<a href=\"https://www.lanzous.com/ia2kt9a\" target=\"_blank\" rel=\"noopener\">vsCode.exe</a><br><img src=\"https://img-blog.csdnimg.cn/20200309100627872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n</blockquote>\n<p><strong>方法一</strong><br>通过命令来实现</p>\n<pre><code class=\"c\">hexo new hello  //hello 为博客的文件名</code></pre>\n<p>同时会在 根目录下 /source/_posts 目录下生成hello.md<br><img src=\"https://img-blog.csdnimg.cn/20200307213138179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong>方法二</strong><br>手动到根目录下 /source/_posts 目录下，创建一个makedown 文件进行编写就可以了</p>\n<p>文件开头可以参考这里来写</p>\n<pre><code class=\"c\">---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---\n文章的正文部分，可以参考markdown 语法格式来写</code></pre>\n<h3 id=\"2-发布文章\"><a href=\"#2-发布文章\" class=\"headerlink\" title=\"2.发布文章\"></a>2.发布文章</h3><p>我们还是使用命令，推送到gitee上</p>\n<pre><code class=\"c\">hexo g --d</code></pre>\n<p>推送成功之后，我们观察码云的远程仓库，我们的md格式的文件会自动生成到对应的目录，并且转化成html格式</p>\n<p>我们在去浏览我们的网站，如何发现和之前一样没有找到我们发布的文章，我们就到码云的page服务，去更新<br><img src=\"https://img-blog.csdnimg.cn/20200307215838546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<p>将 csdn 博客导出在我们自己新建的博客中的方法<br><img src=\"https://img-blog.csdnimg.cn/20200307220217873.png\" alt=\"在这里插入图片描述\"><br>点击导出，格式为makedown，复制到 /source/_posts 目录下，并加以修改添加一下部分，进行分类</p>\n<pre><code class=\"c\">---\ntitle： file_name\ntag： 标签名\ncategories： 分类\ncomment： 是否允许评论(true or false)\ndescription：描述\n---</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck7m05luv000hvgv4fkd1fp9z","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lva000ovgv4enafdypi"},{"post_id":"ck7m05lu5000cvgv46wfh6t06","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvf000tvgv4ft8y13w9"},{"post_id":"ck7m05luy000ivgv41du2c5rm","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvj000wvgv43o367ywg"},{"post_id":"ck7m05lv5000mvgv44y9f6upc","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvm0010vgv46n6f887b"},{"post_id":"ck7m05luc000dvgv41mn4eo8a","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvp0014vgv42fnz3cyp"},{"post_id":"ck7m05lv8000nvgv4g2exffx6","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvs0018vgv4hu984eko"},{"post_id":"ck7m05lvd000svgv4dvv19rj1","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvu001avgv42si6g84s"},{"post_id":"ck7m05lun000gvgv4ern87e3a","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvw001dvgv49njdf5cn"},{"post_id":"ck7m05lvl000zvgv4d0mk5cub","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lvx001fvgv4f0qecj1y"},{"post_id":"ck7m05lvo0013vgv4c672hmog","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lw0001ivgv4edchezg4"},{"post_id":"ck7m05lvr0017vgv4cby0h9yy","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lw0001kvgv44quh0l7y"},{"post_id":"ck7m05lvi000vvgv45jjpcbzz","category_id":"ck7m05lvn0011vgv4gbt31och","_id":"ck7m05lw1001mvgv4brl2hu81"},{"post_id":"ck7m05lws001ovgv45k0y377r","category_id":"ck7m05luh000evgv4ebev3gtb","_id":"ck7m05lwx001qvgv40m4j92qz"}],"PostTag":[{"post_id":"ck7m05lu5000cvgv46wfh6t06","tag_id":"ck7m05lul000fvgv42txy0syq","_id":"ck7m05lv5000lvgv4760cdffc"},{"post_id":"ck7m05lv5000mvgv44y9f6upc","tag_id":"ck7m05lul000fvgv42txy0syq","_id":"ck7m05lvd000rvgv4cxch4xkm"},{"post_id":"ck7m05lv8000nvgv4g2exffx6","tag_id":"ck7m05lul000fvgv42txy0syq","_id":"ck7m05lvh000uvgv4edad8k6s"},{"post_id":"ck7m05lvd000svgv4dvv19rj1","tag_id":"ck7m05lvc000qvgv48b8v0tdd","_id":"ck7m05lvl000yvgv4al2lferw"},{"post_id":"ck7m05luc000dvgv41mn4eo8a","tag_id":"ck7m05lv0000kvgv44n7i2z8u","_id":"ck7m05lvn0012vgv4fsiq1r92"},{"post_id":"ck7m05luc000dvgv41mn4eo8a","tag_id":"ck7m05lvc000qvgv48b8v0tdd","_id":"ck7m05lvq0015vgv41hed7pj2"},{"post_id":"ck7m05lvl000zvgv4d0mk5cub","tag_id":"ck7m05lul000fvgv42txy0syq","_id":"ck7m05lvu0019vgv46t28bur3"},{"post_id":"ck7m05lun000gvgv4ern87e3a","tag_id":"ck7m05lvk000xvgv44brk7p6h","_id":"ck7m05lvv001bvgv44xsghdsw"},{"post_id":"ck7m05lvo0013vgv4c672hmog","tag_id":"ck7m05lvc000qvgv48b8v0tdd","_id":"ck7m05lvx001evgv483fa8ts4"},{"post_id":"ck7m05lvr0017vgv4cby0h9yy","tag_id":"ck7m05lvk000xvgv44brk7p6h","_id":"ck7m05lvy001gvgv47xnv0qua"},{"post_id":"ck7m05luv000hvgv4fkd1fp9z","tag_id":"ck7m05lvk000xvgv44brk7p6h","_id":"ck7m05lw0001jvgv47bl7ghwy"},{"post_id":"ck7m05luy000ivgv41du2c5rm","tag_id":"ck7m05lvc000qvgv48b8v0tdd","_id":"ck7m05lw1001lvgv4eutl0xg9"},{"post_id":"ck7m05lvi000vvgv45jjpcbzz","tag_id":"ck7m05lvz001hvgv43l1ufs6s","_id":"ck7m05lw1001nvgv4bh670egj"},{"post_id":"ck7m05lws001ovgv45k0y377r","tag_id":"ck7m05lul000fvgv42txy0syq","_id":"ck7m05lwv001pvgv4cbl523ep"}],"Tag":[{"name":"前端","_id":"ck7m05lul000fvgv42txy0syq"},{"name":"物联网","_id":"ck7m05lv0000kvgv44n7i2z8u"},{"name":"嵌入式","_id":"ck7m05lvc000qvgv48b8v0tdd"},{"name":"C语言","_id":"ck7m05lvk000xvgv44brk7p6h"},{"name":"软件应用","_id":"ck7m05lvz001hvgv43l1ufs6s"}]}}